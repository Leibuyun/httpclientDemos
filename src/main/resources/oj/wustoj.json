[{"description":"<p>输出一行字符串</p><pre><code class=\"lang-text\">\nThis is a C program\n\n</code></pre>","difficulty":"Low","hint":"","input_description":"<p>无输入</p>","output_description":"<p>输出一行字符串</p><pre><code class=\"lang-text\">\nThis is a C program\n\n</code></pre>","samples_input":[" "],"samples_output":["This is a C program"],"source":"教材例1.3","tags":["第1章 概述","C语言程序设计"],"title":"This is a C program"},{"description":"<p>从键盘输入2个整数，输出其中较大的一个值。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>在一行中包含2个整数，整数之间用空格隔开。</p>","output_description":"<p>在一行中输出2个整数的最大值。</p><p>输出格式为：max=最大整数值<br /><br /></p>","samples_input":["1 2"],"samples_output":["max=2"],"source":"教材例1.4","tags":["第1章 概述","C语言程序设计"],"title":"求2个整数的最大值"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">从键盘输入2个整数，输出其中较大的一个值。</span><br /></p><p><span style=\"color: rgb(73, 80, 96);\">将求2个整数最大值的任务定义成一个函数。</span></p><p>下面时整个程序的基本框架，<span style=\"color: rgb(227, 55, 55);\">提交时，只需要提交你的代码。</span></p><p>#include &lt;stdio.h&gt;</p><p><span style=\"color: rgb(227, 55, 55);\">//下面是你的代码所在位置</span></p><p><span style=\"color: rgb(227, 55, 55);\">。。。。。。</span></p><p><span style=\"color: rgb(227, 55, 55);\">//你的代码结束</span></p><p>int main()</p><p>{<br /></p><p style=\"margin-left: 40px;\">int a,b,c;</p><p style=\"margin-left: 40px;\">scanf(&quot;%d%d&quot;,&a,&b);</p><p style=\"margin-left: 40px;\">c=max(a,b);</p><p style=\"margin-left: 40px;\">printf(&quot;%d&quot;, c);</p><p style=\"margin-left: 40px;\">return 0;</p><p>}</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(73, 80, 96);\">在一行中包含2个整数，整数之间用空格隔开。</span><br /></p>","output_description":"<p>在一行中输出2个整数的最大值。</p><p>输出格式为：最大整数值</p>","samples_input":["1 2","1 1"],"samples_output":["2","1"],"source":"教材例1.5","tags":["第1章 概述","C语言程序设计"],"title":"设计函数求2个整数的最大值"},{"description":"<p>编写程序，在屏幕上显示如下信息。</p><p>Hello World!</p>","difficulty":"Low","hint":"","input_description":"<p>无</p>","output_description":"<p>按照要求输出上述信息。</p>","samples_input":["无"],"samples_output":["Hello World!"],"source":"教材习题1.6","tags":["基础"],"title":"Hello World!"},{"description":"<p>编写程序，在屏幕上显示如下两行信息。</p><p>Programing is fun.</p><p>Programing in language C is even more fun!</p>","difficulty":"Low","hint":"","input_description":"<p>无<br /></p>","output_description":"<p><span style=\"color: rgb(73, 80, 96);\">按照要求输出上述2行信息。</span><br /></p>","samples_input":["无"],"samples_output":["Programing is fun.\nPrograming in language C is even more fun!"],"source":"教材习题1.7","tags":["jichu"],"title":"输出2行信息"},{"description":"<p>编写程序，从键盘输入两个整数，输出它们的和。</p>","difficulty":"Low","hint":"","input_description":"<p>一行中包含2个整数，中间用空格隔开。</p>","output_description":"<p>输出2个整数的和。<br /></p>","samples_input":["3 4"],"samples_output":["7"],"source":"教材习题1.8","tags":["第1章 概述","C语言程序设计"],"title":"求2个整数的和"},{"description":"<p>编写程序，输入圆的半径，输出圆的面积和周长。</p>","difficulty":"Low","hint":"<p>$\\pi 取值 3.14 $</p>","input_description":"<p>无</p>","output_description":"<p>求圆的面积和周长<br /></p>","samples_input":["1"],"samples_output":["3.140000\n6.280000"],"source":"教材习题1.9","tags":["第1章 概述","C语言程序设计"],"title":"求圆的面积和周长"},{"description":"<p>编写程序，输出一个四位整数的各位数字。<br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(51, 51, 51);\">一个四位正整数。</span><br /></p>","output_description":"<p>按照样例要求格式输出。</p><p>格式：四位整数=个位数字+十位数字*10+百位数字*100+千位数字*1000</p>","samples_input":["1234"],"samples_output":["1234=4+3*10+2*100+1*1000"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"输出四位整数的各位数字"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算2个整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出2个整数A和B，B肯定不是0。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。</span><br /></p>","samples_input":["2 3"],"samples_output":["2 + 3 = 5\n2 - 3 = -1\n2 * 3 = 6\n2 / 3 = 0"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"整数四则运算"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算4个整数的和与平均值。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出4个整数，其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按照样例输出格式，顺序输出4个整数的和与平均值，其中平均值精确到小数点后两位。</span><br /></p>","samples_input":["1 2 3 4"],"samples_output":["Sum = 10\nAverage = 2.50"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"求整数均值"},{"description":"<p>话说孙大圣保唐僧西天取经，路上遇到一妖怪。</p><p>妖怪共有a滴血，大圣每打一棒就能使妖怪失去b滴血，妖怪一旦没血就会立即死去。大圣打了c棒将妖怪打死。</p>","difficulty":"Low","hint":"","input_description":"<p>一行中包含2个正整数a和b，证件用空格隔开。<br /></p>","output_description":"<p>输出正整数c的值。<br /></p>","samples_input":["50 18"],"samples_output":["3"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"打妖怪"},{"description":"<p><span style=\"color: rgb(77, 77, 77);\">如果已知英制长度的英尺foot和英寸inch的值，那么对应的米是(foot+inch/12)×0.3048。</span></p><p><span style=\"color: rgb(77, 77, 77);\">现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？</span></p><p><span style=\"color: rgb(77, 77, 77);\">别忘了1英尺等于12英寸。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出1个正整数，单位是厘米。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。</span><br /></p>","samples_input":["170"],"samples_output":["5 6"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"中英长度单位换算"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">如果今天是星期三，后天就是星期五；</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果今天是星期六，后天就是星期一。</span></p><p><span style=\"color: rgb(33, 37, 41);\">我们用数字1到7对应星期一到星期日。</span></p><p><span style=\"color: rgb(33, 37, 41);\">给定某一天，请你输出那天的“后天”是星期几。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">给出一个正整数</span><code>D</code><span style=\"color: rgb(33, 37, 41);\">（1</span><span style=\"color: rgb(33, 37, 41);\">≤</span><font>D</font><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">7），代表星期里的某一天。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\">后天是星期几。</span><br /></p>","samples_input":["1"],"samples_output":["3"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"后天"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">据说一个人的标准体重应该是其身高（单位：厘米）减去100、再乘以0.9所得到的公斤数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">已知市斤的数值是公斤数值的两倍。</span></p><p><span style=\"color: rgb(33, 37, 41);\">现给定某人身高，请你计算其标准体重应该是多少？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入第一行给出一个正整数</span><code>H厘米</code><span style=\"color: rgb(33, 37, 41);\">（100</span><span style=\"color: rgb(33, 37, 41);\">&lt;</span><span style=\"color: rgb(33, 37, 41);\">H</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">300），为某人身高。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出对应的标准体重，单位为市斤，保留小数点后1位。</span><br /></p>","samples_input":["169"],"samples_output":["124.2"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"标准体重和身高的对应关系"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序根据商品原价以及折扣计算出折扣价。</span><br /></p><p><span style=\"color: rgb(33, 37, 41);\">例如原价 ￥988，标明打 7 折，则折扣价应该是 ￥988 x 70% = ￥691.60。</span><span style=\"color: rgb(33, 37, 41);\"><br /></span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出商品的原价（不超过1万元的正整数）和折扣（为[1, 9]区间内的整数），其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出商品的折扣价，保留小数点后 2 位。</span><br /></p>","samples_input":["988 7"],"samples_output":["691.60"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"折扣"},{"description":"<p>对于如下图型，给定点的坐标（x，y），计算图中黄色部分的面积。</p><p style=\"margin-left: 80px;\"><img alt=\"image.png\" src=\"/public/upload/22841ca966.png\" width=\"400\" height=\"374.2916666666667\" /><br /></p>","difficulty":"Low","hint":"","input_description":"<p>两个整数x和y，均不小于0，也不超过100<br /></p>","output_description":"<p>输出面积。<br /></p>","samples_input":["90 20"],"samples_output":["3500"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"计算图形面积"},{"description":"<p>知乎上有个宝宝问：“两个小时内如何学完 C 语言？”当然，问的是“学完”并不是“学会”。</p><p>假设一本 C 语言教科书有 N 个字，这个宝宝每分钟能看 K 个字，看了 M 分钟。还剩多少字没有看？</p>","difficulty":"Low","hint":"","input_description":"<p>在一行中给出 3 个正整数，分别是教科书的总字数N（不超过 400 000）；宝宝每分钟能看的字数K（不超过 3 000）；宝宝看书的分钟数M（不超过 120）。</p><p>题目保证宝宝看完的字数不超过 N。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出宝宝还没有看的字数。</span><br /></p>","samples_input":["100000 1000 72"],"samples_output":["28000"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"两小时学完C语言"},{"description":"<p>用四位数字来表示时间，比如1106表示 11 点 6 分。</p><p>编写程序，根据起始时间和流逝的时间计算出终止时间。</p>","difficulty":"Low","hint":"","input_description":"<p><font>一行中给出 2 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。</font>题目保证起始时间和计算得到的终止时间在同一天内。</p><p><span style=\"color: rgb(33, 37, 41);\">注意：在起始时间中，当小时为个位数时，没有前导的零，即 5 点 30 分表示为 530；0 点 30 分表示为 030。</span></p><p><span style=\"color: rgb(33, 37, 41);\">流逝的分钟数可能超过 60，也可能是负数。</span><br /></p>","output_description":"<p>不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。<br /></p>","samples_input":["1120 110"],"samples_output":["1310"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"计算终止时间"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">一个物体从2000米的高空自由落下。编写程序，求它在前t秒内下落的垂直距离。设重力加速度为10米/秒</span><span style=\"color: rgb(33, 37, 41);\"><span></span><span></span><span></span>2</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","difficulty":"Low","hint":"<p>自由落体下落距离公式：$h=\\frac{1}{2}gt^2 $</p>","input_description":"<p>一个整数t。<br /></p>","output_description":"<p>输出下落的距离。</p>","samples_input":["1"],"samples_output":["5"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"自由落体"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">幼儿园里，有3个小朋友编号分别是1、2、3，他们按自己的编号顺序围坐在一张圆桌旁，每个小朋友的面前分别有x、y、z颗糖果。</span></p><p><span style=\"color: rgb(33, 37, 41);\">现在做一个分糖果游戏，从1号小朋友开始，将自己的糖果平均分成三份（如果有多余的糖果，则自己立刻吃掉），自己留一份，其余两份分给相邻座位的两个小朋友。接着，2号、3号小朋友也同样这么做。请问一轮后，每个小朋友面前分别有多少糖果？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>三个正整数x，y和z，均不超过1000。<br /></p>","output_description":"<p>按编号顺序输出三个小朋友前面的糖果数，相互之间用1个空格隔开。<br /></p>","samples_input":["8 9 10"],"samples_output":["10 8 5"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"分糖果"},{"description":"<p><img alt=\"猫1.jpg\" src=\"/public/upload/deb8b970df.jpg\" width=\"230\" height=\"254\" /><br /></p><p><span style=\"color: rgb(33, 37, 41);\">测量一个人的体积是很难的，但猫就不一样了。</span><br /></p><p><span style=\"color: rgb(33, 37, 41);\">因为猫是液体，所以可以很容易地通过测量一个长方体容器的容积来得到容器里猫的体积。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一行中给出 3 个不超过 100 的正整数，分别对应容器的长、宽、高。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中输出猫的体积。</span><br /></p>","samples_input":["6 7 8"],"samples_output":["336"],"source":"","tags":["第2章 数据类型、运算符和表达式","C语言程序设计"],"title":"猫是液体"},{"description":"<p><font>这个问题很简单，有</font><font>n</font><font>个三维点</font><font>(x,y,z)</font><font>，要求按照它们距离原点的距离来排序，若距离相等，则按照</font><font>x</font><font>的顺序递增，若</font><font>x</font><font>也相等，则按照</font><font>y</font><font>递增的顺序递增</font><font>(</font><font>依次类推</font><font>)</font><br /></p>","difficulty":"Low","hint":"","input_description":"<p><font>第一行输入一个正整数</font><font>n</font><font>（</font><font>1&lt;=n&lt;=1</font><font>00</font><font>）</font><font>,</font><font>表示有</font><font>n</font><font>个三维点</font>。</p><p><font>随后</font><font>n</font><font>行，每行包含</font><font>3</font><font>个实数</font><font>x</font><font>，</font><font>y</font><font>，</font><font>z</font><font>表示一个点的坐标</font><font>(</font><font>均在</font><font>double</font><font>类型内</font><font>)</font><font>。</font></p>","output_description":"<p><font>按照排序之后的结果，每行输出一个三维点的</font><font>x y z</font><font>方向的坐标，两个数之间以一个空格分隔。</font><br /></p>","samples_input":["4\n0 0 0\n1 1 1\n3 3 3\n-2 -2 -2"],"samples_output":["0 0 0\n1 1 1\n-2 -2 -2\n3 3 3"],"source":"","tags":["结构体"],"title":"三维 点排序"},{"description":"<p>已知三角形三条边的长度，求该三角形的面积。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>三个正实数，代表三角形的三条边的长度。<br /></p>","output_description":"<p>输出三角形的面积，格式为%.2f。<br /></p>","samples_input":["3 4 5"],"samples_output":["6.00"],"source":"教材例3.9","tags":["第3章 简单程序设计","C语言程序设计"],"title":"求三角形面积"},{"description":"<p>输入一个三位正整数，然后将它逆序输出。<br /></p><p>例如，输入123，输出为321。</p>","difficulty":"Low","hint":"","input_description":"<p>一个三位整数。<br /></p>","output_description":"<p>逆序输出该三位整数（格式为%03d）。<br /></p>","samples_input":["123"],"samples_output":["321"],"source":"教材例3.10","tags":["第3章 简单程序设计","C语言程序设计"],"title":"求三位整数的逆序数"},{"description":"<p>编写程序，输入圆的半径，计算并输出圆的周长。<br /></p>","difficulty":"Low","hint":"<p>$\\pi的取值为3.14$</p>","input_description":"<p>1个实数，表示圆的半径。<br /></p>","output_description":"<p>输出圆的周长。<br /></p>","samples_input":["6"],"samples_output":["37.680000"],"source":"教材习题3.4","tags":["第3章 简单程序设计","C语言程序设计"],"title":"计算圆的周长"},{"description":"<p>输入1个华氏温度值F，要求计算并输出对应的摄氏温度C的值。</p><p>公式为：$C = \\frac{5}{9}(F - 32) $</p>","difficulty":"Low","hint":"","input_description":"<p>1个实数，表示输入的华氏温度F的值。<br /></p>","output_description":"<p>输出对应的摄氏温度C的值。（保留六位小数）<br /></p>","samples_input":["41"],"samples_output":["5.000000"],"source":"教材习题3.7","tags":["第3章 简单程序设计","C语言程序设计"],"title":"温度转换"},{"description":"<p>在输入房间的长度和宽度之后，计算并显示房间的面积。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行1个实数，表示房间的长度。<br /></p><p>第二行1个实数，表示房间的宽度。</p>","output_description":"<p>输出房间的面积。<br /></p>","samples_input":["2\n3.7"],"samples_output":["the area of the room:7.400000"],"source":"教材习题3.8","tags":["第3章 简单程序设计","C语言程序设计"],"title":"计算房间面积"},{"description":"<p>编写程序用于超市中的记账：已知苹果每斤2.5元，鸭梨每斤1.7元，香蕉每斤2元，橘子每斤1.2元，要求输入各种水果的销售重量，计算并输出应收款的数额。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>4个实数，分别对应苹果、鸭梨、香蕉和橘子的销售重量，相互之间用空格隔开。<br /></p>","output_description":"<p>输出<span style=\"color: rgb(51, 51, 51);\">应收款的数额（保留2位小数）。</span><br /></p>","samples_input":["1 2 3 4"],"samples_output":["16.70"],"source":"教材习题3.9","tags":["第3章 简单程序设计","C语言程序设计"],"title":"水果店收款"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">世界上不同国家有不同的写日期的习惯。比如美国人习惯写成“月-日-年”，而中国人习惯写成“年-月-日”。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，自动把读入的美国格式的日期改写成中国习惯的日期。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中按照“mm-dd-yyyy”的格式给出月、日、年。</span></p><p><span style=\"color: rgb(33, 37, 41);\">题目保证给出的日期是1900年元旦至今合法的日期。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中按照“yyyy-mm-dd”的格式输出日期。</span><br /></p>","samples_input":["03-15-2017"],"samples_output":["2017-03-15"],"source":"","tags":["数据类型、运算符和表达式","C语言程序设计"],"title":"日期格式变化"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">请编写程序，输入1年期定期存款利率和存款金额，帮客户计算到期本金、利息和合计金额。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">两个实数，分别是存款金额和利率，中间用空格隔开。</span><span style=\"color: rgb(33, 37, 41);\">存款金额不超过100万元，</span><span style=\"color: rgb(33, 37, 41);\">利率为百分数，不超过10%。</span></p>","output_description":"<p>输出占三行，分别是本金、利息和合计。每个实数2位小数，右对齐。<br /></p><p>这题长度会达到11， 使用 %11.2f 输出</p>","samples_input":["201930.00 4.36"],"samples_output":["  201930.00\n    8804.15\n  210734.15"],"source":"","tags":["第3章 简单程序设计","C语言程序设计"],"title":"定期存款"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，顺序读入浮点数1、整数、字符、浮点数2，再按照字符、整数、浮点数1、浮点数2的顺序输出。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中顺序给出浮点数1、整数、字符、浮点数2，其间以1个空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中按照字符、整数、浮点数1、浮点数2的顺序输出，其中浮点数保留小数点后2位。</span><br /></p>","samples_input":["2.12 88 c 4.7"],"samples_output":["c 88 2.12 4.70"],"source":"","tags":["第3章 简单程序设计","C语言程序设计"],"title":"混合类型数据格式化输入"},{"description":"<p>请编写程序，输入整数n，快速计算：</p><p>$ s = \\frac{1}{1 \\times 2} + \\frac{1}{2 \\times 3} +\\frac{1}{3 \\times 4} + \\cdots +\\frac{1}{n \\times (n + 1)} $<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，不超过1000。</p>","output_description":"<p>输出s的值，保留5位小数。<br /></p>","samples_input":["4"],"samples_output":["0.80000"],"source":"","tags":["第3章 简单程序设计","C语言程序设计"],"title":"快速求和"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">某企业年销售额屡创新高，总经理踌躇满志计划若干年后年实现销售翻番。</span></p><p><span style=\"color: rgb(33, 37, 41);\">请编写程序，帮总经理计算该企业必须保持怎样的年销售增长率才能实现这个目标。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数，表示年数，不超过100。<br /></p>","output_description":"<p>输出年增长率（百分数，2位小数）。<br /></p>","samples_input":["5"],"samples_output":["14.87%"],"source":"","tags":["第3章 简单程序设计","C语言程序设计"],"title":"年增长率"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">计算两个双精度浮点数a和b的相除的余数，a和b都是正数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">这里余数（r）的定义是：a = k * b + r，其中 k是整数， 0 &lt;= r &lt; b。</span><br /></p>","difficulty":"Low","hint":"<p><span style=\"color: rgb(33, 37, 41);\">注意：输出时小数尾部没有多余的0，可以用%g的格式。</span><br /></p>","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一行包括两个双精度浮点数a和b，中间用空格隔开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出余数，小数尾部不带多余的0。</span><br /></p>","samples_input":["73.263 0.9973"],"samples_output":["0.4601"],"source":"","tags":["第3章 简单程序设计","C语言程序设计"],"title":"计算浮点数相除的余数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写一个程序，读入一个字母，输出与之对应的ASCII 码值。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个字母。</p>","output_description":"<p>输出字母对应的ASCII码。<br /></p>","samples_input":["A"],"samples_output":["65"],"source":"","tags":["第3章 简单程序设计","C语言程序设计"],"title":"字母对应的ASCII 码"},{"description":"<p>输入一个三位整数，判断该数是否是“水仙花数”。<br /></p><p>所谓“水仙花数”是指一个三位数，其各位数字的立方和等于该数本身。</p><p>例如：153就是一个“水仙花数”，因为 $ 1^3 + 5^3 + 3^3 = 153 $ 。</p>","difficulty":"Low","hint":"","input_description":"<p>一个三位整数。</p>","output_description":"<p>如果是<span style=\"color: rgb(51, 51, 51);\">“水仙花数”，输出“YES”，否则输出“NO”。</span><br /></p>","samples_input":["153"],"samples_output":["YES"],"source":"教材例4.1","tags":["第4章 选择结构","C语言程序设计"],"title":"判断水仙花数"},{"description":"<p>输入三个整数，将他们按照从小到大的顺序排序输出。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>3个整数，相互之间用空格隔开。<br /></p>","output_description":"<p>按照样例输出格式要求，从小到大顺序输出，整数之间用1个空格隔开。<br /></p>","samples_input":["2 1 4"],"samples_output":["a=1,b=2,c=4"],"source":"教材例4.2","tags":["第4章 选择结构","C语言程序设计"],"title":"三个整数排序"},{"description":"<p>输入一个年份值，判断这一年是否闰年。</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数。<br /></p>","output_description":"<p>按照样例输出格式输出相关信息。<br /></p>","samples_input":["2020","2021"],"samples_output":["2020 is a leap year!","2021 isn't a leap year!"],"source":"教材例4.3","tags":["第4章 选择结构","C语言程序设计"],"title":"闰年"},{"description":"<p>输入一个百分制成绩，要求输出成绩所对应的等级（A，B，C，D，E）。<br /></p><p>90及以上的分数对应的等级为A；</p><p>80及以上，但小于90的分数对应的等级为B；</p><p><span style=\"color: rgb(51, 51, 51);\">70及以上，但小于80的分数对应的等级为C；</span><br /></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">60及以上，但小于70的分数对应的等级为D；</span><br /></span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">小于60的分数对应的等级为E；</span><br /></span></span></p>","difficulty":"Low","hint":"","input_description":"<p>输入一个百分制分数（0~100）。<br /></p>","output_description":"<p>按照样例输出格式输出。<br /></p>","samples_input":["87"],"samples_output":["score=87,grade:B"],"source":"教材例4.4","tags":["第4章 选择结构","C语言程序设计"],"title":"百分制分数转换为等级"},{"description":"<p>输入月份对应的整数，输出对应月份的英文名称及其天数。<br /></p>","difficulty":"Low","hint":"<p>1~12月对应的英文名称：January，February，March，April，May，June，July，August，September，October，November，December。</p>","input_description":"<p>一个正整数，不超过12。<br /></p>","output_description":"<p>按照要求格式输出对应的英文名称及天数。如果是2月份的话，天数就输出：28/29。</p>","samples_input":["1"],"samples_output":["January,31"],"source":"教材习题4.2","tags":["第4章 选择结构","C语言程序设计"],"title":"求月份对应的英文名称及天数"},{"description":"<p>输入学生的百分制成绩，若成绩在85分以上，输出“very good”，若成绩在60~85分，输出“good”，若成绩低于60分，则输出“no good”。</p>","difficulty":"Low","hint":"","input_description":"<p>输入一个百分制分数（0~100）。<br /></p>","output_description":"<p>按照上面描述内容，输出对应信息。<br /></p>","samples_input":["90"],"samples_output":["very good"],"source":"教材习题4.3","tags":["第4章 选择结构","C语言程序设计"],"title":"学生成绩评定"},{"description":"<p>从键盘输入3个整数，找出居中的数并输出。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>3个整数，相互之间用空格隔开。<br /></p>","output_description":"<p>输出居中的整数<br /></p>","samples_input":["3 1 2"],"samples_output":["2"],"source":"教材习题4.4","tags":["第4章 选择结构","C语言程序设计"],"title":"找出3个整数居中的整数"},{"description":"<p>输入3个非0的整数，判断这3个整数能否作为三角形三条边的长度。</p>","difficulty":"Low","hint":"","input_description":"<p>3个非0的整数。<br /></p>","output_description":"<p>如果能构成三角形，输出“YES”，否则输出“NO”。<br /></p>","samples_input":["3 4 5"],"samples_output":["YES"],"source":"教材习题4.5","tags":["第4章 选择结构","C语言程序设计"],"title":"能否构成三角形"},{"description":"<p>编写程序，将用户输入的24小时时间记法转换为12小时时间记法。<br /></p><p>例如，若输入14 2 15（代表14点2分15秒），则输出2 2 15 PM（代表下午2点2分15秒）。</p><p>若输入3 1 14，则输出3 1 14 AM。</p><p>12小时 视为 0 PM</p>","difficulty":"Low","hint":"","input_description":"<p>3个整数，相互之间用空格隔开，分别代表24小时时间记法的时、分和秒。输入时间确保正确。</p>","output_description":"<p>输出对应的12小时时间记法，相互之间用1个空格隔开。<br /></p>","samples_input":["14 2 15","3 1 14"],"samples_output":["2 2 15 PM","3 1 14 AM"],"source":"教材习题4.6","tags":["第4章 选择结构","C语言程序设计"],"title":"24小时时间记法转12小时时间记法"},{"description":"<p>编写程序，根据输入的x值计算y和z的值并输出。</p><p>$y = \\begin{cases}x^2 + 1 & x\\leq 2.5 \\\\x^2 - 1 & x &gt; 2.5\\end{cases}$</p><p>$z = \\begin{cases}3x + 5 & 1 \\leq x &lt; 2 \\\\2\\sin x - 1 & 2 \\leq x &lt; 3 \\\\\\sqrt{1 + x^2} & 3 \\leq x &lt; 5 \\\\x^2 - 2x + 5 & 5 \\leq x &lt; 8\\end{cases}$</p>","difficulty":"Low","hint":"","input_description":"<p>实数x。</p>","output_description":"<p>包括2行，分别输出y和z的值。</p>","samples_input":["2.5"],"samples_output":["7.250000\n0.196944"],"source":"教材习题4.7","tags":["第4章 选择结构","C语言程序设计"],"title":"按公式计算y和z的值"},{"description":"<p>企业发放的奖金根据利润提成。</p><p>利润低于或等于10万元时，奖金可提10%；</p><p>利润高于10万元，低于或等于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；</p><p>利润高于20万元，低于或等于40万元时，高于20万元的部分，可<span style=\"color: rgb(51, 51, 51);\">提成</span>5%；<br /></p><p><span style=\"color: rgb(51, 51, 51);\">利润高于40万元，低于或等于60万元时，高于40万元的部分，可<span style=\"color: rgb(51, 51, 51);\">提成</span>3%；</span><br /></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">利润高于60万元，低于或等于100万元时，高于60万元的部分，可<span style=\"color: rgb(51, 51, 51);\">提成</span>1.5%；</span><br /></span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">利润高于100万元时，超过100万元的部分，可<span style=\"color: rgb(51, 51, 51);\">提成</span>1%；</span><br /></span></span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">编写程序，实现从键盘收入当月利润，输出应发奖金总数。</span></span></span></p>","difficulty":"Low","hint":"","input_description":"<p>一个非负实数x，表示当月利润x元。</p>","output_description":"<p>输出奖金总数y元（包含2位小数）。<br /></p>","samples_input":["185000"],"samples_output":["16375.00"],"source":"教材习题4.8","tags":["第4章 选择结构","C语言程序设计"],"title":"计算奖金"},{"description":"<p>从键盘输入n个整数，求出它们的最大整数。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行1个正整数n。<br /></p><p>第二行，n个整数，相互之间用空格隔开。</p>","output_description":"<p>输出n个整数的最大值。<br /></p>","samples_input":["10\n1 3 6 9 0 2 8 7 4 2"],"samples_output":["9"],"source":"教材例5.1","tags":["第5章 循环结构","C语言程序设计"],"title":"求若干整数的最大值"},{"description":"<p>从键盘输入2个正整数，求它们的最大公约数。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(73, 80, 96);\">2个正整数，中间用空格隔开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(73, 80, 96);\">输出2个正整数的最大公约数。</span><br /></p>","samples_input":["6 8"],"samples_output":["2"],"source":"教材例5.2","tags":["第5章 循环结构","C语言程序设计"],"title":"最大公约数"},{"description":"<p>输入一个非负整数n，求n！。<br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(73, 80, 96);\">一个非负整数n（0</span><span style=\"color: rgb(73, 80, 96);\">≤</span><span style=\"color: rgb(73, 80, 96);\">n&lt;13）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(73, 80, 96);\">按照样例指定格式输出</span><span style=\"color: rgb(51, 51, 51);\">n！</span><span style=\"color: rgb(73, 80, 96);\">。</span><br /></p>","samples_input":["5"],"samples_output":["5!=120"],"source":"教材例5.4","tags":["第5章 循环结构","C语言程序设计"],"title":"n！"},{"description":"<p>从键盘输入一个正整数n，判断它是否素数。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>1个正整数n。<br /></p>","output_description":"<p>如果n是素数，则输出&quot;YES&quot;，否则输出&quot;NO&quot;。<br /></p>","samples_input":["5","8"],"samples_output":["YES","NO"],"source":"教材例5.5","tags":["第5章 循环结构","C语言程序设计"],"title":"素数"},{"description":"<p>有一个分数序列如下所示，求出这个数列的前n项之和。</p><h4>$ \\frac{2}{1}，\\frac{3}{2}，\\frac{5}{3}，\\frac{8}{5}，\\frac{13}{8}，\\frac{21}{13}，\\cdots $</h4>","difficulty":"Low","hint":"","input_description":"<p>1个正整数n，不超过1000。</p>","output_description":"<p>输出上述数列的前n项之和（用%lf的格式控制输出）。<br /></p>","samples_input":["10"],"samples_output":["16.479905"],"source":"教材例5.6","tags":["第5章 循环结构","C语言程序设计"],"title":"计算某分数序列的前n项之和"},{"description":"<p>编程输出如下形式的2n-1行菱形图案。（下图是n=3时的菱形图案）。</p><pre><code>  *\n ***\n*****\n ***\n  *\n</code></pre>","difficulty":"Low","hint":"","input_description":"<p>1个正整数n，n不超过100。</p>","output_description":"<p>输出<span style=\"color: rgb(51, 51, 51);\">2n-1行的菱形图案。第n行前没有空格。</span><br /></p>","samples_input":["3"],"samples_output":["  *\n ***\n*****\n ***\n  *"],"source":"教材例5.8","tags":["第5章 循环结构","C语言程序设计"],"title":"菱形图案"},{"description":"<p>输出Fibonacci数列的前n项。<br /></p><p><span style=\"color: rgb(51, 51, 51);\">Fibonacci数列：1，1，2，3，5，8，13，21，34，$ \\cdots $</span></p><p><span style=\"color: rgb(51, 51, 51);\">第一项，第二项都是1，从第三项开始的每项都是其前两项之和。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，不超过45。</p>","output_description":"<p>输出Fibonacci数列的前n项，每行输出5项，每个数据采用%10d的格式控制输出。<br /></p>","samples_input":["20"],"samples_output":["         1         1         2         3         5\n         8        13        21        34        55\n        89       144       233       377       610\n       987      1597      2584      4181      6765"],"source":"教材习题5.1","tags":["第5章 循环结构","C语言程序设计"],"title":"输出Fibonacci数列的前n项"},{"description":"<p>祖父年龄x岁，长孙y1岁，次孙y2岁，幼孙y3岁，请问要至少经过多少年，3个孙子的年龄之和同祖父的年龄相等或超过。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>4个正整数x，y1，y2和y3，相互之间用空格隔开，其中x&gt;y1&gt;y2&gt;y3，且x $ \\geq $ y1+y2+y3。</p>","output_description":"<p>输出上述问题的答案。<br /></p>","samples_input":["70 20 15 5"],"samples_output":["15"],"source":"教材习题5.2","tags":["第5章 循环结构","C语言程序设计"],"title":"祖孙年龄"},{"description":"<p>输出[m，n]范围内所有&quot;韩信点兵&quot;数。<br /></p><p>所谓韩信点兵数就是指“除以3余2，除以5余3，除以7余4”的整数。</p>","difficulty":"Low","hint":"","input_description":"<p>2个正整数m和n，$ 1 \\leq m \\leq n \\leq 100000 $。<br /></p>","output_description":"<p>首先在一行中输出所有的韩信点兵数。如果一个都没有，该行就不存在了。<br /></p><p>第二行输出第一行输出的整数个数。</p><p>整数之间用1个空格隔开，行首行末均无空格。</p>","samples_input":["1 1000"],"samples_output":["53 158 263 368 473 578 683 788 893 998\ntotal=10"],"source":"教材习题5.3","tags":["第5章 循环结构","C语言程序设计"],"title":"“韩信点兵”数"},{"description":"<p>利用下列公式计算并输出$\\pi$的值（n由键盘输入）。</p><p style=\"margin-left: 80px;\">$\\frac{\\pi}{4} = 1 - \\frac{1}{3} +\\frac{1}{5}- \\frac{1}{7} + \\cdots +\\frac{1}{4n-3} -\\frac{1}{4n-1}$</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，n不超过1000000。<br /></p>","output_description":"<p>输出<span style=\"color: rgb(51, 51, 51);\">$\\pi$的值（以%lf的格式控制输出）。</span><br /></p>","samples_input":["10000"],"samples_output":["3.141543"],"source":"教材习题5.7","tags":["第5章 循环结构","C语言程序设计"],"title":"计算π的近似值"},{"description":"<p><span style=\"color: rgb(77, 77, 77);\">一个球从100米的高度自由落下，每次落地后反弹回原来高度的一半，然后再落下，以此类推。</span></p><p><span style=\"color: rgb(77, 77, 77);\">求它在第n次落</span><span style=\"color: rgb(77, 77, 77);\">地时，共经过多少米？第n次反弹的高度是多少？</span></p>","difficulty":"Low","hint":"","input_description":"<p>1个正整数n，n不超过20。<br /></p>","output_description":"<p>依次输出<span style=\"color: rgb(77, 77, 77);\">第n次落</span><span style=\"color: rgb(77, 77, 77);\">地时经过的距离和第n次反弹的高度，每个数据采用%lf的格式控制输出，两数据之间用1个空格隔开。</span><br /></p>","samples_input":["5"],"samples_output":["287.500000 3.125000"],"source":"教材习题5.8","tags":["第5章 循环结构","C语言程序设计"],"title":"小球自由落体"},{"description":"<p>鸡和兔同笼，其中共有m个头，n只脚。请计算笼中<span style=\"color: rgb(51, 51, 51);\">鸡和兔各有多少只？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>2个正整数m和n，中间用空格隔开。<br /></p>","output_description":"<p>如果有解，请依次输出<span style=\"color: rgb(51, 51, 51);\">鸡和兔的只数，中间用1个空格隔开。否则输出&quot;Error&quot;。</span><br /><br /></p>","samples_input":["25 80"],"samples_output":["10 15"],"source":"教材习题5.9","tags":["第5章 循环结构","C语言程序设计"],"title":"鸡兔同笼"},{"description":"<p>输出[m，n]范围内，能被3整除，且至少有一位数字是5的所有整数。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>包含2个正整数m和n，之间用空格隔开。$1 \\leq m \\leq n \\leq 10000 $<br /></p>","output_description":"<p>输出所有满足条件的整数，整数之间用1个空格隔开，行首行末均无空格。如果不存在，请输出&quot;No exist&quot;。</p>","samples_input":["1 100"],"samples_output":["15 45 51 54 57 75"],"source":"教材习题5.10","tags":["第5章 循环结构","C语言程序设计"],"title":"含数字5且是3的倍数"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">输出[m，n]范围内的守形数。</span></p><p><span style=\"color: rgb(73, 80, 96);\">若某数的平方的低位与该数本身相同，则称该数为守形数。</span><br /></p><p><span style=\"color: rgb(73, 80, 96);\">例如，25就是守形数，因为25的平方是625，而625的低位25与原数25相同。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(73, 80, 96);\">包含2个正整数m和n，之间用空格隔开。</span><span style=\"color: rgb(73, 80, 96);\">2≤m≤n≤10000</span><br /></p>","output_description":"<p><span style=\"color: rgb(73, 80, 96);\">输出所有满足条件的整数，整数之间用1个空格隔开，行首行末均无空格。如果不存在，请输出&quot;No exist&quot;。</span><br /></p>","samples_input":["2 100"],"samples_output":["5 6 25 76"],"source":"教材习题5.11","tags":["第5章 循环结构","C语言程序设计"],"title":"守形数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，</span><span style=\"color: rgb(33, 37, 41);\">用指定字符</span><span style=\"color: rgb(33, 37, 41);\">在屏幕上画一个正方形。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">给出正方形边长</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">3≤N≤100</span><span style=\"color: rgb(33, 37, 41);\">）和组成正方形边的某种字符</span><code>C</code><span style=\"color: rgb(33, 37, 41);\">，间隔一个空格。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出由给定字符</span><code>C</code><span style=\"color: rgb(33, 37, 41);\">画出的正方形。</span></p><p><span style=\"color: rgb(33, 37, 41);\">但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，输出的行数实际上是列数的50%（四舍五入取整）。</span><br /></p>","samples_input":["10 a"],"samples_output":["aaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\naaaaaaaaaa\n"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"画方块"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，求</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">个有理数的和。</span></p><p><span style=\"color: rgb(33, 37, 41);\">每个有理数均以</span><code>分子/分母</code><span style=\"color: rgb(33, 37, 41);\">的形式给出，你输出的和也必须是有理数的形式。</span><br /></p>","difficulty":"Mid","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行给出一个正整数</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">100）。</span></p><p><span style=\"color: rgb(33, 37, 41);\">随后一行</span><span style=\"color: rgb(33, 37, 41);\">给出</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">个有理数，中间用空格隔开，每个有理数均以<code>分子/分母</code><span style=\"color: rgb(33, 37, 41);\">的形式给出</span>。</span></p><p><span style=\"color: rgb(33, 37, 41);\">题目保证所有分子和分母都在<b>long long</b>范围内。另外，负数的符号一定出现在分子前面。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出上述数字和的最简形式 —— 即将结果写成</span><code>整数部分 分数部分</code><span style=\"color: rgb(33, 37, 41);\">，其中分数部分写成</span><code>分子/分母</code><span style=\"color: rgb(33, 37, 41);\">，要求分子小于分母，且它们没有公因子。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果<span style=\"color: rgb(33, 37, 41);\">结果的</span>分数部分为0，则只输出整数部分</span><span style=\"color: rgb(33, 37, 41);\">；然后，</span><span style=\"color: rgb(33, 37, 41);\">如果结果的整数部分为0，则只输出分数部分</span><span style=\"color: rgb(33, 37, 41);\">。</span></p>","samples_input":["5\n2/5 4/15 1/30 -2/60 8/3"],"samples_output":["3 1/3"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"N个有理数求和"},{"description":"<p>输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出<code>fu</code>字。十个数字对应的拼音如下：</p><pre><code>0: ling     1: yi     2: er     3: san     4: si\n5: wu       6: liu    7: qi     8: ba      9: jiu\n</code></pre>","difficulty":"Mid","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个整数（int范围内）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如整数1234对应的拼音为：</span><code>yi er san si</code><br /></p>","samples_input":["-600"],"samples_output":["fu liu ling ling"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"念数字"},{"description":"<p>编写程序打印如下的沙漏形状。例如给定17个“*”，要求按下列格式打印</p><pre><code>*****\n ***\n  *\n ***\n*****\n</code></pre><p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p><p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">1个正整数N（</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">10000）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">首先打印出由*组成的最大的沙漏形状；</span></p><p><span style=\"color: rgb(33, 37, 41);\">最后在一行中输出剩下没用掉的符号数。</span><br /></p>","samples_input":["19"],"samples_output":["*****\n ***\n  *\n ***\n*****\n2\n"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"打印沙漏"},{"description":"<p>一个正整数N的因子中可能存在若干连续的数字。</p><p>例如，630可以分解为3*5*6*7，其中5、6、7就是3个连续的数字。</p><p>给定任一正整数N，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。</p>","difficulty":"Mid","hint":"","input_description":"<p>一个大于1的正整数N（$ 1 &lt; N &lt; 2^{31} $）。<br /></p>","output_description":"<p>再第一行中输出最长连续因子的个数；</p><p>然后在第二行中按“因子1*因子2*……*因子k”的格式输出最小的连续因子序列，其中因子按递增顺序输出，1不算在内。</p><p>中间用1个空格隔开。</p>","samples_input":["630"],"samples_output":["3\n5*6*7"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"连续因子"},{"description":"<p>编写程序，从输入的若干整数中找到最小值最大值以及各自出现的次数。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行正整数N，不超过1000。<br /></p><p>第二行，包含N个正整数，每个整数均不超过1000。</p>","output_description":"<p>第一行输出最小值以及出现的次数。<br /></p><p>第二行输出最大值以及出现的次数。整数之间用1个空格隔开。</p>","samples_input":["10\n86 75 233 888 666 75 886 888 75 666"],"samples_output":["75 3\n888 2"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"最小值和最大值"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，从一串整数中<span style=\"color: rgb(33, 37, 41);\"></span></span><span style=\"color: rgb(33, 37, 41);\">找到“250”这个特别的数字。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出若干个绝对值不超过1000的整数，其中保证至少存在一个“250”。相互之间用空格隔开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出第一次出现的“250”是第几个数字（计数从1开始）。题目保证输出的数字在整型范围内。</span><br /></p>","samples_input":["789 -126 123 58 981 -233 250 13 250 -222"],"samples_output":["7"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"寻找250"},{"description":"<p>这里所谓的“光棍”，是指全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。</p><p>请编写程序读入一个整数<code>x</code>，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字<code>s</code>，表示<code>x</code>乘以<code>s</code>是一个光棍，第二个数字<code>n</code>是这个光棍的位数。这样的解当然不是唯一的，题目要求你输出最小的解。</p><p>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除<code>x</code>为止。</p><p>但难点在于，<code>s</code>可能是个非常大的数。 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是<span style=\"color: rgb(33, 37, 41);\">111111111111111，一共15个1。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个不以5结尾的正奇数</span><code>x</code><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">&lt;1000</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出相应的最小的</span><code>s</code><span style=\"color: rgb(33, 37, 41);\">和</span><code>n</code><span style=\"color: rgb(33, 37, 41);\">，其间以1个空格分隔。</span><br /></p>","samples_input":["31"],"samples_output":["3584229390681 15"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"整除光棍"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，对于给定的正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">，计算</span><span style=\"color: rgb(33, 37, 41);\">S=1!+2!+3!+...+N!</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个不超过10的正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\">S</span><span style=\"color: rgb(33, 37, 41);\">的值。</span><br /></p>","samples_input":["4"],"samples_output":["33"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"计算阶乘和"},{"description":"<p>专家通过多组情侣身高数据研究发现，最佳的情侣身高差遵循着一个公式：（女方的身高）×1.09 =（男方的身高）。</p><p>如果符合，你俩的身高差不管是牵手、拥抱、接吻，都是最和谐的差度。</p><p>下面就请你写个程序，为任意一位用户计算他/她的情侣的最佳身高。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行给出正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">≤20</span><span style=\"color: rgb(33, 37, 41);\">），为前来查询的用户数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">随后</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">行，每行按照“性别 身高”的格式给出前来查询的用户的性别和身高，其中“性别”为“F”表示女性、“M”表示男性；“身高”为区间 [1.0, 3.0] 之间的实数。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">对每一个查询，在一行中为该用户计算出其情侣的最佳身高，保留小数点后2位。</span><br /></p>","samples_input":["2\nM 1.75\nF 1.8"],"samples_output":["1.61\n1.96"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"最佳情侣身高差"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算序列 1 - 1/4 + 1/7 - 1/10 + ... 的前N项之和。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个正整数N，不超过1000。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出部分和的值，精确到小数点后4位。</span><br /></p>","samples_input":["10"],"samples_output":["0.8187"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求简单交错序列前N项和"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，根据公式$C_n^m = \\frac{n!}{(n-m)!\\times m!}$</span><span style=\"color: rgb(33, 37, 41);\">计算出从</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">个不同元素中取出</span><span style=\"color: rgb(33, 37, 41);\">m</span><span style=\"color: rgb(33, 37, 41);\">个元素（</span><span style=\"color: rgb(33, 37, 41);\">m≤n</span><span style=\"color: rgb(33, 37, 41);\">）的组合数。</span><br /></p>","difficulty":"Low","hint":"<p>由于n！较大，建议采用double类型。</p>","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">给出两个正整数</span><span style=\"color: rgb(33, 37, 41);\">m</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">m≤n<span style=\"color: rgb(33, 37, 41);\">≤100</span></span><span style=\"color: rgb(33, 37, 41);\">），以空格分隔。</span><br /></p>","output_description":"<p>输出组合数。<br /></p>","samples_input":["2 7"],"samples_output":["21"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求组合数"},{"description":"<p>编写程序，计算序列和的值，m&gt;和n均为正整数，且m≤n≤100。</p><p>$ m^2 + \\frac{1}{m} + (m+1)^2 + \\frac{1}{m+1} + ⋯ + n^2 + \\frac{1}{n} $</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">两个正整数</span><span style=\"color: rgb(33, 37, 41);\">m</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">m≤n<span style=\"color: rgb(33, 37, 41);\">≤100</span></span><span style=\"color: rgb(33, 37, 41);\">），其间以空格分开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出部分和的值S，精确到小数点后6位。</span><br /></p>","samples_input":["5 10"],"samples_output":["355.845635"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求平方与倒数序列的部分和"},{"description":"<p>自然常数e可以用级数 $ 1 + \\frac{1}{1!} + \\frac{1}{2!} + \\frac{1}{3!} + \\cdots + \\frac{1}{n!} + \\cdots  $ 来近似计算。</p><p>编写程序，要求对给定的非负整数n，求该级数的前n+1项和。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">非负整数</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">≤1000</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出部分和的值，保留小数点后八位。</span><br /></p>","samples_input":["10"],"samples_output":["2.71828180"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求e的近似值"},{"description":"<p>编写程序，统计给定整数M和N区间内素数的个数并对它们求和。<br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">两个正整数</span><span style=\"color: rgb(33, 37, 41);\">M</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">1<span style=\"color: rgb(33, 37, 41);\">≤</span>M ≤ N ≤ 10000</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中顺序输出</span><span style=\"color: rgb(33, 37, 41);\">M</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">区间内素数的个数以及它们的和，数字间以1个空格分隔。</span><br /></p>","samples_input":["10 31"],"samples_output":["7 143"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"统计素数并求和"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">待换的零钱数额</span><span style=\"color: rgb(33, 37, 41);\">x，整数，不少于8，不超过100。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。</span></p><p><span style=\"color: rgb(33, 37, 41);\">每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。</span></p><p><span style=\"color: rgb(33, 37, 41);\">最后一行输出“count = 换法个数”。</span><br /></p><p><span style=\"color: rgb(33, 37, 41);\">详见样例格式。</span></p>","samples_input":["13"],"samples_output":["fen5:2, fen2:1, fen1:1, total:4\nfen5:1, fen2:3, fen1:2, total:6\nfen5:1, fen2:2, fen1:4, total:7\nfen5:1, fen2:1, fen1:6, total:8\ncount = 4"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"换硬币"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">给定两个均不超过9的正整数</span><span style=\"color: rgb(33, 37, 41);\">a</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">，要求编写程序求</span><span style=\"color: rgb(33, 37, 41);\">a+aa+aaa++⋯+aa⋯a</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">个</span><span style=\"color: rgb(33, 37, 41);\">a</span><span style=\"color: rgb(33, 37, 41);\">）之和。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">两个不超过9的正整数</span><span style=\"color: rgb(33, 37, 41);\">a</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">n。</span><br /></p>","output_description":"<p>输出累加和。<br /></p>","samples_input":["2 3"],"samples_output":["246"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"特殊a串数列求和"},{"description":"<p>已知函数 $e^x$ 可以展开为如下幂级数：</p><p>$ 1 + x + \\frac{x^2}{2!} + \\frac{x^3}{3!} + \\frac{x^4}{4!} + \\cdots + \\frac{x^k}{k!} + \\cdots  $</p><p>现给定一个实数x，要求利用此幂级数部分和求 $e^x$ 的近似值，求和一直继续到最后一项的绝对值小于0.000001。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个实数</span><span style=\"color: rgb(33, 37, 41);\">x，在0到5之间，包括0和5</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出满足条件的幂级数部分和，保留小数点后5位。</span><br /></p>","samples_input":["1.2"],"samples_output":["3.32012"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求幂级数展开的部分和"},{"description":"<p>编写程序，计算给定的一系列正整数中奇数的和。</p>","difficulty":"Low","hint":"","input_description":"<p>在一行中给出一系列正整数，其间以空格分隔。</p><p>当读到零或负整数时，表示输入结束，该数字不要处理。<br /></p>","output_description":"<p>输出正整数序列中奇数的和。<br /></p>","samples_input":["8 7 4 3 70 5 9 101 -1"],"samples_output":["125"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求奇数和"},{"description":"<p>一只猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半加一个。到第N天早上想再吃时，见只剩下一个桃子了。</p><p>问：第一天共摘了多少个桃子？<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个<span style=\"color: rgb(33, 37, 41);\">正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">1&lt;N≤30</span><span style=\"color: rgb(33, 37, 41);\">）。</span></p>","output_description":"<p>输出第一天共摘了多少个桃子。<br /></p>","samples_input":["3"],"samples_output":["10"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"猴子吃桃问题"},{"description":"<p>水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。</p><p>例如：$ 153 = 1^3+ 5^3+ 3^3$</p><p>要求编写程序，计算所有N位水仙花数。</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数N（3≤N≤8）<br /></p>","output_description":"<p>按递增顺序输出所有N位水仙花数，每个数字占一行。<br /></p>","samples_input":["3"],"samples_output":["153\n370\n371\n407"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"水仙花数"},{"description":"<p>一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。</p><p>假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到N对？<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个不超过10000的正整数N。<br /></p>","output_description":"<p>输出兔子总数达到N最少需要的月数。<br /></p>","samples_input":["30"],"samples_output":["9"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"兔子繁衍问题"},{"description":"<p>黑洞数也称为陷阱数，又称“Kaprekar问题”，是一类具有奇特转换特性的数。</p><p>任何一个各位数字不全相同的三位数，经有限次“重排求差”操作，总会得到495。最后所得的495即为三位黑洞数。</p><p>所谓“重排求差”操作即组成该数的数字重排后的最大数减去重排后的最小数。（6174为四位黑洞数。）</p><p>例如，对三位数207：</p><p>第1次重排求差得：720 - 27 ＝ 693；</p><p>第2次重排求差得：963 - 369 ＝ 594；</p><p>第3次重排求差得：954 - 459 ＝ 495；</p><p>以后会停留在495这一黑洞数。</p><p>如果三位数的3个数字全相同，一次转换后即为0。</p><p>任意输入一个三位数，编程给出重排求差的过程。</p>","difficulty":"Low","hint":"","input_description":"<p>一个三位数（三位数字不全相同）。<br /></p>","output_description":"<p>按照以下格式输出重排求差的过程：</p><pre><code>序号: 数字重排后的最大数 - 重排后的最小数 = 差值\n</code></pre><p>序号从1开始，<b>直到495出现在等号右边为止</b>。</p>","samples_input":["123"],"samples_output":["1: 321 - 123 = 198\n2: 981 - 189 = 792\n3: 972 - 279 = 693\n4: 963 - 369 = 594\n5: 954 - 459 = 495"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"黑洞数"},{"description":"<p>编写程序，输出n行由大写字母A开始构成的三角形字符阵列。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n（1≤n<span style=\"color: rgb(51, 51, 51);\">≤10</span>）。<br /></p>","output_description":"<p>输出n行由大写字母A开始构成的三角形字符阵列。</p><p>格式见输出样例，各字符间用1个空格隔开。<br /></p>","samples_input":["4"],"samples_output":["A B C D\nE F G\nH I\nJ"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"输出三角形字符阵列"},{"description":"<p>对于给定的正整数N，求它的位数及其各位数字之和。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个不超过 $ 10^9 $的正整数N。</p>","output_description":"<p>输出N的位数及其各位数字之和，中间用一个空格隔开。<br /></p>","samples_input":["321"],"samples_output":["3 6"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求整数的位数及各位数字之和"},{"description":"<p>数学领域著名的“哥德巴赫猜想”的大致意思是：任何一个大于2的偶数总能表示为两个素数之和。</p><p>比如：24=5+19，其中5和19都是素数。</p><p>设计一个程序，验证20亿以内的偶数都可以分解成两个素数之和。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个偶数N，大于2，且不超过$2\\times 10^9$。</p>","output_description":"<p>在一行中按照格式“N = p + q”输出N的素数分解，其中p ≤ q均为素数。</p><p>又因为这样的分解不唯一（例如24还可以分解为7+17），要求必须输出所有解中p最小的解。<br /></p>","samples_input":["24"],"samples_output":["24 = 5 + 19"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"验证“哥德巴赫猜想”"},{"description":"<p>形如 $2^n − 1$ 的素数称为梅森数（Mersenne Number）。例如 $2^2 − 1 = 3$、 $2^3 − 1 = 7 $ 都是梅森数。</p><p>1722年，双目失明的瑞士数学大师欧拉证明了 $2^{31} − 1 = 2147483647 $ 是一个素数，堪称当时世界上“已知最大素数”的一个记录。</p><p>编写程序，对任一正整数n（ $ n \\leq 31 $ ），输出所有不超过 $2^n − 1 $ 的梅森数。</p>","difficulty":"Low","hint":"","input_description":"<p>正整数n（ $ n \\leq 31 $ ）。<br /></p>","output_description":"<p>按从小到大的顺序输出所有不超过 $2^n− 1 $ 的梅森数，每行一个。如果完全没有，则输出“None”。</p>","samples_input":["6"],"samples_output":["3\n7\n31"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"梅森数"},{"description":"<p>所谓完数就是该数恰好等于除自身外的因子之和。</p><p>例如：6=1+2+3，其中1、2、3为6的因子。</p><p>编写程序，找出任意两正整数m和n之间的所有完数。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一行中包含2个正整数m和n（1&lt;m≤n≤10000），中间以空格分隔。<br /></p>","output_description":"<p>逐行输出给定范围内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + ... + 因子k”，其中完数和因子均按递增顺序给出。</p><p>若区间内没有完数，则输出“None”。<br /></p>","samples_input":["2 30"],"samples_output":["6 = 1 + 2 + 3\n28 = 1 + 2 + 4 + 7 + 14"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"找完数"},{"description":"<p>给定不超过6的非负整数A，考虑从A开始的连续4个数字。请输出所有由它们组成的无重复数字的3位数。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>不超过6的<span style=\"color: rgb(51, 51, 51);\">非负</span>整数A。<br /></p>","output_description":"<p>输出满足条件的的3位数，要求从小到大，每行6个整数，整数间以空格分隔。<br /></p>","samples_input":["2"],"samples_output":["234 235 243 245 253 254\n324 325 342 345 352 354\n423 425 432 435 452 453\n523 524 532 534 542 543"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求符合给定条件的整数集"},{"description":"<p>编写程序，对任意给定的正整数N，求方程 $ X^2 + Y^2 = N $ 的全部正整数解。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">10000）。</span><br /></p>","output_description":"<p>输出方程的全部正整数解，其中X≤Y。</p><p>每组解占1行，两数字间以1空格分隔，按X的递增顺序输出。</p><p>如果没有解，则输出No Solution。</p>","samples_input":["884"],"samples_output":["10 28\n20 22\n"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求特殊方程的正整数解"},{"description":"<p>一条蠕虫长1寸，在一口深为N寸的井的底部。已知蠕虫每1分钟可以向上爬U寸，但必须休息1分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？</p><p>这里要求不足1分钟按1分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为0）。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">3个正整数N、U、D，其中D</span><span style=\"color: rgb(33, 37, 41);\">&lt;</span><span style=\"color: rgb(33, 37, 41);\">U，N不超过100。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出蠕虫爬出井的时间，以分钟为单位。</span><br /></p>","samples_input":["12 3 1"],"samples_output":["11"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"爬动的蠕虫"},{"description":"<p>下面是一个完整的下三角九九口诀表：</p><pre><code>1*1=1   \n2*1=2   2*2=4   \n3*1=3   3*2=6   3*3=9\n4*1=4   4*2=8   4*3=12  4*4=16\n5*1=5   5*2=10  5*3=15  5*4=20  5*5=25\n6*1=6   6*2=12  6*3=18  6*4=24  6*5=30  6*6=36\n7*1=7   7*2=14  7*3=21  7*4=28  7*5=35  7*6=42  7*7=49\n8*1=8   8*2=16  8*3=24  8*4=32  8*5=40  8*6=48  8*7=56  8*8=64\n9*1=9   9*2=18  9*3=27  9*4=36  9*5=45  9*6=54  9*7=63  9*8=72  9*9=81。\n</code></pre><p>编写程序，任意给定的一位正整数N，输出从1*1到N*N的部分口诀表。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个正整数</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">（1</span><span style=\"color: rgb(33, 37, 41);\">≤</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">9）。</span><br /></p>","output_description":"<p>输出下三角N*N部分口诀表，其中等号右边数字占4位、左对齐。<br /></p>","samples_input":["4"],"samples_output":["1*1=1   \n2*1=2   2*2=4   \n3*1=3   3*2=6   3*3=9   \n4*1=4   4*2=8   4*3=12  4*4=16  "],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"打印九九口诀表"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">输入一个大于1的整数，</span><span style=\"color: rgb(33, 37, 41);\">编写程序</span><span style=\"color: rgb(33, 37, 41);\">将其分解成若干个质因子（素数因子）积的形式。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个大于1的整数。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">将输入的正整数分解成若干个质因子积的形式，质因子的出现顺序按从小到大排列。</span><span style=\"color: rgb(33, 37, 41);\">如：40=2*2*2*5；</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果整数本身为质数或素数，直接输出，如：13=13。</span></p>","samples_input":["12480"],"samples_output":["12480=2*2*2*2*2*2*3*5*13"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"质因子分解"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">乌龟与兔子在马路上赛跑，马路边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。</span></p><p><span style=\"color: rgb(33, 37, 41);\">假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>比赛时间T（分钟）。<br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">一行中输出比赛的结果：乌龟赢输出</span><code>@_@</code><span style=\"color: rgb(33, 37, 41);\">，兔子赢输出</span><code>^_^</code><span style=\"color: rgb(33, 37, 41);\">，平局则输出</span><code>-_-</code><span style=\"color: rgb(33, 37, 41);\">；后跟1空格，再输出胜利者跑完的距离。</span><br /></p>","samples_input":["242"],"samples_output":["@_@ 726"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"龟兔赛跑"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">分数可以表示为</span><code>分子/分母</code><span style=\"color: rgb(33, 37, 41);\">的形式。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。</span></p><p><span style=\"color: rgb(33, 37, 41);\">最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个分数，分子和分母中间以斜杠</span><code>/</code><span style=\"color: rgb(33, 37, 41);\">分隔，如：</span><code>12/34</code><span style=\"color: rgb(33, 37, 41);\">表示34分之12。</span><span style=\"color: rgb(33, 37, 41);\">分子和分母都是正整数。</span></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出这个分数对应的最简分式，格式与输入的相同，即采用</span><code>分子/分母</code><span style=\"color: rgb(33, 37, 41);\">的形式表示分数。如</span><code>5/6</code><span style=\"color: rgb(33, 37, 41);\">表示6分之5。</span><br /></p>","samples_input":["66/120"],"samples_output":["11/20"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"约分最简分式"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，输入一行字符，统计每个单词的长度。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入给出一行字符。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中输出每个单词的长度。各单词长度之间用1个空格隔开。</span><br /></p>","samples_input":["How are you?"],"samples_output":["3 3 4"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"单词长度"},{"description":"<p>对任意一个自然数N0，先将其各位数字相加求和，再将其和乘以3后加上1，变成一个新自然数N1；然后对N1重复这种操作，可以产生新自然数N2；……多次重复这种操作，运算结果最终会得到一个固定不变的数Nk，就像掉入一个数字“陷阱”。</p><p>编写程序，对输入的自然数，给出其掉入“陷阱”的过程。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个自然数</span><span style=\"color: rgb(33, 37, 41);\">N0​</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">N0​不超过30000</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">对于输入的</span><span style=\"color: rgb(33, 37, 41);\">N0​</span><span style=\"color: rgb(33, 37, 41);\">，逐行输出其掉入陷阱的步骤。</span></p><p><span style=\"color: rgb(33, 37, 41);\">第</span><span style=\"color: rgb(33, 37, 41);\">i</span><span style=\"color: rgb(33, 37, 41);\">行描述</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">掉入陷阱的第</span><span style=\"color: rgb(33, 37, 41);\">i</span><span style=\"color: rgb(33, 37, 41);\">步，格式为：</span><span style=\"color: rgb(33, 37, 41);\">i</span><span style=\"color: rgb(33, 37, 41);\">:</span><span style=\"color: rgb(33, 37, 41);\">Ni​</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">i≥1</span><span style=\"color: rgb(33, 37, 41);\">）。</span></p><p><span style=\"color: rgb(33, 37, 41);\">当某一步得到的自然数结果</span><span style=\"color: rgb(33, 37, 41);\">Nk​</span><span style=\"color: rgb(33, 37, 41);\">(</span><span style=\"color: rgb(33, 37, 41);\">k≥1</span><span style=\"color: rgb(33, 37, 41);\">)与上一步</span><span style=\"color: rgb(33, 37, 41);\">Nk−1​</span><span style=\"color: rgb(33, 37, 41);\">相同时，停止输出。</span><br /></p>","samples_input":["5"],"samples_output":["1:16\n2:22\n3:13\n4:13"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"掉入陷阱的数字"},{"description":"<p>不变初心数是指这样一种特别的数，它分别乘 2、3、4、5、6、7、8、9 时，所得乘积各位数之和却不变（等于该数的各位数字之和）。</p><p>例如 18 就是这样的数：18 的 2 倍是 36，3+6=9；18 的 3 倍是 54，5+4=9；…… 18 的 9 倍是 162，1+6+2=9。</p><p>对于 18 而言，9 就是它的初心。</p><p>编写程序，输出指定范围内[ a, b ] 的所有不变初心数。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一行中给出2个正整数a和b，且 $ a \\leq b \\leq10^5 $ 。</p>","output_description":"<p>按照从小到大的顺序输出每个不变初心数，每行一个，每个不变初心数的输出格式为：<code>不变初心数(初心)</code>。</p><p>如果在<span style=\"color: rgb(51, 51, 51);\">[ a, b ] 不存在<span style=\"color: rgb(51, 51, 51);\">不变初心数，则输出<span style=\"color: rgb(51, 51, 51);\">：</span><code>None</code><span style=\"color: rgb(51, 51, 51);\">。</span></span></span></p>","samples_input":["10 100"],"samples_output":["18(9)\n45(9)\n90(9)\n99(18)"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"不变初心数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个正数的</span><span style=\"color: rgb(33, 37, 41);\">算数平均</span><span style=\"color: rgb(33, 37, 41);\">是这些数的和除以</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">，它们的</span><span style=\"color: rgb(33, 37, 41);\">调和平均</span><span style=\"color: rgb(33, 37, 41);\">是它们倒数的算数平均的倒数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算给定的一系列正数的调和平均值。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第 1 行给出正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">(</span><span style=\"color: rgb(33, 37, 41);\">≤1000</span><span style=\"color: rgb(33, 37, 41);\">)；</span></p><p><span style=\"color: rgb(33, 37, 41);\">第 2 行给出</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个正数，都在区间</span><span style=\"color: rgb(33, 37, 41);\">[0.1,100]</span><span style=\"color: rgb(33, 37, 41);\">内。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出给定数列的调和平均值，输出小数点后2位。</span><br /></p>","samples_input":["8\n10 15 12.7 0.3 4 13 1 15.6"],"samples_output":["1.61"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"调和平均"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，输入</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个学生的成绩，统计优秀、合格以及不合格的数量。学生成绩在</span><code>85</code><span style=\"color: rgb(33, 37, 41);\">分及以上评为优秀，不到</span><code>85</code><span style=\"color: rgb(33, 37, 41);\">分但是</span><code>60</code><span style=\"color: rgb(33, 37, 41);\">分及以上评为合格，不到</span><code>60</code><span style=\"color: rgb(33, 37, 41);\">分则为不合格。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行中给出非负整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">，即学生人数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">第二行给出</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个非负整数，即这</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">位学生的成绩，其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中依次输出优秀、合格、不合格的数量，中间以空格分隔。</span><br /></p>","samples_input":["7\n85 59 86 60 84 61 45"],"samples_output":["2 3 2"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"统计成绩"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，将英文字母替换加密。</span></p><p><span style=\"color: rgb(33, 37, 41);\">为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。</span></p><p><span style=\"color: rgb(33, 37, 41);\">变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。</span></p><p><span style=\"color: rgb(33, 37, 41);\">例如，字母a-&gt;B、b-&gt;C、…、z-&gt;A、A-&gt;b、B-&gt;c、…、Z-&gt;a。</span></p><p><span style=\"color: rgb(33, 37, 41);\">输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入一行字符，以回车符 &#039;\\n&#039;作为 结束符。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">将输入的一行字符中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母后输出，其他字符按原样输出。</span><br /></p>","samples_input":["Reold  Z123?"],"samples_output":["sFPME  a123?"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"英文字母替换加密"},{"description":"<p>一个二进制数，如果1的个数多于0的个数 ，则称A类数，否则称非A类数。</p><p>例如：1001，1000为非A类数，1101和1111000为A类数。</p><p>16之内对应的二进制数是A类数的为：1，3，5，6，7，11，13，14，15。所以16之内有9个A类数。</p><p>编写程序，统计小于给定整数的A类数有多少个。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">正整数N（N&lt;=400000）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出对应整数范围内A类数的个数。</span><br /></p>","samples_input":["16"],"samples_output":["9"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"A类数统计"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">做作业的时候，邻座的小盆友问你：“五乘以七等于多少？”你应该不失礼貌地围笑着告诉他：“五十三。”</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，对任何一对给定的正整数，倒着输出它们的乘积。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出两个不超过 1000 的正整数 A 和 B，其间以空格分隔。</span><br /></p>","output_description":"<p>倒着输出 A 和 B 的乘积。<br /></p>","samples_input":["5 7"],"samples_output":["53"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"就不告诉你"},{"description":"<p>编写程序，从给定 N 个正整数中得到下列三种计算结果：</p><ul><li>A1 = 能被 3 整除的最大整数</li><li>A2 = 存在整数 K 使之可以表示为 3K+1 的整数的个数</li><li>A3 = 存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</li></ul>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第一行给出一个正整数 N，随后一行给出 N 个正整数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">所有整数都不超过 100，相互间以1个空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中顺序输出 A1、A2、A3的值，其间以 1 个空格分隔。如果某个数字不存在，则对应输出</span><code>NONE</code><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","samples_input":["8\n5 8 7 6 9 1 3 10"],"samples_output":["9 3 6.5"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"整数的分类处理"},{"description":"<p>给定一个整数m，找出小于m的最大的10个素数。</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数m（ $ 30 \\leq m \\leq 20000 $ ）。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中按递减顺序输出10个满足条件的素数，相互之间用1个空格隔开。</span><br /></p>","samples_input":["229"],"samples_output":["227 223 211 199 197 193 191 181 179 173"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"小于m的最大的10个素数"},{"description":"<p>微博上有个自称“大笨钟V”的家伙，每天敲钟催促码农们爱惜身体早点睡觉。不过由于笨钟自己作息也不是很规律，所以敲钟并不定时。</p><p>一般敲钟的点数是根据敲钟时间而定的，如果正好在某个整点敲，那么“当”数就等于那个整点数；如果过了整点，就敲下一个整点数。</p><p>另外，虽然一天有24小时，钟却是只在后半天敲1~12下。例如在23:00敲钟，就是“当当当当当当当当当当当”11下，而到了23:01就会是“当当当当当当当当当当当当”12下。在午夜00:00到中午12:00期间（端点时间包括在内），笨钟是不敲的。</p><p>编写程序，根据当前时间替大笨钟敲钟。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">按照</span><code>hh:mm</code><span style=\"color: rgb(33, 37, 41);\">的格式给出当前时间。其中</span><code>hh</code><span style=\"color: rgb(33, 37, 41);\">是小时，在00到23之间；</span><code>mm</code><span style=\"color: rgb(33, 37, 41);\">是分钟，在00到59之间。</span><br /></p>","output_description":"<p>根据当前时间替大笨钟敲钟，即在一行中输出相应数量个<code>Dang</code>。如果不是敲钟期，则输出：</p><pre><code style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 12px; color: var(--text-normal); word-break: normal; background: none; border-radius: 3px; border: none; padding: 0px; margin: 0px; --color-tooltip-bg: var(--bg-base-r); --color-tooltip-text: var(--text-black-r); display: block; overflow-x: auto;\">Only hh:mm.  Too early to Dang.</code><div style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000;\"><div class=\"pc-icon clipboardIcon_2q_Ks pc-active-primary inline\" style=\"--tw-shadow: 0 0 #0000; --tw-ring-ins_t;\"></div></div></pre><p>其中<code>hh:mm</code>是输入的时间。</p>","samples_input":["19:05"],"samples_output":["DangDangDangDangDangDangDangDang"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"大笨钟"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">日本数学家古角静夫研究自然数时，发现一个有趣现象：“如果是个偶数就除2，如果是奇数就乘以3加1”，经过有限个这样的处理步骤，最后一定能得到1。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，任意输入一个自然数，给出得到结果1的运算过程。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个大于1的正整数n，不超过400000。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出每次运算步骤，直到结果为1。</span><br /></p>","samples_input":["5"],"samples_output":["5*3+1=16\n16/2=8\n8/2=4\n4/2=2\n2/2=1"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"古角猜想"},{"description":"<p>所谓“空心菱形”是指：每行由两端为*、中间为空格的字符串构成，每行的字符串中心对齐；上半部分相邻两行字符串长度差2；下半部分与上半部分对称。<br /></p><p>编写程序，输出n行<span style=\"color: rgb(51, 51, 51);\">“空心菱形”。</span></p>","difficulty":"Low","hint":"","input_description":"<p>空心菱形的高度n（n为奇数，且 $ 5 \\leq n \\leq 999 $ ）。</p>","output_description":"<p>输出n行<span style=\"color: rgb(51, 51, 51);\">空心菱形。</span></p>","samples_input":["7"],"samples_output":["   *\n  * *\n *   *\n*     *\n *   *\n  * *\n   *\n\n\n"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"编程打印空心菱形"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，输入正整数a(10000&gt;=a&gt;=2)，输出不小于a的第一对孪生素数。差是2的两个素数被称为孪生素数。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">正整数a(10000&gt;=a&gt;=2)。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出不小于a的第一对孪生素数，中间用1个空格隔开。</span><br /></p>","samples_input":["10"],"samples_output":["11 13"],"source":"","tags":["第7章 函数","第6章 数组","C语言程序设计"],"title":"孪生素数"},{"description":"<p>时光匆匆，日子一天天的过去，一个百岁老人，所活天数也不过36500多天。现在，小明突然想知道自己已经活了几天。</p><p>已知小明的出生日期和现在的日期，请你帮助小明计算出他已活的天数。</p><p>如，出生日期为2011-10-01，现在是2011-10-27，则已活的天数为26天。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>2个日期d1，d2（之间以1个空格间隔，且d2&gt;d1），分别表示小明的出生日期和现在的日期，形式都为yyyy-mm-dd。</p><p>保证输入的日期合法，而且在[1000-01-01，9999-12-31]范围内。<br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出小明已活的天数。</span><br /></p>","samples_input":["2011-10-01 2011-10-27","2008-02-01 2011-10-27"],"samples_output":["26","1364"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"2个日期之间相差天数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">回文数是一种数字。如：8008, 这个数字正读是8008,倒读也是8008,正读倒读一样，所以这个数字就是回文数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">任取一个正整数，如果不是回文数，将该数与他的倒序数相加，若其和不是回文数，则重复上述步骤，一直到获得回文数为止。</span></p><p><span style=\"color: rgb(33, 37, 41);\">例如：68变成154（68+86），再变成605（154+451），最后变成1111（605+506），而1111是回文数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">于是有数学家提出一个猜想：不论开始是什么正整数，在经过有限次正序数和倒序数相加的步骤后，都会得到一个回文数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，验证上述猜想。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数，不超过 $ 10^{6} $ 。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出两行</span><span style=\"color: rgb(33, 37, 41);\">，一行是变换的过程</span><span style=\"color: rgb(33, 37, 41);\">，一行是变换的次数。</span></p>","samples_input":["27228 "],"samples_output":["27228--->109500--->115401--->219912\n3"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"神奇的数学之回文数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，输出21世纪及以后截止某个年份以来的所有闰年年份。</span></p><p><span style=\"color: rgb(33, 37, 41);\">注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一行中给出21世纪及以后的某个截止年份。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">逐行输出满足条件的所有闰年年份，即每个年份占一行。</span></p><p><span style=\"color: rgb(33, 37, 41);\">输入若非21世纪及以后的年份则输出&quot;Invalid year!&quot;。</span><br /></p><p><span style=\"color: rgb(33, 37, 41);\"><span style=\"color: rgb(33, 37, 41);\">若不存在任何闰年，则输出“None”。</span><br /></span></p>","samples_input":["2048","2000"],"samples_output":["2004\n2008\n2012\n2016\n2020\n2024\n2028\n2032\n2036\n2040\n2044\n2048","Invalid year!"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"输出闰年"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">古希腊数学家毕达哥拉斯在自然数研究中发现，220的所有真约数（即不是自身的约数）之和为：1+2+4+5+10+11+20+22+44+55+110＝284。而284的所有真约数为1、2、4、71、 142，加起来恰好为220。人们称这样的数对为亲和数。也就是说，若两个数中任何一个数都是另一个数的真约数之和，则它们就是亲和数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，判断输入的两个整数是否是亲和数。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">两个正整数a，b（均小于1000000）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">若a，b是亲和数，是则输出“YES”，否则输出“NO”。</span><br /></p>","samples_input":["220 284"],"samples_output":["YES"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"亲和数判断"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，输入N(n&lt;=32767)，输出N以内的正整数(包括N)，使其数字之和为15，每行输出8个数。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数<span style=\"color: rgb(33, 37, 41);\">N(n&lt;=32767)</span></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">递增的顺序输出所有满足条件的正整数，每行输出8个数，每个整数输出宽度为6。如果满足条件的数一个都没有，则输出“None”。</span><br /></p>","samples_input":["98"],"samples_output":["    69    78    87    96"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"求满足条件的数（数字和）"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">“一万天以后的我”征文活动即将开始。小马的同学都想知道自己出生后第一万天纪念日的日期（出生曰算第0天）。</span></p><p><span style=\"color: rgb(33, 37, 41);\">同学们的生日为YY年MM月DD日，小马希望编一程序， 输入某同学的生日后，即可输出一万天纪念日日期。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>1个出生日期，包含3个整数，分别表示出生年、月和日，相互之间用1个空格隔开。保证输入的日期合法。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出出生日以后第一万天的日期，格式为“<span style=\"color: rgb(51, 51, 51);\">年-月-日</span>&quot;。 当月日有前导0时不输出，例1981-5-23。</span><br /></p>","samples_input":["1975 7 15"],"samples_output":["2002-11-30"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"一万天纪念日"},{"description":"<p>编写程序，输出n行杨辉三角形。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，不超过32。<br /></p>","output_description":"<p>输出n行杨辉三角形，每个数字输出宽度为10。<br /></p>","samples_input":["5"],"samples_output":["                             1\n                        1         1\n                   1         2         1\n              1         3         3         1\n         1         4         6         4         1"],"source":"","tags":["第5章 循环结构","C语言程序设计"],"title":"杨辉三角形"},{"description":"<p>从键盘输入n个整数，然后逆序输出。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行一个正整数n（不超过100）。</p><p>第二行包含n个整数。</p>","output_description":"<p>将输入的n个整数逆序输出，整数间用1个空格隔开，行首行末均无空格。<br /></p>","samples_input":["5\n1 2 3 4 5"],"samples_output":["5 4 3 2 1"],"source":"教材例6.1","tags":["第6章 数组","C语言程序设计"],"title":"逆序输出输入的整数"},{"description":"<p>输出斐波那契数列的前n项（n由键盘输入），要求每行输出5个。</p><p><span style=\"color: rgb(51, 51, 51);\">输出斐波那契数列的第1和2项均为1，从第3项开始，每项都是前2项的和。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，不超过40。<br /></p>","output_description":"<p>每行输出5个整数，每个整数采用%10d的格式输出。<br /></p>","samples_input":["20"],"samples_output":["         1         1         2         3         5\n         8        13        21        34        55\n        89       144       233       377       610\n       987      1597      2584      4181      6765"],"source":"教材例6.2","tags":["第6章 数组","C语言程序设计"],"title":"输出斐波那契数列的前n项"},{"description":"<p>输入一行字符，统计其中各个大写字母出现的次数。</p>","difficulty":"Low","hint":"","input_description":"<p>输入一行字符。<br /></p>","output_description":"<p>按照样例指定格式输出每个大写字母出现的次数。每行输出5个字符及其出现的次数，行首行中行末均没有空格。<br /></p>","samples_input":["AABBCCxyYzEEE\n"],"samples_output":["A(2)B(2)C(2)D(0)E(3)\nF(0)G(0)H(0)I(0)J(0)\nK(0)L(0)M(0)N(0)O(0)\nP(0)Q(0)R(0)S(0)T(0)\nU(0)V(0)W(0)X(0)Y(1)\nZ(0)"],"source":"教材例6.3","tags":["第6章 数组","C语言程序设计"],"title":"统计各大写字母的个数"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">从键盘输入n个整数（n不超过100），将他们从</span><span style=\"color: rgb(73, 80, 96);\">小</span><span style=\"color: rgb(73, 80, 96);\">到</span><span style=\"color: rgb(73, 80, 96);\">大</span><span style=\"color: rgb(73, 80, 96);\">排序后按顺序输出。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(73, 80, 96);\">包含2行，第1行包含一个正整数n（不超过100），第2行包括n个整数，整数之间用1个空格隔开。</span><br /></p>","output_description":"<p>输出排序后的整数序列，整数间用1个空格隔开，行首行末均无空格。</p>","samples_input":["10\n3 2 8 5 9 7 4 1 0 6"],"samples_output":["0 1 2 3 4 5 6 7 8 9"],"source":"教材例6.4","tags":["第6章 数组","C语言程序设计"],"title":"冒泡排序"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">从键盘输入n个（n不超过100）从</span><span style=\"color: rgb(73, 80, 96);\">小</span><span style=\"color: rgb(73, 80, 96);\">到</span><span style=\"color: rgb(73, 80, 96);\">大</span><span style=\"color: rgb(73, 80, 96);\">已排好序的整数存入数组，然后在数组中采用二分法查找整数x。</span></p><p><span style=\"color: rgb(73, 80, 96);\">如果找到，则输出x在数组中的下标；如果没有找到，则输出“Not found”。</span></p>","difficulty":"Low","hint":"","input_description":"<p>第1行1个正整数n（不超过100）；</p><p>第2行共n个整数，从小到大排列；</p><p>第3行1个待查找整数x。</p>","output_description":"<p><span style=\"color: rgb(73, 80, 96);\">如果找到，输出x在数组中的下标，否则输出字符串“</span>Not found<span style=\"color: rgb(73, 80, 96);\">”。</span><br /></p>","samples_input":["10\n2 3 5 7 8 11 14 35 68 70\n35"],"samples_output":["7"],"source":"教材例6.5","tags":["第6章 数组","C语言程序设计"],"title":"二分查找"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">从键盘输入一个n行m列的矩阵，要求输出其转置矩阵（n和m均不超过10）。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含2个正整数n和m（均不超过10）。<br /></p><p>接下来的n行，每行m个整数，表示矩阵数据。</p>","output_description":"<p>首先输出转置前矩阵的数据，<span style=\"color: rgb(51, 51, 51);\">共n行，每行m个数据；</span></p><p>接着输出<span style=\"color: rgb(51, 51, 51);\">转置后矩阵的数据，</span>共m行，每行n个数据。</p><p>整数之间用1个空格隔开，行首行末均无空格。</p>","samples_input":["3 2\n1 2\n3 4\n5 6"],"samples_output":["1 2\n3 4\n5 6\n1 3 5\n2 4 6"],"source":"教材例6.6","tags":["第6章 数组","C语言程序设计"],"title":"矩阵转置"},{"description":"<p>找出m×n的二维数组中的最小元素，把该元素所在行的各个元素(假设只有一个最小元素)与二维数组的末行元素互换。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含2个正整数m和n，分别表示二维数组的行数和列数，其中m和n均不超过30。<br /></p><p>接下来包含m行，每行n个整数，表示二维数组各位置上的元素。</p><p>整数之间用空格隔开。保证二维数组中最小元素只有1个。</p>","output_description":"<p>参照样例输出格式，分别输出处理前和处理后的二维数组。每个整数按照%4d的格式输出。</p>","samples_input":["4 4\n9 3 5 7\n4 1 3 8\n2 4 5 6\n6 5 3 7"],"samples_output":["before:\n   9   3   5   7\n   4   1   3   8\n   2   4   5   6\n   6   5   3   7\nafter:\n   9   3   5   7\n   6   5   3   7\n   2   4   5   6\n   4   1   3   8"],"source":"教材例6.7","tags":["第6章 数组","C语言程序设计"],"title":"找出二维数组中的最小元素"},{"description":"<p>从键盘读入一串字符，以 &#039;!&#039; 结束，分别统计其中数字0，1，2，<b>...</b>，9出现的次数。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>输入一行字符串。<br /></p>","output_description":"<p>按照样例格式要求输出各数字字符出现的次数。<br /></p>","samples_input":["1902d76k5910!"],"samples_output":["The character 0 appears 2 times\nThe character 1 appears 2 times\nThe character 2 appears 1 times\nThe character 3 appears 0 times\nThe character 4 appears 0 times\nThe character 5 appears 1 times\nThe character 6 appears 1 times\nThe character 7 appears 1 times\nThe character 8 appears 0 times\nThe character 9 appears 2 times"],"source":"教材例6.8","tags":["第6章 数组","C语言程序设计"],"title":"统计各数字出现的次数"},{"description":"<p>编程实现将字符串1和字符串2首尾连接起来，不要用strcat函数。</p><p>目标是把字符串2放到字符串1的后面，连接后的新字符串是字符串1。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行，字符串1；第二行，字符串2；两字符串的长度之和不超过100。</p>","output_description":"<p>输出首尾相连后得到的新字符串1。<br /></p>","samples_input":["abc\ndef"],"samples_output":["abcdef"],"source":"教材例6.9","tags":["第6章 数组","C语言程序设计"],"title":"字符串首尾相连"},{"description":"<p>从键盘输入n个字符串，将最大字符串输出。</p>","difficulty":"Low","hint":"<p>两个字符串比较大小可以调用strcmp函数。</p>","input_description":"<p>第一行包含1个正整数n，不超过100，表示字符串个数。<br /></p><p>接下来的n行，每行一个字符串，每个字符串的长度小于80。</p>","output_description":"<p>输出n个字符串中最大的字符串。<br /></p>","samples_input":["3\nMonday\nTuesday\nSunday"],"samples_output":["Tuesday\n"],"source":"教材例6.10","tags":["第6章 数组","C语言程序设计"],"title":"求最大字符串"},{"description":"<p><span style=\"color: black;\">输入一个以‘#’为结束标志的字符串（少于80个字符），虑去所有的非十六进制字符（不区分大小写），组成一个新的表示十六进制数字的字符串（长度小于8位），输出该字符串并将其转换成十进制后输出。</span></p>","difficulty":"Low","hint":"","input_description":"<p>一行字符串，长度小于80，其中十六进制符号构成的字符串长度小于8位。</p>","output_description":"<p>按照样例格式输出十六进制字符串以及对应的十进制整数。<br /></p>","samples_input":["zy1+ak0bq? wq#"],"samples_output":["String:1a0b\nnumber=6667"],"source":"教材例6.11","tags":["第6章 数组","C语言程序设计"],"title":"进制转换"},{"description":"<p>有n个人围坐一圈，每个人按顺时针方向从1到n顺序编号，从编号为s的那个人开始沿顺时针方向进行从1到m的报数，报数m的那个人出圈。再从他的下一个人重新开始从1到m的报数，如此进行下去直到所有人出圈为止。请编写程序给出这n个人的出圈顺序。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一行中包含3个正整数，分别表示人数n、报数最大值m和开始报数人的编号s。$s \\leq n \\leq100$<br /></p>","output_description":"<p>按照出圈的顺序依次输出出圈人的编号，每个编号按照%3d的格式输出。</p>","samples_input":["5 3 1"],"samples_output":["  3  1  5  2  4"],"source":"教材例6.12","tags":["第6章 数组","C语言程序设计"],"title":"约瑟夫问题"},{"description":"<p>幻方是一种古老的数字游戏，n阶幻方就是把整数1~$n^2$排成n×n的方阵，使得每行的所有元素之和，每列的所有元素之和以及两条对角线上的元素之和都相同。在中世纪的欧洲，对幻方有某种神秘的概念，许多人佩戴幻方以图辟邪。</p><p>奇数阶幻方的构造方法很简单。下面以3阶幻方为例来说明各数在方阵中的位置。</p><p style=\"margin-left: 280px;\"><img alt=\"3阶幻方.png\" src=\"/public/upload/4dea7c8be2.png\" width=\"100\" height=\"100\" /><br /></p><p>首先把1放在第一行正中间的方格中，然后把下一个整数放置到右上方。如果右上方位置到达第一行上方，则放置到最后一行；如果右上方位置超过最后一列，则放置到第一列。如果右上方位置已经有数字了，则不放右上方位置了，直接放在正下方（下一行的同一列）。</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，表示幻方阶数，保证是奇数，且大于1小于100。</p>","output_description":"<p>输出奇数阶幻方，每个整数按照%4d的格式输出。</p>","samples_input":["3"],"samples_output":["   8   1   6\n   3   5   7\n   4   9   2"],"source":"教材例6.13","tags":["第6章 数组","C语言程序设计"],"title":"奇数阶幻方问题"},{"description":"<p>假设有n位同学m门功课的成绩如下，编一程序计算每位同学的总分以及各门功课的平均分。</p><p style=\"margin-left: 80px;\"><img src=\"/public/upload/a5267f11bb.png\" alt=\"table.png\" width=\"350\" height=\"136.3372093023256\" /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行2个正整数，学生人数n和课程门数m。$1 \\leq n \\leq 100 ， 1 \\leq m \\leq 10 $<br /></p><p>接下来有n行，每行一个学生的数据，依次是姓名和m门课程的成绩，姓名长度不超过8，课程成绩在0到150之间。</p>","output_description":"<p>按照样例要求输出数据。姓名按照%-8s的格式输出，每门课程成绩按照%6d的格式输出，平均分按照%6.1f的格式控制输出。<br /></p>","samples_input":["5 4\n张大明 120 142 120 256\n李小红 110 107 106 280\n王志强 108 100 127 290\n王慧颖 115 138 119 270\n李丹丹 134 129 115 284"],"samples_output":["张大明     638   120   142   120   256\n李小红     603   110   107   106   280\n王志强     625   108   100   127   290\n王慧颖     642   115   138   119   270\n李丹丹     662   134   129   115   284\naverage score: 117.4 123.2 117.4 276.0"],"source":"教材例6.14","tags":["第6章 数组","C语言程序设计"],"title":"统计学生的总分以及各课程的平均分"},{"description":"<p><font>输入n个学生的分数，求出其中最高分、最低分以及超过平均分的人数。</font><br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行，1个正整数n，表示学生人数，n不超过100。</p><p>第二行包含n个整数，表示每个学生的分数（0~99），整数间用空格隔开。</p>","output_description":"<p>依次输出最高分、最低分<span style=\"color: rgb(51, 51, 51);\">以及超过平均分的人数，相互之间用1个空格隔开。</span></p>","samples_input":["10\n80 87 65 34 96 70 60 71 99 83"],"samples_output":["99 34 5"],"source":"教材习题6.1","tags":["第6章 数组","C语言程序设计"],"title":"统计学生成绩的最高最低分以及超过平均分的人数"},{"description":"<p>用筛法输出N以内的所有素数。</p><p>筛法是求不超过自然数N（N&gt;1）的所有素数的一种方法。据说是古希腊数学家埃拉托斯特尼（约公元前274~194年）发明的，又称埃拉托斯特尼筛法。</p><p>具体做法是：先把N个自然数依次排列起来。1不是素数，也不是合数，要划去。第二个数2是素数留下来，而把2后面所有能被2整除的数划去。<b>2后面第一个没有划去的数是3，把3留下，再把3后面所有能被3整除的数划去</b>。3后面第一个没有划去的数是5，把5留下，再把5后面所有能被5整除的数划去。$\\cdots$，这样一直做下去，就会把不超过N的全部合数都筛掉，留下的就是不超过N的全部素数。</p><p>因为希腊人是把数写在涂蜡的板上，每要划去一个数，就在上面记以小点，寻求素数的工作完毕后，这许多小点就像一个筛子，所以就把埃拉托斯特尼的方法叫做“埃拉托斯特尼筛法”，简称“筛法”。</p>","difficulty":"Low","hint":"","input_description":"<p>一个整数N（$1 &lt; N \\leq 10000$）。<br /></p>","output_description":"<p>输出满足条件的所有素数，相互之间用1个空格隔开，行首行末均无空格。<br /></p>","samples_input":["20"],"samples_output":["2 3 5 7 11 13 17 19"],"source":"教材6.2","tags":["第6章 数组","C语言程序设计"],"title":"筛法求素数"},{"description":"<p>输入n个从小到大有序的整数存入一维数组a[0]~a[n-1]中，将x插入数组中使得数组a[0]~a[n]仍然有序。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行1个正整数n，n不超过100。</p><p>第二行包括n的整数，从小到大有序，相互间用空格隔开。</p><p>第三行1个整数，为待插入的整数x。</p>","output_description":"<p>将数组a[0]~a[n]中的n+1个有序整数依次输出，相互之间用1个空格隔开，行首行末均没有空格。<br /></p>","samples_input":["5\n1 3 5 7 9\n4"],"samples_output":["1 3 4 5 7 9"],"source":"教材习题6.3","tags":["第6章 数组","C语言程序设计"],"title":"在有序数组中插入一个数"},{"description":"<p>输出如下形状的直角杨辉三角形。(6行杨辉三角形如下图所示)</p><pre><code>         1\n         1         1\n         1         2         1\n         1         3         3         1\n         1         4         6         4         1\n         1         5        10        10         5         1\n</code></pre>","difficulty":"Low","hint":"","input_description":"<p>一个正整数n，不超过30。<br /></p>","output_description":"<p>输出n行杨辉三角形，每个整数采用%10d的格式控制输出。<br /></p>","samples_input":["6"],"samples_output":["         1\n         1         1\n         1         2         1\n         1         3         3         1\n         1         4         6         4         1\n         1         5        10        10         5         1"],"source":"教材习题6.4","tags":["第6章 数组","C语言程序设计"],"title":"杨辉三角形"},{"description":"<p>采用选择排序方法将输入的n个整数从小到大排序。</p><pre><code>【注意】选择排序的基本思想：\n       （假设n个数据分别存在a[0]~a[n-1]，对它们按照从小到大的顺序排序）\n       （1）第1趟，先从a[0]~a[n-1]中找到最大的数据a[t]，然后将a[t]和a[n-1]交换位置；\n       （2）第2趟，先从a[0]~a[n-2]中找到最大的数据a[t]，然后将a[t]和a[n-2]交换位置；\n       （3）第3趟，先从a[0]~a[n-3]中找到最大的数据a[t]，然后将a[t]和a[n-2]交换位置；\n        $\\cdots$\n        最后一趟，先从a[0]~a[1]中找到最大的数据a[t]，然后将a[t]和a[1]交换位置；\n</code></pre>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(73, 80, 96);\">包含2行，第1行包含一个正整数n（不超过100），第2行包括n个整数，整数之间用1个空格隔开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(73, 80, 96);\">输出排序后的整数序列，整数间用1个空格隔开，行首行末均无空格。</span><br /></p>","samples_input":["10\n3 2 8 5 9 7 4 1 0 6"],"samples_output":["0 1 2 3 4 5 6 7 8 9"],"source":"教材习题6.5","tags":["第6章 数组","C语言程序设计"],"title":"选择排序"},{"description":"<p>将一整数数列按奇数在前，偶数在后的顺序重新排放，并要求奇偶两部份分别按照从小到大有序。</p>","difficulty":"Low","hint":"","input_description":"<p>第1行一个正整数n，n不超过100。</p><p>第2行包括n个正整数，整数间用空格隔开。</p>","output_description":"<p>输出排序后的结果，整数间用1个空格隔开，行首行末均无空格。<br /></p>","samples_input":["10\n4 7 2 1 0 3 6 9 5 8"],"samples_output":["1 3 5 7 9 0 2 4 6 8"],"source":"教材习题6.6","tags":["第6章 数组","C语言程序设计"],"title":"奇偶数分开排序"},{"description":"<p>输入一行字符串，将该字符串中所有的大写字母改为小写字母后输出。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一行字符串，长度不超过100。<br /></p>","output_description":"<p>输出改写后的字符串。</p>","samples_input":["This is a C Program"],"samples_output":["this is a c program"],"source":"教材习题6.8","tags":["第6章 数组","C语言程序设计"],"title":"大写改小写"},{"description":"<p>编写程序实现将用户输入的字符串中的所有指定字符删除得到新字符串后输出。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行：输入一行字符串，长度不超过100。<br /></p><p>第二行：指定删除的字符。</p>","output_description":"<p>输出处理后得到的新字符串。<br /></p>","samples_input":["This is a C program\ni"],"samples_output":["Ths s a C program"],"source":"教材习题6.9","tags":["第6章 数组","C语言程序设计"],"title":"删除字符串中指定字符"},{"description":"<p>山顶有n个洞围成一圈（编号按顺序依次编号1到n），一只兔子和一只狐狸分别住在洞里，狐狸总想吃掉兔子。一天兔子对狐狸说：你想吃掉我有一个条件，你从第一个洞出发（编号为1），第一次先到第一个洞找我，第二次隔一个洞找我，第三次隔二个洞找我，第四次隔三个洞找我，…，依此规律类推，寻找次数不限。我躲在一个洞里不动，只要你能找到我，你就可以吃我饱餐一顿，在找到我之前你不能停。狐狸一想，只有n个洞，次数又不限，哪有找不到的道理。狐狸马上就答应了兔子的条件，结果狐狸围着山顶跑了m圈，跑断了腿也没找到兔子。请问兔子躲哪个洞里？</p>","difficulty":"Low","hint":"","input_description":"<p>2个正整数n和m，n表示洞的数目，m表示狐狸跑动圈数，其中n不超过100，m不超过10000。<br /></p>","output_description":"<p>输出兔子可以躲在哪些洞里？如果有多种选择，按从小到大的顺序依次输出洞的编号，相互之间用1个空格隔开。<br /></p><p>如果没有洞可以躲的话，请输出”No choice“。</p>","samples_input":["10 2"],"samples_output":["2 4 7 8 9"],"source":"教材6.10","tags":["第6章 数组","C语言程序设计"],"title":"兔子和狐狸"},{"description":"<p>将字符串中下标值为偶数的元素由小到大排序，其他元素不变。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>一行字符串，长度不超过1000。<br /></p>","output_description":"<p>输出经过排序处理后的字符串。<br /></p>","samples_input":["9a5b6cedAfc"],"samples_output":["5a6b9cAdcfe"],"source":"教材习题6.11","tags":["第6章 数组","C语言程序设计"],"title":"字符串中下标为偶数的元素排序"},{"description":"<p>输入一个N*N的一个方阵，依次做如下处理：<br /></p><p>（1）求两条对角线上各元素之和S1并输出；</p><p>（2）求两条对角线上行列下标均为偶数的各元素的乘积S2并输出；</p><p>（3）将该方阵中心位置固定，将方阵顺时针反向旋转90度得到新的方阵，然后输出。<br /></p>","difficulty":"Low","hint":"<p>【样例提示】</p><p>主对角线包含3个元素：a[0][0]=4，a[1][1]=5，a[2][2]=6。</p><p>副对角线包含3个元素：a[0][2]=3，a[1][1]=5，a[2][0]=8。</p><p>两条对角线上的元素之和为26（a[1][1]在两条对角线上均出现，只能计算1次累加）。</p><p><span style=\"color: rgb(51, 51, 51);\">两条对角线上行列下标均为偶数的元素包括a[0][0]，a[2][2]，a[0][2]和a[2][0]，它们的乘积为576。</span><br /></p>","input_description":"<p>第一行，1个正整数n，n大于1但不超过30；<br /></p><p>接下来n行，每行n个整数，整数间用空格隔开。</p>","output_description":"<p>第一行输出三个整数S1和S2。<br /></p><p>接下来的N行输出旋转后得到的新方阵。</p><p>所有数据之间用1个空格隔开，每行的行首行末均无空格。</p>","samples_input":["3\n4 9 3\n3 5 7\n8 1 6"],"samples_output":["26 576\n8 3 4\n1 5 9\n6 7 3"],"source":"教材习题6.12","tags":["第6章 数组","C语言程序设计"],"title":"对方阵做统计处理"},{"description":"<p>编写程序实现将从键盘输入的一个字符串以反向形式输出。比如，输入的字符串是&quot;abcdefg&quot;，输出为&quot;gfedcba&quot;。</p>","difficulty":"Low","hint":"","input_description":"<p>一行字符串，长度不超过100。</p>","output_description":"<p>逆向输出字符串。<br /></p>","samples_input":["abcdefg"],"samples_output":["gfedcba"],"source":"教材习题6.13","tags":["第6章 数组","C语言程序设计"],"title":"逆向输出字符串"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">编写程序实现字符串处理函数strcpy的功能。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一行字符串，长度不超过100。</p>","output_description":"<p>输出复制后的字符串。<br /></p>","samples_input":["abc"],"samples_output":["abc"],"source":"教材习题6.14","tags":["第6章 数组","C语言程序设计"],"title":"串复制"},{"description":"<p>编写程序实现字符串处理函数strcmp的功能。<br /></p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; font-size: 15px; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">【注】两个字符串比较大小的规则：\n      从左向右逐个比较两个字符串对应位置字符的ASCII码值的大小，直到出现不同字符或遇到‘\\0’为止。\n      如果全部字符都相同，则两个字符串相等，比较结果为0\n      如果出现不相同的字符，则以第一个不相同的字符的比较结果作为判断两个字符串大小。比较结果为第一个不相同的两个字符的ASCII码的差。\n      例如：字符串&quot;abc&quot;和字符串&quot;abc&quot;的比较结果为0。\n            字符串&quot;abc&quot;和字符串&quot;acd&quot;的比较结果为-1。\n            字符串&quot;aa&quot;和字符串&quot;a&quot;的比较结果为97。</code></pre>","difficulty":"Low","hint":"","input_description":"<p>第一行字符串1；第二行字符串2。两个字符串的长度都不超过100。<br /></p>","output_description":"<p>输出2个字符串的比较结果。<br /></p>","samples_input":["aa\na"],"samples_output":["97"],"source":"教材习题6.15","tags":["第6章 数组","C语言程序设计"],"title":"串比较"},{"description":"<p>小明学习C语言写程序完全靠心情（<span style=\"color: rgb(51, 51, 51);\">心情指数从0到100</span>），当心情指数超过50时，就会写程序，否则拒绝写程序。</p><p>已知小明一天24小时的心情指数，需要知道小明在指定的时间点是否有心情写程序。</p>","difficulty":"Low","hint":"","input_description":"<p>在一行中给出 24 个 [0, 100] 区间内的整数，依次代表小明在一天 24 小时中，每个小时的心情指数。</p><p>随后若干行，每行给出一个 [0, 23] 之间的整数，代表需要询问小明这个时间点的心情。</p><p>当出现非法的时间点时，表示输入结束。</p><p>题目保证至少有 1 次询问。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">对每一次提问，如果当时小明的心情指数大于 50，就在一行中输出</span><code>心情指数 Yes</code><span style=\"color: rgb(33, 37, 41);\">，否则输出</span><code>心情指数 No</code><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","samples_input":["80 75 60 50 20 20 20 20 55 62 66 51 42 33 47 58 67 52 41 20 35 49 50 63\n17\n7\n3\n15\n-1"],"samples_output":["52 Yes\n20 No\n50 No\n58 Yes"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"心情查询"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算并输出不超过n的最大的k个素数以及它们的和。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出n(10</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">10000)和k(1</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">k</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">10)的值。</span><br /></p>","output_description":"<p>在一行中按下列格式输出:</p><pre><code style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 12px; color: var(--text-normal); word-break: normal; background: none; border-radius: 3px; border: none; padding: 0px; margin: 0px; --color-tooltip-bg: var(--bg-base-r); --color-tooltip-text: var(--text-black-r); display: block; overflow-x: auto;\">素数1+素数2+…+素数k=总和值</code><div style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000;\"><div class=\"pc-icon clipboardIcon_2q_Ks pc-active-primary inline\" style=\"--tw-shadow: 0 0 #0000; --tw-ring-ins_t;\"></div></div></pre><p>其中素数按递减顺序输出。若n以内不够k个素数，则按实际个数输出。</p>","samples_input":["1000 10","12 6"],"samples_output":["997+991+983+977+971+967+953+947+941+937=9664","11+7+5+3+2=28"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"求n以内最大的k个素数以及它们的和"},{"description":"<p>编写程序,统计一个 k 位正整数中每种不同的个位数字出现的次数。</p><p>例如：给定 N=100311，则有 2 个 0，3 个 1，和 1 个 3。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个不超过 1000 位的正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">对</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">中每一种不同的个位数字，以</span><code>D:M</code><span style=\"color: rgb(33, 37, 41);\">的格式在一行中输出该位数字</span><code>D</code><span style=\"color: rgb(33, 37, 41);\">及其在</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">中出现的次数</span><code>M</code><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">要求按</span><code>D</code><span style=\"color: rgb(33, 37, 41);\">的升序输出。</span><br /></p>","samples_input":["100311"],"samples_output":["0:2\n1:3\n3:1"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"个位数统计"},{"description":"<p>对给定的字符串，本题要求你输出最长对称子串的长度。</p><p>例如，给定Is PAT&TAP symmetric?，最长对称子串为s PAT&TAP s，于是你应该输出11。<br /></p>","difficulty":"Mid","hint":"","input_description":"<p>在一行中给出长度不超过1000的非空字符串。<br /></p>","output_description":"<p>在一行中输出最长对称子串的长度。<br /></p>","samples_input":["Is PAT&TAP symmetric?"],"samples_output":["11"],"source":"","tags":["字符串","DP"],"title":"最长对称子串"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。</span></p><p><span style=\"color: rgb(33, 37, 41);\">每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，通过统计一个人点赞的纪录，分析这个人的特性。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>在第一行给出一个正整数N（≤1000 ），是该用户点赞的博文数量。</p><p>随后N行，每行给出一篇被其点赞的博文的特性描述，格式为“$ K F_1​ ⋯ F_K $ ，其中 1≤K≤10 ，$ F_i $​（i=1 , ⋯ , K ）是特性标签的编号，我们将所有特性标签从1到1000编号。</p><p>数字间以空格分隔。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">统计所有被点赞的博文中最常出现的那个特性标签，在一行中输出它的编号和出现次数，数字间隔1个空格。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果有并列，则输出编号最大的那个。</span><br /></p>","samples_input":["4\n3 889 233 2\n5 100 3 233 2 73\n4 3 73 889 2\n2 233 123"],"samples_output":["233 3"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"点赞"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">中国的古人写文字，是从右向左竖向排版的。本题就请你编写程序，把一段文字按古风排版。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入在第一行给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（&lt;</span><span style=\"color: rgb(33, 37, 41);\">100</span><span style=\"color: rgb(33, 37, 41);\">），是每一列的字符数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">第二行给出一个长度不超过1000的非空字符串，以回车结束。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按古风格式排版给定的字符串，每列</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个字符（除了最后一列可能不足</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个）。</span><br /></p>","samples_input":["4\nThis is a test case"],"samples_output":["asa T\nst ih\ne tsi\n ce s"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"古风排版"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算字符串</span><span style=\"color: rgb(33, 37, 41);\">A−B</span><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">字符串<span style=\"color: rgb(33, 37, 41);\">A−</span><span style=\"color: rgb(33, 37, 41);\">B</span>就是从字符串</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">中把字符串</span><span style=\"color: rgb(33, 37, 41);\">B</span><span style=\"color: rgb(33, 37, 41);\">所包含的字符全删掉，剩下的字符组成的就是字符串</span><span style=\"color: rgb(33, 37, 41);\">A−B</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在2行中先后给出字符串</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">B</span><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">两字符串的长度都不超过</span><span style=\"color: rgb(33, 37, 41);\">10000</span><span style=\"color: rgb(33, 37, 41);\">，并且保证每个字符串都是由可见的ASCII码和空白字符组成，最后以换行符结束。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\"><span></span>A<span></span>−<span></span><span></span>B</span><span style=\"color: rgb(33, 37, 41);\">的结果字符串。</span><br /></p>","samples_input":["I love GPLT!  It's a fun game!\naeiou"],"samples_output":["I lv GPLT!  It's  fn gm!"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"字符串A-B"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，自动填充“我出生于</span><code>y</code><span style=\"color: rgb(33, 37, 41);\">年，直到</span><code>x</code><span style=\"color: rgb(33, 37, 41);\">岁才遇到</span><code>n</code><span style=\"color: rgb(33, 37, 41);\">个数字都不相同的年份”这句话。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出出生年份</span><code>y</code><span style=\"color: rgb(33, 37, 41);\">和目标年份中不同数字的个数</span><code>n</code><span style=\"color: rgb(33, 37, 41);\">，其中</span><code>y</code><span style=\"color: rgb(33, 37, 41);\">在[1, 3000]之间，</span><code>n</code><span style=\"color: rgb(33, 37, 41);\">可以是2、或3、或4。</span></p><p><span style=\"color: rgb(33, 37, 41);\">注意不足4位的年份要在前面补零，例如公元1年被认为是0001年，有2个不同的数字0和1。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">根据输入，输出</span><code>x</code><span style=\"color: rgb(33, 37, 41);\">和能达到要求的年份。数字间以1个空格分隔，行首尾不得有多余空格。</span><span style=\"color: rgb(33, 37, 41);\">年份要按4位输出。</span></p><p><span style=\"color: rgb(33, 37, 41);\">注意：所谓“</span><code>n</code><span style=\"color: rgb(33, 37, 41);\">个数字都不相同”是指不同的数字正好是</span><code>n</code><span style=\"color: rgb(33, 37, 41);\">个。</span><span style=\"color: rgb(33, 37, 41);\">如“2013”被视为满足“4位数字都不同”的条件，但不被视为满足2位或3位数字不同的条件。</span></p>","samples_input":["1988 4","1 2"],"samples_output":["25 2013","0 0001"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"n个数字都不相同的年份"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">给定两个矩阵</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">B</span><span style=\"color: rgb(33, 37, 41);\">，要求你计算它们的乘积矩阵</span><span style=\"color: rgb(33, 37, 41);\">AB</span><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">需要注意的是，只有规模匹配的矩阵才可以相乘。即若</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">有</span><span style=\"color: rgb(33, 37, 41);\">Ra​</span><span style=\"color: rgb(33, 37, 41);\">行、</span><span style=\"color: rgb(33, 37, 41);\">Ca​</span><span style=\"color: rgb(33, 37, 41);\">列，</span><span style=\"color: rgb(33, 37, 41);\">B</span><span style=\"color: rgb(33, 37, 41);\">有</span><span style=\"color: rgb(33, 37, 41);\">Rb​</span><span style=\"color: rgb(33, 37, 41);\">行、</span><span style=\"color: rgb(33, 37, 41);\">Cb​</span><span style=\"color: rgb(33, 37, 41);\">列，则只有</span><span style=\"color: rgb(33, 37, 41);\">Ca​</span><span style=\"color: rgb(33, 37, 41);\">与</span><span style=\"color: rgb(33, 37, 41);\">Rb​</span><span style=\"color: rgb(33, 37, 41);\">相等时，两个矩阵才能相乘。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入先后给出两个矩阵</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">B</span><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">对于每个矩阵，首先在一行中给出其行数</span><span style=\"color: rgb(33, 37, 41);\">R</span><span style=\"color: rgb(33, 37, 41);\">和列数</span><span style=\"color: rgb(33, 37, 41);\">C</span><span style=\"color: rgb(33, 37, 41);\">，随后</span><span style=\"color: rgb(33, 37, 41);\">R</span><span style=\"color: rgb(33, 37, 41);\">行，每行给出</span><span style=\"color: rgb(33, 37, 41);\">C</span><span style=\"color: rgb(33, 37, 41);\">个整数，以1个空格分隔，且行首尾没有多余的空格。</span></p><p><span style=\"color: rgb(33, 37, 41);\">输入保证两个矩阵的</span><span style=\"color: rgb(33, 37, 41);\">R</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">C</span><span style=\"color: rgb(33, 37, 41);\">都是正数，并且所有整数的绝对值不超过100。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">若输入的两个矩阵的规模是匹配的，则按照输入的格式输出乘积矩阵</span><span style=\"color: rgb(33, 37, 41);\">AB</span><span style=\"color: rgb(33, 37, 41);\">，否则输出</span><code>Error: Ca != Rb</code><span style=\"color: rgb(33, 37, 41);\">，其中</span><code>Ca</code><span style=\"color: rgb(33, 37, 41);\">是</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">的列数，</span><code>Rb</code><span style=\"color: rgb(33, 37, 41);\">是</span><span style=\"color: rgb(33, 37, 41);\">B</span><span style=\"color: rgb(33, 37, 41);\">的行数。</span><br /></p>","samples_input":["2 3\n1 2 3\n4 5 6\n3 4\n7 8 9 0\n-1 -2 -3 -4\n5 6 7 8","3 2\n38 26\n43 -5\n0 17\n3 2\n-11 57\n99 68\n81 72"],"samples_output":["2 4\n20 22 24 16\n53 58 63 28","Error: 2 != 3"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"矩阵A乘以B"},{"description":"<p>一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。</p><p>校验码的计算规则如下：</p><p>（1）首先对前17位数字加权求和，权重分配为：{7，9，10，5，8，4，2，1，6，3，7，9，10，5，8，4，2}；</p><p>（2）然后将计算的和对11取模得到值<code>Z</code>；</p><p>（3）最后按照以下关系对应<code>Z</code>值与校验码<code>M</code>的值：</p><pre><code style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 12px; color: var(--text-normal); word-break: normal; background: none; border-radius: 3px; border: none; padding: 0px; margin: 0px; --color-tooltip-bg: var(--bg-base-r); --color-tooltip-text: var(--text-black-r); display: block; overflow-x: auto;\">Z：0 1 2 3 4 5 6 7 8 9 10\nM：1 0 X 9 8 7 6 5 4 3 2</code><div style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000;\"><div class=\"pc-icon clipboardIcon_2q_Ks pc-active-primary inline\" style=\"--tw-shadow: 0 0 #0000; --tw-ring-ins_ter;\"></div></div></pre><p>编写程序，验证校验码的有效性。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">给出1个18位身份证号码。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">如果身份证号码</span><span style=\"color: rgb(33, 37, 41);\">有问题，则输出“Incorrect”。否则输出“No problem”。</span></p><p><span style=\"color: rgb(33, 37, 41);\">这里并不检验前17位是否合理，只检查前17位是否全为数字且最后1位校验码计算准确。</span><br /></p>","samples_input":["110108196711301866","320124198808240056"],"samples_output":["Incorrect","No problem"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"查验身份证"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，帮助老师统计学生判断题的答题情况。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第一行给出一个不超过 100 的正整数 N ，表示判断题数量。</span></p><p><span style=\"color: rgb(33, 37, 41);\">在第二行给出 N道题对应的正确答案，0 代表“非”，1 代表“是”。</span></p><p><span style=\"color: rgb(33, 37, 41);\"><span style=\"color: rgb(33, 37, 41);\">在第三行</span>给出一个学生的解答。</span></p><p><span style=\"color: rgb(33, 37, 41);\">数字间均以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出学生<span style=\"color: rgb(33, 37, 41);\">判断题答对的题数所占百分比。</span></span><br /></p>","samples_input":["6\n0 0 1 0 1 1\n0 1 1 0 0 1"],"samples_output":["66.67%"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"判断题的评判"},{"description":"<p>一个数组A中存有N（&gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，即将A中的数据由$（A_0A_1\\cdots A_{N-1}）变换为（A_{N-M}\\cdots A_{N-1}A_0A_1\\cdots A_{N-M-1}）$（最后M个数循环移至最前面的M个位置）。</p><p>如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第1行输入</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">1≤N≤100</span><span style=\"color: rgb(33, 37, 41);\">）和</span><span style=\"color: rgb(33, 37, 41);\">M</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">≥0</span><span style=\"color: rgb(33, 37, 41);\">）；</span></p><p><span style=\"color: rgb(33, 37, 41);\">第2行输入</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个整数，之间用空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出循环右移</span><span style=\"color: rgb(33, 37, 41);\">M</span><span style=\"color: rgb(33, 37, 41);\">位以后的整数序列，之间用空格分隔。</span><br /></p>","samples_input":["6 2\n1 2 3 4 5 6"],"samples_output":["5 6 1 2 3 4"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"数组元素循环右移问题"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">给定两个整型数组，本题要求找出不是两者共有的元素。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">分别在两行中给出两个整型数组，每行先给出正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">≤20</span><span style=\"color: rgb(33, 37, 41);\">），随后是</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个整数，其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。</span></p><p><span style=\"color: rgb(33, 37, 41);\">题目保证至少存在一个这样的数字。同一数字不重复输出。</span><br /></p>","samples_input":["10 3 -5 2 8 0 3 5 -15 9 100\n11 6 4 8 2 6 -5 9 0 100 8 1"],"samples_output":["3 5 -15 6 4 1"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"找出不是两个数组共有的元素"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">输入一个字符串，对该字符串进行逆序，输出逆序后的字符串。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出一个不超过80个字符长度的、以回车结束的非空字符串。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出逆序后的字符串。</span><br /></p>","samples_input":["Hello World!"],"samples_output":["!dlroW olleH"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"字符串逆序"},{"description":"<p>一个矩阵元素的“鞍点”是指该位置上的元素值在该行上最大、在该列上最小。</p><p>编写程序，求一个给定的n阶方阵的鞍点。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">1≤n≤6</span><span style=\"color: rgb(33, 37, 41);\">）。</span></p><p><span style=\"color: rgb(33, 37, 41);\">随后</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">行，每行给出</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">个整数，其间以空格分隔。</span><br /></p><p><span style=\"color: rgb(33, 37, 41);\"><span style=\"color: rgb(33, 37, 41);\">题目保证给出的矩阵至多存在一个鞍点。</span><br /></span></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中按照“行下标 列下标”（下标从0开始）的格式输出鞍点的位置。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果鞍点不存在，则输出“NONE”。</span><br /></p>","samples_input":["4\n1 7 4 1\n4 8 3 6\n1 6 1 2\n0 7 8 9","2\n1 7\n4 1"],"samples_output":["2 1","NONE"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"找鞍点"},{"description":"<p>编程打印如下规律的n*n方阵。输入n，按规律输出方阵。</p><p>方阵规律如下图：使主对角线和副对角线上的元素为0，它们上方的元素为1，左方的元素为2，下方元素为3，右方元素为4。</p><p>下图是一个符合条件的5阶矩阵。</p><p>0  1  1  1  0</p><p>2  0  1  0  4</p><p>2  2  0  4  4</p><p>2  0  3  0  4</p><p>0  3  3  3  0</p>","difficulty":"Low","hint":"","input_description":"<p>正整数n（3 &lt;= n &lt;=100）。<br /></p>","output_description":"<p>输出所需的方阵。整数之间用空格隔开。<br /></p>","samples_input":["5"],"samples_output":["0 1 1 1 0\n2 0 1 0 4\n2 2 0 4 4\n2 0 3 0 4\n0 3 3 3 0"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"1234方阵"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，从输入的N个整数中查找给定的X。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果找到，输出X的位置（从0开始数）；如果没有找到，输出“Not Found”。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第一行中给出两个正整数N（</span><span style=\"color: rgb(33, 37, 41);\">≤</span><span style=\"color: rgb(33, 37, 41);\">20）和X；</span></p><p><span style=\"color: rgb(33, 37, 41);\">在第二行给出N个整数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">整数之间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出X的位置，或者“Not Found”。</span><br /></p>","samples_input":["5 7\n3 5 7 1 9","5 7\n3 5 8 1 9"],"samples_output":["2","Not Found"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"查找整数"},{"description":"<p>有n盏灯，编号为1~n。</p><p>第1个人把所有灯打开，第2个人按下所有编号为2的倍数的开关（这些灯将被关掉），第3个人按下所有编号为3的倍数的开关（其中关掉的灯将打开，开着的灯将被关闭），依此类推。</p><p>一共有k个人，问最后有哪些灯开着？</p>","difficulty":"Low","hint":"","input_description":"<p>两个正整数n和k。1 &lt;= k=&lt; n &lt;=1000<br /></p>","output_description":"<p>开着的灯的编号。相互之间用1个空格隔开。<br /></p>","samples_input":["7 3"],"samples_output":["1 5 6 7"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"开灯问题"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">给定一个</span><span style=\"color: rgb(33, 37, 41);\">2N×2N</span><span style=\"color: rgb(33, 37, 41);\">的方阵网格游戏盘面，每个格子中放置一些符号。这些符号一定是成对出现的，同一个符号可能不止一对。</span></p><p><span style=\"color: rgb(33, 37, 41);\">程序读入玩家给出的一对位置</span><span style=\"color: rgb(33, 37, 41);\">(x1​,y1​)</span><span style=\"color: rgb(33, 37, 41);\">、</span><span style=\"color: rgb(33, 37, 41);\">(x2​,y2​)</span><span style=\"color: rgb(33, 37, 41);\">，判断这两个位置上的符号是否匹配。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果匹配成功，则将两个符号消为“*”并输出消去后的盘面；否则输出“Uh-oh”。</span></p><p><span style=\"color: rgb(33, 37, 41);\">若匹配错误达到3次，则输出“Game Over”并结束游戏。或者当全部符号匹配成功，则输出“Congratulations!”，然后结束游戏。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>在一行中给一个正整数N（&lt;6）。</p><p>随后2N行，每行2N个大写英文字母（其间以1个空格分隔），表示游戏盘面。</p><p>盘面之后给出一个正整数K，随后K行，每行按照格式“x1 y1​ x2 y2​”给出一个玩家的输入。一对位置(x1​,y1​)、(x2​,y2​)肯定不相同。</p><p>注意格子的行、列编号是从1到2N。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">根据玩家的每一步输入，输出相应的结果。</span></p><p><span style=\"color: rgb(33, 37, 41);\">输出盘面时注意，每行字符间以1个空格分隔，行末不得有多余空格。</span><br /></p>","samples_input":["2\nI T I T\nY T I A\nT A T Y\nI K K T\n11\n1 1 1 3\n4 2 4 3\n3 1 4 2\n2 2 1 2\n3 1 2 4\n4 4 3 1\n2 1 3 4\n3 3 1 4\n4 1 2 3\n2 4 3 2\n1 1 2 2","2\nI T I T\nY T I A\nT A T Y\nI K K T\n5\n1 1 4 4\n1 1 2 3\n1 1 2 3\n2 2 4 1\n2 2 3 3"],"samples_output":["* T * T\nY T I A\nT A T Y\nI K K T\n* T * T\nY T I A\nT A T Y\nI * * T\nUh-oh\n* * * T\nY * I A\nT A T Y\nI * * T\nUh-oh\n* * * T\nY * I A\n* A T Y\nI * * *\n* * * T\n* * I A\n* A T *\nI * * *\n* * * *\n* * I A\n* A * *\nI * * *\n* * * *\n* * * A\n* A * *\n* * * *\nCongratulations!","Uh-oh\n* T I T\nY T * A\nT A T Y\nI K K T\nUh-oh\nUh-oh\nGame Over"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"简易连连看"},{"description":"<p>一个N×N的拉丁方阵中含有整数1-N，且在任意的行或列中都不出现重复数据。</p><p>该拉丁方阵的产生方法是：当给出第一行含有整数1-N的N个数据序列后，就决定了各数在以下各行的位置，即第一行数为各数在每行中列数的索引表。首先找到某个数在N个数据序列中的位置（下标），然后以此数在序列中的位置为起始，按照数据序列的顺序可以得到该数在后面N-1行中的位置。</p><p>比如输入序列为：6 3 1 4 2 5</p><p>在这个序列中，整数1所在的下标为3，在上述序列中从3开始，序列循环依次为3，1，4，2，5，6，因此在方阵的第1行到第6行中，1的位置分别在第3，1，4，2，5，6列。</p><p>同理：</p><p>在这个序列中，整数2所在的下标为5，在上述序列中从5开始，序列循环依次为5，6，3，1，4，2，因此在方阵的第1行到第6行中，2的位置分别在第5，6，3，1，4，2列。</p><p>在这个序列中，整数3所在的下标为2，在上述序列中从2开始，序列循环依次为2，5，6，3，1，4，因此在方阵的第1行到第6行中，3的位置分别在第2，5，6，3，1，4列。</p><p>在这个序列中，整数4所在的下标为4，在上述序列中从4开始，序列循环依次为4，2，5，6，3，1，因此在方阵的第1行到第6行中，4的位置分别在第4，2，5，6，3，1列。</p><p>在这个序列中，整数5所在的下标为6，在上述序列中从6开始，序列循环依次为6，3，1，4，2，5，因此在方阵的第1行到第6行中，5的位置分别在第6，3，1，4，2，5列。</p><p>在这个序列中，整数6所在的下标为1，在上述序列中从1开始，序列循环依次为1，4，2，5，6，3，因此在方阵的第1行到第6行中，6的位置分别在第1，4，2，5，6，3列。</p><p>根据上述分析可得到的拉丁方阵如下：</p><p>6 3 1 4 2 5</p><p>1 4 5 6 3 2</p><p>5 6 2 1 4 3</p><p>2 1 3 5 6 4</p><p>3 5 4 2 1 6</p><p>4 2 6 3 5 1</p><p>请你写一个程序，产生按上述方法生成的拉丁方阵。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含一个正整数N（大于1，但不大于100）；</p><p>第二行为1~N的N个数。<br /></p>","output_description":"<p>输出按照按上述方法生成的拉丁方阵（整数间用1个空格隔开）。<br /></p>","samples_input":["6\n6 3 1 4 2 5"],"samples_output":["6 3 1 4 2 5\n1 4 5 6 3 2\n5 6 2 1 4 3\n2 1 3 5 6 4\n3 5 4 2 1 6\n4 2 6 3 5 1"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"拉丁方阵"},{"description":"<p>给你2N张牌，编号依次为1~2n。这也是最初的牌的顺序。</p><p>每一次洗牌首先将所有牌分成上下两堆，每堆n张牌，然后将两堆牌依次交叉重合在一起。</p><p>比如第一次洗牌时，前面一堆的n张牌的编号依次为1~n，后面一堆的n张牌的编号依次为n+1~2n，后面一堆牌的第一章在最上面，将2堆牌交叉重合后的序列变为n+1,1,n+2,2,n+3,3,n+4,4..2n,n。</p><p>可以证明，对于任意自然数N，都可以在经过M次洗牌后第一次重新得到初始的顺序。</p><p>编程对于小于10000的自然数N，求出M的值。</p>","difficulty":"Low","hint":"","input_description":"<p>一个自然数N（不超过10000）。<br /></p>","output_description":"<p>一个整数，即洗牌次数M。<br /></p>","samples_input":["20"],"samples_output":["20"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"洗牌问题"},{"description":"<p>给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。</p><p>例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">整数间用一个空格分隔。10个数字的总个数不超过100，且至少拥有1个非0的数字。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出能够组成的最小的数。</span><br /></p>","samples_input":["2 2 0 0 0 3 0 0 1 0"],"samples_output":["10015558"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"组个最小数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">一个IP地址是用四个字节（每个字节8个位）的二进制码组成。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，将32位二进制码表示的IP地址转换为十进制格式表示的IP地址输出。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个<span style=\"color: rgb(33, 37, 41);\">32位二进制字符串。</span></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出十进制格式的IP地址，其由4个十进制数组成（分别对应4个8位的二进制数），中间用“.”分隔开。</span><br /></p>","samples_input":["11001100100101000001010101110010"],"samples_output":["204.148.21.114"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"IP地址转换"},{"description":"<p>有一组数，其排列形式如下： 11，19，9，12，5，20，1，18，4，16，6，10，15，2，17，3，14，7，13，8， 且尾部8和头部11首尾相连，构成环形的一组数。</p><p>编程找出相邻的4个数，其相加之和最大，并给出它们的起始位置。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含一个整数n( 5 &lt;= n &lt;= 1000 )；</p><p>第二行包含n个整数，相互之间用1个空格隔开。<br /></p>","output_description":"<p>输出占一行，包含2个整数，分别是最大的和以及起始数的位置（从1开始算）。</p><p>如果有多个最大值，输出开始位置最小的那一组。</p>","samples_input":["20\n11 19 9 12 5 20 1 18 4 16 6 10 15 2 17 3 14 7 13 8"],"samples_output":["51 1"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"循环数组连续4个数的和的最大值"},{"description":"<p>现在，我们用大炮来打蚊子：蚊子分布在一个M×N格的二维平面上，每只蚊子占据一格。向该平面的任意位置发射炮弹，炮弹的杀伤范围如下示意：</p><pre><code style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 12px; color: var(--text-normal); word-break: normal; background: none; border-radius: 3px; border: none; padding: 0px; margin: 0px; --color-tooltip-bg: var(--bg-base-r); --color-tooltip-text: var(--text-black-r); display: block; overflow-x: auto;\"> O\nOXO\n O</code><div style=\"--tw-shadow: 0 0 #0000; --tw-ring-inset: var(--tw-empty, ); --tw-ring-offset-width: 0px; --tw-ring-offset-color: var(--text-normal); --tw-ring-color: rgba(147, 197, 253, 0.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000;\"><div class=\"pc-icon clipboardIcon_2q_Ks pc-active-primary inline\" style=\"--tw-shadow: 0 0 #0000; --tw-ring-ins_t;\"></div></div></pre><p>其中，<code>X</code>为炮弹落点中心，<code>O</code>为紧靠中心的四个有杀伤力的格子范围。若蚊子被炮弹命中（位于<code>X</code>格），一击毙命，若仅被杀伤（位于<code>O</code>格），则损失一半的生命力。也就是说，一次命中或者两次杀伤均可消灭蚊子。</p><p>现在给出蚊子的分布情况以及连续<code>k</code>发炮弹的落点，给出每炮消灭的蚊子数。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行为两个不超过20的正整数<code>M</code>和<code>N</code>，中间空一格，表示二维平面有<code>M</code>行、<code>N</code>列。</p><p>接下来<code>M</code>行，每行有<code>N</code>个<code>0</code>或者<code>#</code>字符，其中<code>#</code>表示所在格子有蚊子。</p><p>接下来一行，包含一个不超过400的正整数<code>k</code>，表示发射炮弹的数量。</p><p>最后<code>k</code>行，每行包括一发炮弹的整数坐标<code>x</code>和<code>y</code>（0≤<code>x</code>&lt;<code>M</code>，0≤<code>y</code>&lt;<code>N</code>），之间用一个空格间隔。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">对应输入的</span><code>k</code><span style=\"color: rgb(33, 37, 41);\">发炮弹，输出共有</span><code>k</code><span style=\"color: rgb(33, 37, 41);\">行，第</span><code>i</code><span style=\"color: rgb(33, 37, 41);\">行即第</span><code>i</code><span style=\"color: rgb(33, 37, 41);\">发炮弹消灭的蚊子数。</span><br /></p>","samples_input":["5 6\n00#00#\n000###\n00#000\n000000\n00#000\n2\n1 2\n1 4"],"samples_output":["0\n2"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"大炮打蚊子"},{"description":"<p>给定某数字A（1≤A≤9）以及非负整数N（0≤N≤100000），求数列之和S=A+AA+AAA+⋯+AA⋯A（N个A）。</p><p>例如A=1,N=3时，S=1+11+111=123。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">数字</span><span style=\"color: rgb(33, 37, 41);\">A</span><span style=\"color: rgb(33, 37, 41);\">与非负整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出其</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">项数列之和</span><span style=\"color: rgb(33, 37, 41);\">S</span><span style=\"color: rgb(33, 37, 41);\">的值。</span><br /></p>","samples_input":["1 3"],"samples_output":["123"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"数列求和-加强版"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">一个整数“</span><span style=\"color: rgb(33, 37, 41);\">犯二的程度</span><span style=\"color: rgb(33, 37, 41);\">”定义为该数字中包含2的个数与其位数的比值。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果这个数是负数，则程度增加0.5倍；如果还是个偶数，则再增加1倍。</span></p><p><span style=\"color: rgb(33, 37, 41);\">例如数字</span><code>-13142223336</code><span style=\"color: rgb(33, 37, 41);\">是个11位数，其中有3个2，并且是负数，也是偶数，则它的犯二程度计算为：</span><span style=\"color: rgb(33, 37, 41);\">3/11×1.5×2×100%</span><span style=\"color: rgb(33, 37, 41);\">，约为81.82%。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，计算一个给定整数到底有多二。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">给出一个不超过50位的整数</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><code>N</code><span style=\"color: rgb(33, 37, 41);\">犯二的程度，保留小数点后两位。</span><br /></p>","samples_input":["-13142223336"],"samples_output":["81.82%"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"到底有多二"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">“福”字倒着贴，寓意“福到”。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，把各种汉字倒过来输出。</span></p><p><span style=\"color: rgb(33, 37, 41);\">要处理的每个汉字是由一个 N</span><span style=\"color: rgb(33, 37, 41);\">×</span><span style=\"color: rgb(33, 37, 41);\">N 的网格组成的，网格中的元素或者为字符</span><code>@</code><span style=\"color: rgb(33, 37, 41);\">或者为空格。而倒过来的汉字所用的字符由裁判指定。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第一行中给出倒过来的汉字所用的字符、以及网格的规模 N （不超过100的正整数），其间以 1 个空格分隔；</span></p><p><span style=\"color: rgb(33, 37, 41);\">随后 N 行，每行给出 N 个字符，或者为</span><code>@</code><span style=\"color: rgb(33, 37, 41);\">或者为空格。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出倒置的网格，如样例所示。</span></p><p><span style=\"color: rgb(33, 37, 41);\">但是，如果这个字正过来倒过去是一样的，就先输出</span><code>bu yong dao le</code><span style=\"color: rgb(33, 37, 41);\">，然后再用输入指定的字符将其输出。</span><br /></p>","samples_input":["$ 9\n @  @@@@@\n@@@  @@@ \n @   @ @ \n@@@  @@@ \n@@@ @@@@@\n@@@ @ @ @\n@@@ @@@@@\n @  @ @ @\n @  @@@@@","& 3\n@@@\n @ \n@@@"],"samples_output":["$$$$$  $ \n$ $ $  $ \n$$$$$ $$$\n$ $ $ $$$\n$$$$$ $$$\n $$$  $$$\n $ $   $ \n $$$  $$$\n$$$$$  $ ","bu yong dao le\n&&&\n & \n&&&"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"福到了"},{"description":"<p>编写程序，求 N 个给定整数的均方差。</p><p>若将 N 个数的平均值记为 Avg，则均方差计算公式为：</p><p>$ \\sqrt {\\frac {( A_1 - Avg )^2 + ( A_2 - Avg )^2 + \\cdots + ( A_N - Avg )^2 }{N} } $</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第一行给出一个正整数 N（</span><span style=\"color: rgb(33, 37, 41);\">≤10000</span><span style=\"color: rgb(33, 37, 41);\">），随后一行给出 N 个正整数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">所有数字都不超过 1000，同行数字以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出这N个数的均方差，要求固定精度输出小数点后5位。</span><br /></p>","samples_input":["10\n6 3 7 1 4 8 2 9 11 5","1\n2"],"samples_output":["3.03974","0.00000"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"求集合数据的均方差"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">给定 N 个非 0 的个位数字，用其中任意 2 个数字都可以组合成 1 个 2 位的数字。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，求所有可能组合出来的 2 位数字的和。</span></p><p><span style=\"color: rgb(33, 37, 41);\">例如给定 2、5、8，则可以组合出：25、28、52、58、82、85，它们的和为330。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中先给出 N（1</span><span style=\"color: rgb(33, 37, 41);\">&lt;</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">&lt;</span><span style=\"color: rgb(33, 37, 41);\">10），随后给出 N 个互不相同的非 0 个位数字。数字间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出所有可能组合出来的2位数字的和。</span><br /></p>","samples_input":["3 2 8 5"],"samples_output":["330"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"组合数的和"},{"description":"<p>话说现在猪肉价格这么贵，小明也开始了养猪生活。</p><p>说来也奇怪，他养的猪一出生第二天开始就能每天中午生一只小猪，而且生下来的竟然都是母猪。</p><p>不过光生小猪也不行，小明采用了一个很奇特的办法来管理他的养猪场：对于每头刚出生的小猪，在它生下第二头小猪后立马被杀掉，卖到超市里。</p><p>假设在创业的第一天，小明只买了一头刚出生的小猪，请问，在第N天晚上，小明的养猪场里还存有多少头猪？</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数N，代表小明创业的第N天。（0&lt;N&lt;45）<br /></p>","output_description":"<p>输出第N天晚上养猪场里猪的数目。<br /></p>","samples_input":["3","4"],"samples_output":["3","5"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"小明养猪的故事"},{"description":"<p>“666”是一种网络用语，大概是表示某人很厉害、我们很佩服的意思。</p><p>最近又衍生出另一个数字“9”，意思是“6翻了”，实在太厉害的意思。</p><p>如果你以为这就是厉害的最高境界，那就错啦 —— 目前的最高境界是数字“27”，因为这是 3 个 “9”！</p><p>编写程序，将那些过时的、只会用一连串“6666……6”表达仰慕的句子，翻译成最新的高级表达。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出一句话，即一个非空字符串，由不超过 1000 个英文字母、数字和空格组成，以回车结束。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">从左到右扫描输入的句子：如果句子中有超过 3 个连续的 6，则将这串连续的 6 替换成 9；但如果有超过 9 个连续的 6，则将这串连续的 6 替换成 27。其他内容不受影响，原样输出。</span><br /></p>","samples_input":["it is so 666 really 6666 what else can I say 6666666666"],"samples_output":["it is so 666 really 9 what else can I say 27"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"6翻了"},{"description":"<p>“刮刮彩票”是一款网络游戏里面的一个小游戏。如图所示：</p><p style=\"margin-left: 240px;\"><img alt=\"-362960_55cb6a89bf693.png\" src=\"https://images.ptausercontent.com/e6f4f992-0e14-4a9f-bd2e-353c109dd196.png\" /></p><p>每次游戏玩家会拿到一张彩票，上面会有 9 个数字，分别为数字 1 到数字 9，数字各不重复，并以3×3的“九宫格”形式排布在彩票上。</p><p>在游戏开始时能看见一个位置上的数字，其他位置上的数字均不可见。你可以选择三个位置的数字刮开，这样玩家就能看见四个位置上的数字了。最后玩家再从 3 横、3 竖、2 斜共 8 个方向中挑选一个方向，方向上三个数字的和可根据下列表格进行兑奖，获得对应数额的金币。</p><p style=\"margin-left: 240px;\"><img alt=\"image.png\" src=\"/public/upload/ffe7e797f9.png\" width=\"300\" height=\"376.6604083856417\" /><br /></p><p>编写程序，模拟玩家的游戏过程。</p>","difficulty":"Low","hint":"","input_description":"<p>第一部分给出一张合法的彩票，即用 3 行 3 列给出 0 至 9 的数字。0 表示的是这个位置上的数字初始时就能看见了，而不是彩票上的数字为 0。</p><p>第二部给出玩家刮开的三个位置，分为三行，每行按格式<code>x y</code>给出玩家刮开的位置的行号和列号（题目中定义左上角的位置为第 1 行、第 1 列。）。数据保证玩家不会重复刮开已刮开的数字。</p><p>最后一部分给出玩家选择的方向，即一个整数： 1 至 3 表示选择横向的第一行、第二行、第三行，4 至 6 表示纵向的第一列、第二列、第三列，7、8分别表示左上到右下的主对角线和右上到左下的副对角线。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">对于每一个刮开的操作，在一行中输出玩家能看到的数字。最后对于选择的方向，在一行中输出玩家获得的金币数量。</span><br /></p>","samples_input":["1 2 3\n4 5 6\n7 8 0\n1 1\n2 2\n2 3\n7"],"samples_output":["1\n5\n6\n180"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"刮彩票"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，从任意给定的两个 1 位数字</span><span style=\"color: rgb(33, 37, 41);\">a1​</span><span style=\"color: rgb(33, 37, 41);\">和</span><span style=\"color: rgb(33, 37, 41);\">a2​</span><span style=\"color: rgb(33, 37, 41);\">开始，用乘法口诀生成一个数列 {</span><span style=\"color: rgb(33, 37, 41);\">an​</span><span style=\"color: rgb(33, 37, 41);\">}，规则为从</span><span style=\"color: rgb(33, 37, 41);\">a1​</span><span style=\"color: rgb(33, 37, 41);\">开始顺次进行，每次将当前数字与后面一个数字相乘，将结果贴在数列末尾。如果结果不是 1 位数，则其每一位都应成为数列的一项。</span><br /></p>","difficulty":"Low","hint":"<p><span style=\"color: rgb(33, 37, 41);\">【样例解释】数列前 2 项为 2 和 3。从 2 开始，因为</span><span style=\"color: rgb(33, 37, 41);\">2×3=6</span><span style=\"color: rgb(33, 37, 41);\">，所以第 3 项是 6。因为</span><span style=\"color: rgb(33, 37, 41);\">3×6=18</span><span style=\"color: rgb(33, 37, 41);\">，所以第 4、5 项分别是 1、8。依次类推…… 最后因为第 6 项有</span><span style=\"color: rgb(33, 37, 41);\">6×8=48</span><span style=\"color: rgb(33, 37, 41);\">，对应第 10、11 项应该是 4、8。而因为只要求输出前 10 项，所以在输出 4 后结束。</span><br /></p>","input_description":"<p>在一行中给出 3 个整数，依次为 a1 、a2 和 n，满足 $ 0≤a1 ,a2≤9，0 &lt; n ≤10^3 $ 。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出数列的前</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">项。数字间以 1 个空格分隔，行首尾不得有多余空格。</span><br /></p>","samples_input":["2 3 10"],"samples_output":["2 3 6 1 8 6 8 4 8 4"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"乘法口诀数列"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。</span></p><p><span style=\"color: rgb(33, 37, 41);\">该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点</span><code>.</code><span style=\"color: rgb(33, 37, 41);\">，还必须既有字母也有数字。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。</p>","output_description":"<p>对每个用户的密码，在一行中输出系统反馈信息，分以下5种：</p><ul><li>如果密码合法，输出<code>Your password is wan mei.</code>；</li><li>如果密码太短，不论合法与否，都输出<code>Your password is tai duan le.</code>；</li><li>如果密码长度合法，但存在不合法字符，则输出<code>Your password is tai luan le.</code>；</li><li>如果密码长度合法，但只有字母没有数字，则输出<code>Your password needs shu zi.</code>；</li><li>如果密码长度合法，但只有数字没有字母，则输出<code>Your password needs zi mu.</code>。</li><li>如果密码长度合法，数字和字母都没有出现，<span style=\"color: rgb(51, 51, 51);\">则输出</span><code>Your password zhi you dian.</code><span style=\"color: rgb(51, 51, 51);\">。</span><br /></li></ul>","samples_input":["123s","zheshi.wodepw","1234.5678"],"samples_output":["Your password is tai duan le.\n","Your password needs shu zi.\n","Your password needs zi mu.\n"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"检查密码"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">输入一个字符串，判断该字符串是否为回文。</span></p><p><span style=\"color: rgb(33, 37, 41);\">回文就是字符串中心对称，从左向右读和从右向左读的内容是一样的。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出一个不超过</span><code>80</code><span style=\"color: rgb(33, 37, 41);\">个字符长度的、以回车结束的非空字符串。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第1行中输出字符串。如果它是回文字符串，在第2行中输出</span><code>Yes</code><span style=\"color: rgb(33, 37, 41);\">，否则输出</span><code>No</code><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","samples_input":["level","1 + 2 = 2 + 1 ="],"samples_output":["level\nYes","1 + 2 = 2 + 1 =\nNo"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"判断回文字符串"},{"description":"<p>本题要求使用选择法排序，将给定的n个整数从小到大排序后输出，并输出排序过程中每一步的中间结果。</p><p>选择排序的算法步骤如下：</p><p>第0步：在未排序的n个数（a[0]〜a[n−1]）中找到最小数，将它与a[0]交换；</p><p>第1步：在剩下未排序的n−1个数（a[1]〜a[n−1]）中找到最小数，将它与a[1]交换；</p><p>……</p><p>第k步：在剩下未排序的n−k个数（a[k]〜a[n−1]）中找到最小数，将它与a[k]交换；</p><p>……</p><p>第n−2步：在剩下未排序的2个数（a[n−2]〜a[n−1]）中找到最小数，将它与a[n−2]交换。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入第一行给出一个不超过10的正整数</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">第二行给出</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">个整数，其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">在每一行中输出排序过程中对应步骤的中间结果，即每一步后</span><span style=\"color: rgb(33, 37, 41);\">a[0]</span><span style=\"color: rgb(33, 37, 41);\">〜</span><span style=\"color: rgb(33, 37, 41);\">a[n−1]</span><span style=\"color: rgb(33, 37, 41);\">的值，相邻数字间有一个空格，行末不得有多余空格。</span><br /></p>","samples_input":["4\n5 1 7 6"],"samples_output":["1 5 7 6\n1 5 7 6\n1 5 6 7"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"选择法排序之过程"},{"description":"<p>杨同学迷上了一款叫诺斯克的台球游戏，而且随着练习的深入，他总是能在某些神奇的时刻开启外挂模式，此时小李将指哪打哪，直至无球可打。</p><p>现在杨同学想让你帮他计算下当他开启外挂模式的时候最多可以取得多少分数。注意：台面上的球数可能与传统斯诺克的不同。</p><p>比赛的基本规则如下：</p><ol><li>彩球共分8种颜色，红(1分)、黄(2分)、绿(3分)、棕(4分)、蓝(5分)、粉(6分)、黑(7分)、白(主球，控制白球来打其余球);</li><li>当台面上有红球的时候你必须先击打一个红球，然后能且只能击打一个彩球，此时落袋的彩球（不包括红球）将会被放回桌面，一直重复该过程；</li><li>当打完规则2的彩球（不包括红球）发现已经没有红球时，按照彩球的分值从低到高将其依次击入袋中。</li></ol>","difficulty":"Low","hint":"<p>台面上共有红球2个、绿球1个、蓝球3个、黑球2个，获得最高分的打法是红-黑-红-黑-绿-蓝-蓝-蓝-黑-黑，共可以获得48分。<br /></p>","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">仅有一行，共7个用空格隔开的整数，分别为当前台面上红、黄、绿、棕、蓝、粉、黑球的数目。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出1个整数，表示杨同学可以得到的最高分。</span><br /></p>","samples_input":["2 0 1 0 3 0 2"],"samples_output":["48"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"打台球"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">斐波那契数列是这样定义的：f(1)=1；f(2)=1；f(n)=f(n-1)+f(n-2)（n&gt;=3）。</span></p><p><span style=\"color: rgb(33, 37, 41);\">所以1，1，2，3，5，8，13……就是斐波那契数列。</span></p><p><span style=\"color: rgb(33, 37, 41);\">输入一个整数n，求斐波那契数列的第n项。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个整数n（1≤n≤1000）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出斐波那契数列的第n项f(n)。</span><br /></p>","samples_input":["4","105"],"samples_output":["3","3928413764606871165730"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"大菲波数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">某电视台要调查观众对该台8个栏目（设相应栏目编号为1~8）的受欢迎情况，共调查了</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">位观众（</span><span style=\"color: rgb(33, 37, 41);\">1≤n≤1000</span><span style=\"color: rgb(33, 37, 41);\">）.</span></p><p><span style=\"color: rgb(33, 37, 41);\">现要求编写程序，输入每一位观众的投票情况（每位观众只能选择一个最喜欢的栏目投票），统计输出各栏目的得票情况。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第1行中给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">1≤n≤1000</span><span style=\"color: rgb(33, 37, 41);\">）;</span></p><p><span style=\"color: rgb(33, 37, 41);\">第2行输入</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">个整数，其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按顺序输出所有8个栏目的编号和得票数，每行输出一个栏目的编号和得票数，中间用1个空格隔开。</span><br /></p>","samples_input":["10\n3 4 7 6 3 9 2 3 1 8"],"samples_output":["1 1\n2 1\n3 3\n4 1\n5 0\n6 1\n7 1\n8 1"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"调查电视节目受欢迎程度"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">所谓“往返跑方阵”，是指对任意给定的n，将1到n×n的整数依次填写到n×n的方阵中，从右下角第1个格子开始，向上填充；到最上面一行后，再向左一列，改变方向，向下填充；倒底后，往左移动一列，改变方向，向上填充；.…… 以此类推，直到将n×n的方阵填满。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，构造这样的“往返跑方阵”。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">&lt;100</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\">N×N</span><span style=\"color: rgb(33, 37, 41);\">的方阵。每行</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个数字，每个数字</span><span style=\"color: rgb(33, 37, 41);\">占</span><span style=\"color: rgb(33, 37, 41);\">5</span><span style=\"color: rgb(33, 37, 41);\">位。</span><br /></p>","samples_input":["5","6"],"samples_output":["   25   16   15    6    5\n   24   17   14    7    4\n   23   18   13    8    3\n   22   19   12    9    2\n   21   20   11   10    1","   31   30   19   18    7    6\n   32   29   20   17    8    5\n   33   28   21   16    9    4\n   34   27   22   15   10    3\n   35   26   23   14   11    2\n   36   25   24   13   12    1"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"往返跑方阵"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">对于输入的两个不超过1000位数字的非负整数，给出两数之和。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在两行中分别给出两个不超过1000位数字的非负整数。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出两数之和</span><br /></p>","samples_input":["123\n12"],"samples_output":["135"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"高精度加法a+b"},{"description":"<p>本题要求使用二分查找法，在给定的n个升序排列的整数中查找x，并输出查找过程中每一步的中间结果。</p><p>如果数组a中的元素与x的值相同，输出相应的下标（下标从0开始）；如果没有找到，输出“Not Found”。</p><p>如果输入的n个整数没有按照从小到大的顺序排列，或者出现了相同的数，则输出“Invalid Value”。</p><p>二分查找法的算法步骤描述如下：</p><p>设n个元素的数组a已升序排列，用<code>left</code>和<code>right</code>两个变量来表示查找的区间，即在<code>a[left] 〜 a[right]</code>区间去查找x。初始状态为<code>left = 0，right = n-1</code>。</p><p>首先用要查找的x与查找区间的中间位置元素<code>a[mid]</code>（<code>mid = (left + right) / 2</code>）比较，</p><p>如果相等则找到；</p><p>如果<code>x &lt; a[mid]</code>，由于数组是升序排列的，则只要在<code>a[left] 〜 a[mid-1]</code>区间继续查找；</p><p>如果<code>x &gt; a[mid]</code>，则只要在<code>a[mid+1] 〜 a[right]</code>区间继续查找。</p><p>也就是根据与中间元素比较的情况产生了新的区间值<code>left</code>、<code>right</code>值，当出现<code>left &gt; right</code>时，说明不存在值为x的元素。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在第1行中给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">1≤n≤1000</span><span style=\"color: rgb(33, 37, 41);\">）和一个整数</span><span style=\"color: rgb(33, 37, 41);\">x</span><span style=\"color: rgb(33, 37, 41);\">；</span></p><p><span style=\"color: rgb(33, 37, 41);\">第2行输入</span><span style=\"color: rgb(33, 37, 41);\">n</span><span style=\"color: rgb(33, 37, 41);\">个整数，其间以空格分隔。</span></p>","output_description":"<p>在每一行中输出查找过程中对应步骤的中间结果，按照“[left,right][mid]”的格式输出。提示：相邻数字、符号之间没有空格。</p><p>如果找到，输出相应的下标（下标从0开始）；如果没有找到，在一行中输出“Not Found”。</p><p>如果输入的n个整数没有按照从小到大的顺序排列，或者出现了相同的数，则输出“Invalid Value”。</p>","samples_input":["10 2\n1 2 3 4 5 6 7 8 9 10","4 5\n71 74 78 100","5 5\n39 60 80 80 100"],"samples_output":["[0,9][4]\n[0,3][1]\n1","[0,3][1]\n[0,0][0]\nNot Found","Invalid Value"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"二分查找法之过程"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">给定每种图书购买的价格和数量，</span><span style=\"color: rgb(33, 37, 41);\">编写程序</span><span style=\"color: rgb(33, 37, 41);\">计算应付的总费用。</span></p>","difficulty":"Low","hint":"","input_description":"<p>第一行一个正整数n，不超过1000，表示购买读书得种类；<br /></p><p>接下来的n行，每行一种图书的价格和购买数量。</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出一个浮点数，表示应付的总费用。精确到小数点后2位。</span><br /></p>","samples_input":["10\n28.99 32.17 45.6 78 35.48 86.25 27.88 43.28 56.19 65.5\n1 5 8 10 5 1 1 2 3 4"],"samples_output":["2143.30"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"计算书费"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">石头剪刀布是常见的猜拳游戏。石头胜剪刀，剪刀胜布，布胜石头。如果两个人出拳一样，则不分胜负。</span></p><p><span style=\"color: rgb(33, 37, 41);\">一天，小A和小B正好在玩石头剪刀布。已知他们的出拳都是有周期性规律的，比如：“石头-布-石头-剪刀-石头-布-石头-剪刀……”，就是以“石头-布-石头-剪刀”为周期不断循环的。</span></p><p><span style=\"color: rgb(33, 37, 41);\">请问，小A和小B比了N轮之后，谁赢的轮数多？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(64, 64, 64);\">输入包含三行。第一行包含三个整数：N，NA，NB，分别表示比了N轮，小A出拳的周期长度，小B出拳的周期长度。0 &lt; N,NA,NB &lt;= 100。</span></p><p><span style=\"color: rgb(64, 64, 64);\">第二行包含NA个整数，表示小A出拳的规律。</span></p><p><span style=\"color: rgb(64, 64, 64);\">第三行包含NB个整数，表示小B出拳的规律。</span></p><p><span style=\"color: rgb(64, 64, 64);\">其中，0表示“石头”，2表示“剪刀”，5表示“布”。相邻两个整数之间用单个空格隔开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">如果小A赢的轮数多，输出A；如果小B赢的轮数多，输出B；如果两人打平，输出draw。</span><br /></p>","samples_input":["10 3 4\n0 2 5\n0 5 0 2"],"samples_output":["A"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"石头剪刀布"},{"description":"<p>输入正数N（N&lt;=100），输出下列形状的三角形。</p><p>例如：当N=5时输出：</p><pre><code>   11\n    7   12\n    4    8   13\n    2    5    9   14\n    1    3    6   10   15\n</code></pre>","difficulty":"Low","hint":"","input_description":"<p>一个自然数N（N&lt;=100）<br /></p>","output_description":"<p>按要求输出n个斜行，每个整数按照宽度为5的格式输出。<br /></p>","samples_input":["5"],"samples_output":["   11\n    7   12\n    4    8   13\n    2    5    9   14\n    1    3    6   10   15"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"斜三角填数"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。</span></p><p><span style=\"color: rgb(33, 37, 41);\">我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。</span></p><p><span style=\"color: rgb(33, 37, 41);\">由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。</span></p><p><span style=\"color: rgb(33, 37, 41);\">现在要把这些区域中的树（包括区域端点处的两棵树）移走。</span></p><p><span style=\"color: rgb(33, 37, 41);\">你的任务是计算将这些树都移走后，马路上还有多少棵树。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行有两个整数L（1 &lt;= L &lt;= 10000）和 M（1 &lt;= M &lt;= 100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格隔开。</span></p><p><span style=\"color: rgb(33, 37, 41);\">接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个整数，表示马路上剩余的树的数目。</span><br /></p>","samples_input":["500 3\n150 300\n100 200\n470 471"],"samples_output":["298"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"校门外的树"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">在边长为9的正方形培养皿中，正中心位置有m个细菌。</span></p><p><span style=\"color: rgb(33, 37, 41);\">假设细菌的寿命仅一天，但每天可繁殖10个后代，而且这10个后代，有两个分布在原来的单元格中，其余的均匀分布在其四周相邻的八个单元格中。</span></p><p><span style=\"color: rgb(33, 37, 41);\">求经过n(1≤n≤4)天后，细菌在培养皿中的分布情况。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入为两个整数，第一个整数m表示中心位置细菌的个数（2 ≤ m ≤ 30），第二个整数n表示经过的天数（1 ≤ n ≤ 10）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出九行九列整数矩阵，每行的整数之间用空格分隔。整个矩阵代表n天后细菌在培养皿上的分布情况。</span><br /></p>","samples_input":["2 1"],"samples_output":["0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0\n0 0 0 2 4 2 0 0 0\n0 0 0 2 2 2 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"细菌的繁殖与扩散"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">已知两个升序数组，将它们合并成一个升序数组并输出。</span></p><p><span style=\"color: rgb(33, 37, 41);\">例如：数组array1={3,6,13,35,54}，数组array2={14,19,26,32}， 合并为新的数组array={3,6,13,14,19,26,32,35,54}。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入两行升序整数，当每行输入0时，表示输入结束。每一行保证没有重复的整数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">每行整数的个数1&lt;=N&lt;=10000。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出合并后的升序数组。整数之间用1个空格隔开。</span><br /></p>","samples_input":["3 6 13 35 54 0\n14 19 26 32 0"],"samples_output":["3 6 13 14 19 26 32 35 54"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"合并数组"},{"description":"<p>ICPC/CCPC系列比赛排名规则：</p><ol><li>题目数量，这个好理解，数量越多越靠前。</li><li>&quot;罚时&quot;。题目相同时，罚时越少越靠前。 每道题的罚时由基准罚时和附加罚时两部分的和构成。每道题通过时，该题的基准罚时为当前时间减去开始时间的差值，如果这道题之前有提交不正确的，每提交不通过一次，多增加20分钟附加罚时。如果题目一直未通过，之前提交错误的不计入罚时。如果题目已经通过，则之后的提交无论正确与否都不计入罚时。</li></ol><p>现在给定一系列提交数据，请你计算罚时。</p>","difficulty":"Low","hint":"","input_description":"<p>给一个数N，表示N次提交。（0&lt;=N&lt;= 10000） 接下来N行，每行用空格隔开的3个数a b c。下面的N行数据按照c值从小到大顺序有序。</p><p>a数字，表示题号（0&lt;a &lt;= 100）；</p><p>b是0或1，表示当前题目在本次提交是否通过，1表示通过；</p><p>c表示当前提交的时间（即与比赛开始时间的差异），单位为分钟。(0<span style=\"color: rgb(51, 51, 51);\">&lt;</span>c<span style=\"color: rgb(51, 51, 51);\">&lt;=</span>1000)</p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出总的罚时。</span><br /></p>","samples_input":["3\n1 1 10\n2 1 20\n3 1 30","7\n1 0 10\n1 1 15\n2 0 20\n3 1 30\n2 0 50\n2 1 100\n2 0 200"],"samples_output":["60","205"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"罚时计算"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">从右上角开始按字母表顺序S型打印由小写字母组成的字母方阵。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">一个正整数n (1=&lt;n&lt;=1000)。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按字母表顺序输出n行n列的小写字母组成的方阵，从右上角开始S型循环打印，字母之间用一个空格分割，每行最后一个字母后面没有空格。</span><br /></p>","samples_input":["6"],"samples_output":["j y x m l a\ni z w n k b\nh a v o j c\ng b u p i d\nf c t q h e\ne d s r g f"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"字母方阵"},{"description":"<p>编写程序，将1到n*n之间的每个整数，从1开始，按照顺序依次填入到n阶蛇形方阵（具体见样例）。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">&lt;100</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\">N×N</span><span style=\"color: rgb(33, 37, 41);\">的蛇形方阵。每行</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个数字，每个数字</span><span style=\"color: rgb(33, 37, 41);\">占</span><span style=\"color: rgb(33, 37, 41);\">5</span><span style=\"color: rgb(33, 37, 41);\">位。</span><br /></p>","samples_input":["5","6"],"samples_output":["    1    3    6   10   15\n    2    5    9   14   19\n    4    8   13   18   22\n    7   12   17   21   24\n   11   16   20   23   25","    1    3    6   10   15   21\n    2    5    9   14   20   26\n    4    8   13   19   25   30\n    7   12   18   24   29   33\n   11   17   23   28   32   35\n   16   22   27   31   34   36"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"蛇形矩阵"},{"description":"<p><span style=\"color: rgb(51, 51, 51);\">编写程序，将1到n*n之间的每个整数，从1开始，按照顺序依次填入到n阶蛇形方阵（具体见样例）。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">在一行中给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">&lt;100</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\">N×N</span><span style=\"color: rgb(33, 37, 41);\">的蛇形方阵。每行</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个数字，每个数字</span><span style=\"color: rgb(33, 37, 41);\">占</span><span style=\"color: rgb(33, 37, 41);\">5</span><span style=\"color: rgb(33, 37, 41);\">位。</span><br /></p>","samples_input":["5","6"],"samples_output":["    1    2    6    7   15\n    3    5    8   14   16\n    4    9   13   17   22\n   10   12   18   21   23\n   11   19   20   24   25","    1    2    6    7   15   16\n    3    5    8   14   17   26\n    4    9   13   18   25   27\n   10   12   19   24   28   33\n   11   20   23   29   32   34\n   21   22   30   31   35   36"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"蛇形方阵2"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">大佬和小白玩 “井”字棋。也就是在九宫格中，只要任意行、列，或者任意对角线上面出现三个连续相同的棋子，就能获胜。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果两个人都能获胜，则算小白先行险胜。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，请根据棋盘状态，判断当前输赢。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">三行三列的字符元素，代表</span><span style=\"color: rgb(33, 37, 41);\">大佬和小白各自走3步后</span><span style=\"color: rgb(33, 37, 41);\">棋盘状态，字符元素用空格分开，其中元素为D代表大佬玩家的棋子，为O表示没有棋子，为X代表小白玩家的棋子。</span></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">如果大佬获胜，输出“Jiang hai shi lao de la!”；</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果小白获胜，输出“Chang jiang hou lang tui qian lang!”；</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果是小白险胜的话，则输出“Cheng rang,Cheng rang!”；</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果没有获胜，输出“Zai lai yi ju!”。</span><br /></p>","samples_input":["D O X\nO D X\nX O D"],"samples_output":["Jiang hai shi lao de la!"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"井字棋"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">我们定义正整数的因子和是不包括自己的其它所有因子之和。</span></p><p><span style=\"color: rgb(33, 37, 41);\">例如，4的因子和是1+2=3，6的因子和是1+2+3=6，7的因子和是1，8的因子和是1+2+4=7，9的因子和是1+3=4。</span></p><p><span style=\"color: rgb(33, 37, 41);\">我们约定1的因子和是0。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，对一组正整数，按每个数因子和的大小，从小到大排序。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行是一个正整数n（不超过100），表示正整数个数；</span></p><p><span style=\"color: rgb(33, 37, 41);\">第二行包括n个正整数，整数之间以空格隔开。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按因子和的大小从小到大输出n个正整数。如果有因子和相同的，则按照整数从小到大排序。</span></p><p><span style=\"color: rgb(33, 37, 41);\">每个数的输出包括该数和该数的因子和，因子和包括在一对小括号中。</span></p><p><span style=\"color: rgb(33, 37, 41);\">每个输出之后加入1个空格。</span><br /></p>","samples_input":["5\n9 6 7 4 8"],"samples_output":["7(1) 4(3) 9(4) 6(6) 8(7) "],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"按因子和排序"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">有若干个编号（编号是从0开始的连续整数，数量不超过100个）通过键盘输入，以-1表示结束。</span></p><p><span style=\"color: rgb(33, 37, 41);\">输入过程中可能发生漏输入现象，请找出缺失的编号并按照指定格式打印出来</span><span style=\"color: rgb(33, 37, 41);\">，其中最大的编号肯定不会漏输入</span><span style=\"color: rgb(33, 37, 41);\">。</span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入若干非负整数，以-1结束。保证有编号漏输入。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">将缺失的编号全部按从小到大的顺序输出。</span><span style=\"color: rgb(33, 37, 41);\">每行输出6个，<span style=\"color: rgb(33, 37, 41);\">每个编号输出宽度为3，左对齐</span>。</span></p>","samples_input":["0 2 3 4 6 -1","0 1 2 5 8 13 14 18 20 -1"],"samples_output":["  1  5","  3  4  6  7  9 10\n 11 12 15 16 17 19"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"寻找缺失编号"},{"description":"<p>图书使用国际标准书号（International Standard Book Number (ISBN-10)）来编码，是一个 10 位码。</p><p>前 9 位（0−9之间的数字）分别用于表示语言、出版商和 图书信息。</p><p>第 10 位是校验位，可以是0−9之间的数字或者是字母 X （用于表示数字10）；</p><p>ISBN-10码可以通过下面方法进行验证：</p><ol><li>首先，对ISBN-10码的各个位按下面的计算式求和：$ 1×x_1​+2×x_2​+3×x_3​+4×x_4​⋯+9×x_9​+10×x_{10} $；​</li><li>将求和的结果对11取余数，如果余为0，则说明该ISBN-10码是一个有效码，否则，就不是一个有效的ISBN-10码。</li></ol><p>现输入一批ISBN-10图书编码，请你验证该编码是否是有效的国际标准书号。</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行给出正整数N（≤10）是输入的ISBN-10图书编号的个数。</span></p><p><span style=\"color: rgb(33, 37, 41);\">随后N行，每行给出1个10位的ISBN-10图书编号。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按照输入的顺序每行输出1个有问题的ISBN-10编码。</span></p><p><span style=\"color: rgb(33, 37, 41);\">这里</span><span style=\"color: rgb(33, 37, 41);\">并不检验前9位是否合理，只检查前9位是否全为数字，第10为是否为数字或X，且最后1位校验码计算准确</span><span style=\"color: rgb(33, 37, 41);\">。</span></p><p><span style=\"color: rgb(33, 37, 41);\">如果所有号码都正常，则输出</span><code>All passed</code><span style=\"color: rgb(33, 37, 41);\">。</span><br /></p>","samples_input":["1\n0072880082","2\n0072880082\n084930149X","3\n013168728X\nX615880991\n026201A530"],"samples_output":["All passed","084930149X","X615880991\n026201A530"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"校验ISBN-10编码"},{"description":"<p>从键盘输入若干日期，按照日期先后顺序排序输出。<br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行一个正整数N，不超过100，表示待排序的日期数。<br /></p><p>接下来N行，每行一个日期，每个日期<span style=\"color: rgb(33, 37, 41);\">按“MM/DD/YYYY”的格式。</span></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">按“MM/DD/YYYY”的格式输出已从小到大排序的各个日期，每个日期占一行。</span><br /><br /></p>","samples_input":["6\n12/31/2005\n10/21/2003\n02/12/2004\n11/12/1999\n10/22/2003\n11/30/2005"],"samples_output":["11/12/1999\n10/21/2003\n10/22/2003\n02/12/2004\n11/30/2005\n12/31/2005"],"source":"","tags":["第6章 数组","C语言程序设计"],"title":"按日期排序"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">所谓“螺旋方阵”，是指对任意给定的</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">，将1到</span><span style=\"color: rgb(33, 37, 41);\">N×N</span><span style=\"color: rgb(33, 37, 41);\">的数字从右上角第1个格子开始，按顺时针螺旋方向顺序填入</span><span style=\"color: rgb(33, 37, 41);\">N×N</span><span style=\"color: rgb(33, 37, 41);\">的方阵里。</span></p><p><span style=\"color: rgb(33, 37, 41);\">编写程序，构造这样的螺旋方阵。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">输入在一行中给出一个正整数</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">（</span><span style=\"color: rgb(33, 37, 41);\">&lt;100</span><span style=\"color: rgb(33, 37, 41);\">）。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">输出</span><span style=\"color: rgb(33, 37, 41);\">N×N</span><span style=\"color: rgb(33, 37, 41);\">的螺旋方阵。每行</span><span style=\"color: rgb(33, 37, 41);\">N</span><span style=\"color: rgb(33, 37, 41);\">个数字，每个数字</span><span style=\"color: rgb(33, 37, 41);\">占</span><span style=\"color: rgb(33, 37, 41);\">5</span><span style=\"color: rgb(33, 37, 41);\">位。</span><br /></p>","samples_input":["5"],"samples_output":["   13   14   15   16    1\n   12   13   14   17    2\n   11   22   25   18    3\n   10   21   20   19    4\n    9    8    7    6    5"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"螺旋方阵"},{"description":"<p><span style=\"color: rgb(33, 37, 41);\">编写程序，对顺序读入的n个整数，输出不重复的整数，按原来顺序输出。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(33, 37, 41);\">第一行给出正整数n（n≤1000）。</span></p><p><span style=\"color: rgb(33, 37, 41);\">随后一行给出n个整数，其间以空格分隔。</span><br /></p>","output_description":"<p><span style=\"color: rgb(33, 37, 41);\">顺次输出所有不重复的整数。数字间空一格，行末不得有多余空格。</span><br /></p>","samples_input":["10\n1 2 3 4 5 1 3 1 8 9"],"samples_output":["1 2 3 4 5 8 9"],"source":"","tags":["C语言程序设计","第6章 数组"],"title":"数组元素去重"},{"description":"<p>你永远叫不醒一个装睡的人 —— 但是通过分析一个人的呼吸频率和脉搏，你可以发现谁在装睡！</p><p>医生告诉我们，正常人睡眠时的呼吸频率是每分钟15-20次，脉搏是每分钟50-70次。</p><p>下面给定一系列人的呼吸频率与脉搏，请你找出他们中间有可能在装睡的人，即至少一项指标不在正常范围内的人。</p>","difficulty":"Low","hint":"","input_description":"<p>输入在第一行给出一个正整数N（≤50）。</p><p>随后N行，每行给出一个人的名字（仅由英文字母组成的、长度不超过3个字符的串）、其呼吸频率和脉搏（均为不超过100的正整数）。</p>","output_description":"<p>按照输入顺序检查每个人，如果其至少一项指标不在正常范围内，则输出其名字，每个名字占一行。<br /></p>","samples_input":["4\nAmy 15 70\nTom 14 60\nJoe 18 50\nZoe 21 71"],"samples_output":["Tom\nZoe"],"source":"","tags":["第5章 循环结构","第4章 选择结构"],"title":"装睡的人"},{"description":"<p>程序功能就是显示如下形式的菜单信息。</p><pre><code>       Menu\n  (1)--读取数据  \n  (2)--数据计算  \n  (3)--查找数据  \n  (4)--输出数据  \n  (0)--退出程序  \n</code></pre><p>其中main函数已给定（如下所示），请将程序补充完整。</p><pre><code>#include &lt;stdio.h&gt;\nvoid Menu();\nint main() {\n    Menu();\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，<strong>只需要</strong>提交自己补充的代码。</p>","difficulty":"Low","hint":"<p>每行前面有空格</p>","input_description":"<p>无<br /></p>","output_description":"<p>按照输出样例格式输出指定信息。<br /></p>","samples_input":[" "],"samples_output":["       Menu\n  (1)--读取数据\n  (2)--数据计算\n  (3)--查找数据\n  (4)--输出数据\n  (0)--退出程序"],"source":"教材例7.1","tags":["第7章 函数","C语言程序设计"],"title":"定义menu函数，输出菜单选项"},{"description":"<p>程序功能：用来输出m行由*构成的图形。（$m\\geq1$）</p><p>第1行包含1个*，第2行包含2个*，......，第m行包含m个*。</p><p>其中main函数已给定（如下所示），请将程序补充完整。</p><pre><code>#include &lt;stdio.h&gt;\nvoid print(int);\nint main() {\n    int m,n;\n    scanf(&quot;%d&quot;,&m);\n    for(n=1;n&lt;=m;n++)\n        print(n);\n    return 0;\n}\n//你提交的代码将放在这里\n\n</code></pre><p>提交答案时，<strong>只需要</strong>提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一个正整数m。</p>","output_description":"<p>按照样例格式要求输出指定图形。</p>","samples_input":["3","5"],"samples_output":["*\n**\n***","*\n**\n***\n****\n*****"],"source":"教材例7.2","tags":["第7章 函数","C语言程序设计"],"title":"定义print函数，输出n个*"},{"description":"<p>程序的功能：输出[a，b]<span style=\"color: rgb(51, 51, 51);\">范围</span>内的所有素数，其中$2 \\leq a \\leq b\\leq10^5$。<br />要求每行输出10个。</p><p>其中main函数已给定（如下所示），请将程序补充完整。</p><pre><code>#include &lt;stdio.h&gt;\nint prime(int);\nint main() {\n    int a,b,i,c;\n    scanf(&quot;%d%d&quot;,&a,&b);\n    c=0;\n    for(i=a;i&lt;=b;i++)\n    {\n        if(prime(i))\n        {\n            printf(&quot;%6d&quot;,i);\n            c++;\n            if(c%10==0)\n            {\n                 c=0;\n                 printf(&quot;\\n&quot;);\n            }\n        }\n    }\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，<strong>只需要</strong>提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>包含2个正整数a和b，其中$ 2 \\leq a \\leq b \\leq 10^5 $。</p>","output_description":"<p>输出指定范围内的所有素数，每行输出10个，每个素数按照%6d的格式输出。<br /></p>","samples_input":["2 10","3 100"],"samples_output":["     2     3     5     7","     3     5     7    11    13    17    19    23    29    31\n    37    41    43    47    53    59    61    67    71    73\n    79    83    89    97"],"source":"教材例7.4","tags":["第7章 函数","C语言程序设计"],"title":"定义函数prime，判定正整数n是否素数"},{"description":"<p>下面程序功能：输入矩形的宽和高，输出矩形的面积。请将程序补充完整。</p><pre><code>#include&lt;stdio.h&gt;\nvoid area(int,int);\nint main()\n{\n    int width,height;\n    scanf(&quot;%d%d&quot;,&width,&height);\n    area(width,height);\n    return 0;\n}\n//你提交的代码在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>2个正整数，分别表示矩形的宽和高。<br /></p>","output_description":"<p>按样例格式输出矩形的面积。<br /></p>","samples_input":["3 5"],"samples_output":["15"],"source":"教材例7.6","tags":["第7章 函数","C语言程序设计"],"title":"设计函数计算并输出矩形的面积"},{"description":"<p>下面程序的功能：输入精度e，使用格雷戈里公式求π的近似值，精确到最后一项的绝对值小于精度e。请将程序补充完整。</p><p style=\"margin-left: 120px;\">$ \\frac{\\pi}{4}=1-\\frac{1}{3}+\\frac{1}{5}-\\frac{1}{7}+\\frac{1}{9}-\\frac{1}{11}+\\cdots$</p><pre><code>#include&lt;stdio.h&gt;\ndouble funpi(double e);\nint main()\n{\n    double e,pi;\n    scanf(&quot;%lf&quot;,&e);\n    pi=4*funpi(e);\n    printf(&quot;%lf\\n&quot;,pi);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>输入精度e（e&lt;1）。</p>","output_description":"<p>按样例要求格式输出pi的值。<br /></p>","samples_input":["0.0001"],"samples_output":["3.141393"],"source":"教材例7.7","tags":["第7章 函数","C语言程序设计"],"title":"定义函数求π的近似值"},{"description":"<p><span style=\"color: rgb(73, 80, 96);\">下面程序的功能是输出三个整数的最大值。请将程序补充完整。</span></p><pre><code>#include&lt;stdio.h&gt;\nint max(int a,int b,int c);\nint main()\n{\n    int a,b,c,d;\n    scanf(&quot;%d%d%d&quot;,&a,&b,&c);\n    d=max(a,b,c);\n    printf(&quot;max(%d,%d,%d)=%d\\n&quot;,a,b,c,d);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>输入三个整数，相互间用空格隔开。<br /></p>","output_description":"<p>按照样例指定格式输出结果。<br /></p>","samples_input":["3 5 4"],"samples_output":["max(3,5,4)=5"],"source":"教材例7.8","tags":["第7章 函数","C语言程序设计"],"title":"设计max函数，计算三个整数的最大值"},{"description":"<p>下面程序的功能是通过递归函数计算n！。请将程序补充完整。</p><pre><code>#include&lt;stdio.h&gt;\nint fac(int);\nint main()\n{\n    int n,y;\n    scanf(&quot;%d&quot;,&n);\n    y=fac(n);\n    printf(&quot;%d!=%d\\n&quot;,n,y);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一个非负整数n（0$\\leq$ n&lt;13）。</p>","output_description":"<p>按照样例指定格式输出<span style=\"color: rgb(51, 51, 51);\">n！</span><span style=\"color: rgb(73, 80, 96);\">。</span><br /></p>","samples_input":["5"],"samples_output":["5!=120"],"source":"教材例7.12","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数计算n！"},{"description":"<p>下面程序的功能是通过递归函数计算两个整数的最大公约数。请将程序补充完整。</p><pre><code>#include&lt;stdio.h&gt;\nint gcd(int,int);\nint main()\n{\n    int a,b,x;\n    scanf(&quot;%d%d&quot;,&a,&b);\n    x=gcd(a,b);\n    printf(&quot;%d\\n&quot;,x);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>2个正整数，中间用空格隔开。<br /></p>","output_description":"<p>输出2个正整数的最大公约数。<br /></p>","samples_input":["6 8"],"samples_output":["2"],"source":"教材例7.13","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数计算两个整数的最大公约数"},{"description":"<p>下面程序的功能是通过递归函数计算组合$C{n \\atop m}$。请将程序补充完整。</p><pre><code>#include&lt;stdio.h&gt;\nint fun(int,int);\nint main()\n{\n    int m,n,x;\n    scanf(&quot;%d%d&quot;,&m,&n);\n    x=fun(m,n);\n    printf(&quot;%d\\n&quot;,x);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>2个非负整数m和n，且$n\\leq m$。<br /></p>","output_description":"<p>输出<span style=\"color: rgb(51, 51, 51);\">组合$C{n \\atop m}$的值。</span></p>","samples_input":["5 3"],"samples_output":["10"],"source":"教材例7.14","tags":["C语言程序设计","第7章 函数"],"title":"设计递归函数计算组合"},{"description":"<p>下面程序的功能是通过递归函数计算Fibonacci数列的第n项。请将程序补充完整。</p><p><span style=\"color: rgb(51, 51, 51);\">Fibonacci数列的第n项的计算公式：$ F(n)=\\left\\{\\begin{array}{cc} 1, & n=0，1\\\\ F(n-1)+F(n-2), & n&gt;1 \\end{array}\\right. $</span><br /></p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint fib(int);\nint main()\n{\n    int n;\n    scanf(&quot;%d&quot;,&n);\n    printf(&quot;%d\\n&quot;,fib(n));\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>1个非负整数n。</p>","output_description":"<p>输出Fibonacci数列的第n项。<br /></p>","samples_input":["2","3","4"],"samples_output":["2","3","5"],"source":"教材例7.15","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数计算Fibonacci数列的第n项"},{"description":"<p>下面程序的功能是通过递归函数模拟汉诺塔游戏。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nvoid move(int,char,char,char);\nint main()\n{\n    int n;\n    scanf(&quot;%d&quot;,&n);\n    printf(&quot;the step to moving %2d diskes:\\n&quot;,n);\n    move(n,&#039;a&#039;,&#039;b&#039;,&#039;c&#039;);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>盘子数n（正整数）。</p>","output_description":"<p>按照样例要求格式输出盘子移动过程。<br /></p>","samples_input":["3"],"samples_output":["the step to moving  3 diskes:\na-->c\na-->b\nc-->b\na-->c\nb-->a\nb-->c\na-->c"],"source":"教材例7.16","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数模拟汉诺塔游戏"},{"description":"<p>下面程序的功能是：从键盘输入n（不超过100）个学生的百分制成绩，计算他们的平均成绩。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\ndouble average(int[],int);\nint main()\n{\n    double ave;\n    int n,i,score[100];\n    scanf(&quot;%d&quot;,&n);\n    for(i=0;i&lt;n;i++)\n        scanf(&quot;%d&quot;,&score[i]);\n    ave=average(score,n);\n    printf(&quot;average score is %.2lf\\n&quot;,ave);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>包含2行，第一行一个正整数n，不超过100。第2行包含n个百分制分数（0到100）。</p>","output_description":"<p>按照样例要求格式输出学生们的平均分数。<br /></p>","samples_input":["10\n85 90 75 84 87 98 86 85 92 94"],"samples_output":["average score is 87.60"],"source":"教材例7.18","tags":["第7章 函数","C语言程序设计"],"title":"设计函数计算学生的平均成绩"},{"description":"<p>下面程序的功能是：从键盘输入n个整数（n不超过100），将他们从大到小排序后按顺序输出。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nvoid print(int[],int);\nvoid sort(int[],int);\nint main()\n{\n    int a[100],n,i;\n    scanf(&quot;%d&quot;,&n);\n    for(i=0;i&lt;n;i++)\n        scanf(&quot;%d&quot;,&a[i]);\n    printf(&quot;Before sort:\\n&quot;);\n    print(a,n);           //输出排序前的数组元素\n    sort(a,n);            //冒泡排序\n    printf(&quot;After sort:\\n&quot;);\n    print(a,n);           //输出排序后的数组元素\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>包含2行，第1行包含一个正整数n（不超过100），第2行包括n个整数，整数之间用1个空格隔开。<br /></p>","output_description":"<p>按照样例指定格式输出排序前后的数据。整数之间用1个空格隔开（行首行末均无空格）。<br /></p>","samples_input":["10\n3 2 8 5 9 7 4 1 0 6"],"samples_output":["Before sort:\n3 2 8 5 9 7 4 1 0 6\nAfter sort:\n9 8 7 6 5 4 3 2 1 0"],"source":"教材例7.19","tags":["第7章 函数","C语言程序设计"],"title":"设计函数实现冒泡排序"},{"description":"<p>下面程序的功能是：从键盘输入一个n行m列的矩阵，要求输出其转置矩阵（n和m均不超过10）。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; font-size: 15px; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nvoid print(int [][10],int,int);\nvoid convert(int [][10],int[][10],int,int);\nint main()\n{\n    int a[10][10],b[10][10],n,m,i,j;\n    scanf(&quot;%d%d&quot;,&n,&m);\n    for(i=0;i&lt;n;i++)\n        for(j=0;j&lt;m;j++)\n            scanf(&quot;%d&quot;,&a[i][j]);\n    print(a,n,m);         //输出转置前的矩阵\n    convert(a,b,n,m);     //矩阵装置\n    print(b,m,n);         //输出转置后的矩阵\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含2个正整数n和m（均不超过10）。<br /></p><p>接下来的n行，每行m个整数，表示矩阵数据。</p>","output_description":"<p>首先输出转置前矩阵的数据，<span style=\"color: rgb(51, 51, 51);\">共n行，每行m个数据；</span></p><p>接着输出<span style=\"color: rgb(51, 51, 51);\">转置后矩阵的数据，</span>共m行，每行n个数据。</p><p>整数之间用1个空格隔开，行首行末均无空格。<br /></p>","samples_input":["3 2\n1 2\n3 4\n5 6"],"samples_output":["1 2\n3 4\n5 6\n1 3 5\n2 4 6"],"source":"教材例7.20","tags":["第7章 函数","C语言程序设计"],"title":"设计函数实现矩阵的转置"},{"description":"<p>下面程序的功能是：从键盘输入n个（n不超过100）从大到小已排好序的整数存入数组，然后在数组中采用二分法查找整数x。如果找到，则输出x在数组中的下标；如果没有找到，则输出“Not found”。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint BinSearch(int[],int,int);\nint main()\n{\n    int a[100],n,i,x,index;\n    scanf(&quot;%d&quot;,&n);\n    for(i=0;i&lt;n;i++)\n        scanf(&quot;%d&quot;,&a[i]);\n    scanf(&quot;%d&quot;,&x);\n    index=BinSearch(a,n,x);\n    if(index&lt;0)\n        printf(&quot;Not found\\n&quot;);\n    else printf(&quot;%d\\n&quot;,index);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>第1行1个正整数n（不超过100）；</p><p>第2行共n个整数，从大到小排列；</p><p>第3行1个待查找整数x。</p>","output_description":"<p>如果找到，输出x在数组中的下标，否则输出字符串“<span style=\"color: rgb(51, 51, 51);\">Not found</span>”。<br /></p>","samples_input":["10\n90 80 75 70 65 60 45 35 20 10\n45","10\n90 80 75 70 65 60 45 35 20 10\n40"],"samples_output":["6","Not found"],"source":"教材例7.21","tags":["第7章 函数","C语言程序设计"],"title":"设计函数实现二分查找"},{"description":"<p>下面程序的功能是：从键盘输入一个三位数n，如果n是水仙花数，则输出字符串“YES”，否则输出字符串“NO”。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint judge(int);\nint main()\n{\n    int n;\n    scanf(&quot;%d&quot;,&n);\n    if(judge(n))  printf(&quot;YES\\n&quot;);\n    else printf(&quot;NO\\n&quot;);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"<p><span style=\"color: rgb(51, 51, 51);\">三位数的水仙花数满足个位数字、十位数字和百位数字的立方和等于该三位数本身。</span><br /></p>","input_description":"<p>一个三位数的整数n。<br /></p>","output_description":"<p>如果n是水仙花数，则输出字符串“YES”，否则输出字符串“NO”。<br /></p>","samples_input":["153","123"],"samples_output":["YES","NO"],"source":"教材习题7.2","tags":["第7章 函数","C语言程序设计"],"title":"设计函数判断整数是否水仙花数"},{"description":"<p>下面程序的功能是：从键盘输入一行字符，要求找到最长的单词并输出。单词之间采用空格隔开。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint Split(char[],char[][101]);\nint main()\n{\n    char str[101],words[100][101];\n    int i,counts;\n    gets(str);     //读取一行字符串\n    counts=Split(str,words); //将最长的单词存入数组words,返回最长的单词数\n    for(i=0;i&lt;counts;i++)\n        puts(words[i]);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一行字符串，长度不超过100，至少包含1个单词。<br /></p>","output_description":"<p>输出最长的单词，如果有多个，一行输出1个单词。<br /></p>","samples_input":["Welcome , this is a C program"],"samples_output":["Welcome\nprogram"],"source":"教材习题7.4","tags":["第7章 函数","C语言程序设计"],"title":"设计函数求最长的单词"},{"description":"<p>下面程序的功能是：从键盘输入一个16进制正整数，将它转换为10进制整数输出。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint Fun(char[]);\nint main()\n{\n    char str[8];\n    int ans;\n    scanf(&quot;%s&quot;,str);\n    ans=Fun(str);\n    printf(&quot;%d\\n&quot;,ans);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一个16进制的正整数符号串（长度小于8位），数据没有异常。<br /></p>","output_description":"<p>输出16进制正整数对应的10进制数。<br /></p>","samples_input":["123"],"samples_output":["291"],"source":"教材习题7.5","tags":["第7章 函数","C语言程序设计"],"title":"设计函数实现16进制转10进制"},{"description":"<p>下面程序的功能是：计算某年某月某日是该年的第几天。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint DaysOfYear(int,int,int);\nint main()\n{\n    int year,month,day,ans;\n    scanf(&quot;%d%d%d&quot;,&year,&month,&day);\n    ans=DaysOfYear(year,month,day);\n    printf(&quot;%d\\n&quot;,ans);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>三个整数，依次表示年月日，保证输入日期的合法性。<br /></p>","output_description":"<p>输出一个整数，表示输入日期是该年的第几天。<br /></p>","samples_input":["2021 9 6"],"samples_output":["249"],"source":"教材习题7.6","tags":["第7章 函数","C语言程序设计"],"title":"设计函数计算某年某月某日是该年的第几天"},{"description":"<p>下面程序的功能是：通过递归函数，计算正整数n从右边开始数第k个数字的值。如果不存在，则输出-1。</p><p>例如，整数15327<span style=\"color: rgb(51, 51, 51);\">从右边开始数第4个数字就是5。</span></p><p><span style=\"color: rgb(51, 51, 51);\">例如，整数289<span style=\"color: rgb(51, 51, 51);\">从右边开始数第5个数字不存在，则输出-1。</span></span></p><p>请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint digit(int,int);\nint main()\n{\n    int n,k,ans;\n    scanf(&quot;%d%d&quot;,&n,&k);\n    ans=digit(n,k);\n    printf(&quot;%d\\n&quot;,ans);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一行中包含2个正整数，分别表示n和k。<br /></p>","output_description":"<p>按照要求输出整数n<span style=\"color: rgb(51, 51, 51);\">从右边开始数第k个数字的值。如果不在，则输出-1。</span><br /></p>","samples_input":["15327 4","289 5"],"samples_output":["5","-1"],"source":"教材习题7.7","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数计算正整数n的倒数第k个数字"},{"description":"<p>下面程序的功能是：从键盘输入1个整数，然后通过递归函数顺序输出该整数各位上的数字。</p><p>请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nvoid Convert(int);\nint main()\n{\n    int n;\n    scanf(&quot;%d&quot;,&n);\n    Convert(n);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>1个非负整数。<br /></p>","output_description":"<p>在一行内顺序输出各位数字，数字之间用1个空格隔开，行首行末均无空格。<br /></p>","samples_input":["483"],"samples_output":["4 8 3"],"source":"教材习题7.12","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数顺序输出整数各位上的数字"},{"description":"<p>下面程序的功能是采用弦截法求方程 $x^3-11.1x^2+38.8x-41.77=0$ 的根。其中函数root用来求区间（x1,x2）的实根。​</p><p>请将程序补充完整。<br /></p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; font-size: 15px; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\ndouble root(double,double);\nint main()\n{\n    double x1,x2,ans;\n    scanf(&quot;%lf%lf&quot;,&x1,&x2);\n    ans=root(x1,x2);\n    printf(&quot;%lf\\n&quot;,ans);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>2个实数x1和x2（$x1 \\leq x2 $），中间用空格隔开。保证区间内有实根。</p>","output_description":"<p>按照样例要求格式输出<span style=\"color: rgb(51, 51, 51);\">方程 $x^3-5x^2+16x-80=0$ 的根。</span><br /></p>","samples_input":["2 3"],"samples_output":["2.096316"],"source":"教材习题7.16","tags":["第7章 函数","C语言程序设计"],"title":"弦截法计算一元多次方程的根"},{"description":"<p>下面程序的功能是：通过递归函数输出如下所示的数字三角形（行数n由键盘输入）。请将程序补充完整。</p><pre><code>   3行的数字三角形           4行的数字三角形                5行的数字三角形  \n   1                        1                            1\n   2   2                    2   2                        2   2  \n   3   3   3                3   3   3                    3   3   3 \n                            4   4   4   4                4   4   4   4\n                                                         5   5   5   5   5\n</code></pre><pre><code>#include&lt;stdio.h&gt;\nvoid Print(int);\nint main()\n{\n    int n;\n    scanf(&quot;%d&quot;,&n);\n    Print(n);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>输入数字三角形的行数n（不超过1000的正整数）。<br /></p>","output_description":"<p>按照要求格式输出n行的数字三角形，每个整数采用%4d的格式控制输出。<br /></p>","samples_input":["3"],"samples_output":["   1\n   2   2\n   3   3   3"],"source":"教材习题7.15","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数输出数字三角形"},{"description":"<p>下面程序的功能是采用牛顿迭代法求解方程f(x)=cosx-x，函数f用来计算迭代公式中$x_{n+1}$的值。请将程序补充完整。</p><p>牛顿迭代公式：$X_{n+1} = X_n - \\frac{ f(X_n) }{ f&#039;(X_n) }$</p><p>迭代初值$x_0$由键盘输入，要求绝对误差不超过0.00001。如果迭代次数超过n次还不能找到满足条件的根，则结束迭代，输出没有找到根。</p><pre><code>#include&lt;stdio.h&gt;\n#include&lt;math.h&gt;\ndouble f(double);\nint main()\n{\n    double x0,x1;\n    int i,n;\n    scanf(&quot;%lf%d&quot;,&x0,&n);\n    for(i=1;i&lt;=n;i++)\n    {\n        x1=f(x0);\n        if(fabs(x0-x1)&lt;0.00001) break;\n        else   x0=x1;\n    }\n    if(i&lt;=n) printf(&quot;%10.5lf\\n&quot;,x1);\n    else printf(&quot;Sorry,not found!\\n&quot;);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一个实数和一个正整数，实数表示初始值<span style=\"color: rgb(51, 51, 51);\">$x_0$，正整数表示最大迭代次数n。</span><br /></p>","output_description":"<p>如果找到满足条件的根，则按照%10.5lf的格式输出实根，否则输出字符串“Sorry,not found!”。<br /></p>","samples_input":["0.78539 100"],"samples_output":["   0.73909"],"source":"教材习题7.14","tags":["第7章 函数","C语言程序设计"],"title":"牛顿迭代法解方程"},{"description":"<p>下面程序的功能是用递归方法计算n阶勒让德多项式的值。其递归公式如下所示：</p><p style=\"margin-left: 80px;\">$P_n(x)=\\begin{cases}1,  & \\text{(n=0)} \\\\ x,  & \\text{(n=1)} \\\\  ((2n-1)\\cdot x\\cdot P_{n-1}(x)-(n-1)\\cdot P_{n-2}(x))/n, & \\text{(n&gt;1)} \\end{cases}$<br /></p><p>请将程序补充完整。<br /></p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\ndouble pnx(int,double);\nint main()\n{\n    int n;\n    double x,ans;\n    scanf(&quot;%d%lf&quot;,&n,&x);\n    ans=pnx(n,x);\n    printf(&quot;%lf\\n&quot;,ans);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>一行中包含2个数据，第一个数据是非负整数n，第二个是实型数据x。<br /></p>","output_description":"<p>按照%lf的格式输出<span style=\"color: rgb(51, 51, 51);\">n阶勒让德多项式的值。</span><br /></p>","samples_input":["2 2"],"samples_output":["5.500000"],"source":"教材习题7.17","tags":["第7章 函数","C语言程序设计"],"title":"递归方法计算n阶勒让德多项式的值"},{"description":"<p>下面程序的功能是应用下面的近似公式计算e的n次方。其中函数f1用来计算每个累加项的分子，函数f2用来计算每个累加项的分母。</p><p style=\"margin-left: 120px;\">$e^x=1+x+\\frac{x^2}{2!}+\\frac{x^3}{3!}+\\cdots+\\frac{x^{19}}{19!}$</p><p>请将程序补充完整。</p><pre><code>#include&lt;stdio.h&gt;\ndouble f1(int,int);\ndouble f2(int);\nint main()\n{\n    double exp;\n    int n,x;\n    scanf(&quot;%d&quot;,&x);\n    exp=1+x;\n    for(n=2;n&lt;=19;n++)\n        exp+=f1(x,n)/f2(n);\n    printf(&quot;exp(%d)=%8.4lf\\n&quot;,x,exp);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>输入整数n<br /></p>","output_description":"<p>按照样例要求的格式输出计算结果。<br /></p>","samples_input":["3"],"samples_output":["exp(3)= 20.0855"],"source":"教材习题7.18","tags":["第7章 函数","C语言程序设计"],"title":"设计函数计算e的x次幂"},{"description":"<p>下面程序的功能是：在m行n列的二维数组中寻找最大元素。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint max_value(int[][30],int,int);\nint main()\n{\n    int i,j,m,n,max,a[30][30];\n    scanf(&quot;%d%d&quot;,&m,&n);\n    for(i=0;i&lt;m;i++)\n        for(j=0;j&lt;n;j++)\n            scanf(&quot;%d&quot;,&a[i][j]);\n    max=max_value(a,m,n);\n    printf(&quot;%d\\n&quot;,max);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含2个正整数m和n，分别表示二维数组的行数和列数，其中m和n均不超过30。<br /></p><p>接下来包含m行，每行n个整数，表示二维数组各位置上的元素。整数之间用空格隔开。</p>","output_description":"<p>输出二维数组中元素的最大值。<br /></p>","samples_input":["2 4\n1 3 2 7\n4 8 3 5"],"samples_output":["8"],"source":"教材习题7.19","tags":["第7章 函数","C语言程序设计"],"title":"设计函数计算二维数组中最大元素的值"},{"description":"<p>下面程序的功能是：从键盘输入若干整数，用-1表示输入结束，需要统计整数1~4各出现的次数。</p><p>请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\nvoid Count(int[]);\nint main()\n{\n    int i,n,num[5];\n    memset(num,0,sizeof(num));\n    Count(num);\n    for(i=1;i&lt;5;i++)\n        printf(&quot;%d:%d\\n&quot;,i,num[i]);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>包含若干整数，整数之间用1个空格隔开，-1表示结束。<br /></p>","output_description":"<p>按照样例要求格式输出整数1~4各出现的次数。<br /></p>","samples_input":["1 2 3 4 1 2 -1"],"samples_output":["1:2\n2:2\n3:1\n4:1"],"source":"教材习题7.20","tags":["第7章 函数","C语言程序设计"],"title":"设计函数统计各整数出现的次数"},{"description":"<p>下面程序的功能是：设计递归函数计算如下函数<span style=\"color: rgb(51, 51, 51);\">$f(x,n)$</span>的值。请将程序补充完整。</p><p style=\"margin-left: 80px;\">$f(x,n)=x-x^2+x^3-x^4+\\cdots (-1)^{n-1}x^n          (n&gt;0)$</p><pre><code>#include&lt;stdio.h&gt;\ndouble Fx(double,int);\nint main()\n{\n    double x,ans;\n    int n;\n    scanf(&quot;%lf%d&quot;,&x,&n);\n    ans=Fx(x,n);\n    printf(&quot;%lf\\n&quot;,ans);\n    return 0;\n}\n//你提交的代码将放在这里\n\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>输入x和n，x为实数，n为正整数。</p>","output_description":"<p>用%lf的格式输出<span style=\"color: rgb(51, 51, 51);\">$f(x,n)$</span><span style=\"color: rgb(51, 51, 51);\">的值。</span><br /></p>","samples_input":["1.5 3"],"samples_output":["2.625000"],"source":"教材习题7.21","tags":["第7章 函数","C语言程序设计"],"title":"设计递归函数计算函数f(x,n)的值"},{"description":"<p>下面程序的功能是：输出n阶螺旋方阵。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nvoid Print(int [][30],int);\nvoid Matrix(int [][30],int);\nint main()\n{\n    int a[30][30],n;\n    scanf(&quot;%d&quot;,&n);\n    Matrix(a,n);\n    Print(a,n);\n    return 0;\n}\nvoid Print(int a[][30],int n)\n{\n    int i,j;\n    for(i=0;i&lt;n;i++)\n    {\n        for(j=0;j&lt;n;j++)\n            printf(&quot;%4d&quot;,a[i][j]);\n        printf(&quot;\\n&quot;);\n    }\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"<pre><code>   3阶螺旋方阵           4阶螺旋方阵             5阶螺旋方阵  \n   1   2   3           1   2   3   4           1   2   3   4   5  \n   8   9   4          12  13  14   5          16  17  18  19   6  \n   7   6   5          11  16  15   6          15  24  25  20   7  \n                      10   9   8   7          14  23  22  21   8  \n                                              13  12  11  10   9\n</code></pre>","input_description":"<p>一个正整数n（不超过30）。<br /></p>","output_description":"<p>按照指定格式输出n阶螺旋方阵（每个整数采用%4d的格式输出）。<br /></p>","samples_input":["3"],"samples_output":["   1   2   3\n   8   9   4\n   7   6   5"],"source":"教材习题7.22","tags":["第7章 函数","C语言程序设计"],"title":"设计函数生成n阶螺旋方阵"},{"description":"<p>下面程序的功能是：从键盘输入一个字符串str（长度不超过100），如果该字符串是回文，则输出“YES”，否则输出“NO”。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nint Huiwen(char[]);\nint main()\n{\n    char str[101];\n    gets(str);\n    if(Huiwen(str)) printf(&quot;YES\\n&quot;);\n    else printf(&quot;NO\\n&quot;);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"<p>回文字符串是指从前往后和从后往前读起来都一样的字符串。</p>","input_description":"<p>一行，一个字符串，长度不超过100。</p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">如果字符串是回文，则输出“YES”，否则输出“NO”。</span><br /></p>","samples_input":["abcba","abcde"],"samples_output":["YES","NO"],"source":"教材习题7.23","tags":["第7章 函数","C语言程序设计"],"title":"设计函数判断是否回文串"},{"description":"<p>下面程序的功能是：从键盘输入一个字符串str和一个字符ch，将字符串str中所有的字符ch全部删除，得到一个新的字符串，然后输出该新字符串。请将程序补充完整。</p><pre><code style=\"-webkit-tap-highlight-color: transparent; font-family: Consolas, Menlo, Courier, monospace; padding: 0px; margin: 0px; background: transparent; border-radius: 3px; line-height: 1.5; word-break: normal; white-space: pre; border: 0px;\">#include&lt;stdio.h&gt;\nvoid DelChar(char[],char);\nint main()\n{\n    char str[100],ch;\n    gets(str);\n    scanf(&quot;%c&quot;,&ch);\n    DelChar(str,ch);\n    puts(str);\n    return 0;\n}\n//你提交的代码将放在这里\n</code></pre><p>提交答案时，只需要提交自己补充的代码。</p>","difficulty":"Low","hint":"","input_description":"<p>包含2行，第1行包含一个字符串str，长度&lt;100；第2行包含一个待删除的字符ch。<br /></p>","output_description":"<p>输出删除指定字符后得到的新字符串。</p>","samples_input":["Wuhan University of Science and Technology\nn"],"samples_output":["Wuha Uiversity of Sciece ad Techology"],"source":"教材习题7.24","tags":["第7章 函数","C语言程序设计"],"title":"设计函数删除字符串中指定字符"},{"description":"<p>创建两个有序单链表，然后，把这两个有序单链表合并成一个有序单链表。</p>","difficulty":"Mid","hint":"","input_description":"<p>第一行：输入第一个有序单链表。</p><p>第二行：输入第二个有序单链表。</p>","output_description":"<p>第一行：输出合并之后的单链表</p>","samples_input":["1 2 4 5 6\n3 7 8 9"],"samples_output":["1 2 3 4 5 6 7 8 9"],"source":"教学题-数据结构-1.表","tags":["链表"],"title":"合并单链表"},{"description":"<p><span style=\"color: rgba(0, 0, 0, 0.75);\">现有</span><span style=\"color: rgba(0, 0, 0, 0.75);\">N(N≤1000)</span><span style=\"color: rgba(0, 0, 0, 0.75);\">名同学参加了期末考试，并且获得了每名同学的信息：姓名（不超过 8 个字符的仅有英文小写字母的字符串）、语文、数学、英语成绩（均为不超过 150 的自然数）。总分最高的学生就是最厉害的，请输出最厉害的学生各项信息（姓名、各科成绩）。如果有多个总分相同的学生，输出靠前的那位。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>第一行一个整数n（n&lt;=1000）</p><p>后面n行，每行一个字符串和3个整数（&lt;=150）分别单表姓名和三科成绩</p>","output_description":"<p><span style=\"color: rgba(0, 0, 0, 0.75);\">请输出最厉害的学生各项信息（姓名、各科成绩）</span><br /></p>","samples_input":["3\nsenpai 114 51 4\nlxl 114 10 23\nfafa 51 42 60"],"samples_output":["senpai 114 51 4"],"source":"洛谷","tags":["结构体"],"title":"最厉害的学生"},{"description":"<p>线性表(a1,a2,a3,…,an)中元素递增有序且按顺序存储于计算机内。要求设计一算法完成：</p><p>（1） 用最少时间在表中查找数值为x的元素。</p><p>（2） 若找到将其与后继元素位置相交换。</p><p>（3） 若找不到将其插入表中并使表中元素仍递增有序。</p>","difficulty":"Mid","hint":"<p><span style=\"color: rgb(51, 51, 51);\">找不到输出no，并插入该数。</span><br /></p>","input_description":"<p>输入：x=3</p><p>输入长度：9</p><p>输入数据：2 3 5 7 12 15 17 23 45</p>","output_description":"<p>相同元素为：3 （从下标1开始x被交换到的位置）</p><p>交换后的链表为：2 5 3 7 12 15 17 23 45</p>","samples_input":["4\n9\n2 3 5 7 12 15 17 23 45\n"],"samples_output":["no\n2 3 4 5 7 12 15 17 23 45 \n"],"source":"算法笔记","tags":["链表"],"title":"链表查找(线性表)"},{"description":"<p>KiKi学习了结构体和指针，他了解了结构体类型可以定义包含多个不同类型成员，而指针本质是内存地址，是引用数据的另外一种方式。现在他想将多个输入的数据通过结构体和指针的方式连接在一起，形成一个单向链表，即：每个结点是结构体类型，包括整型数据成员（data）和结构体指针类型成员（next），每个结点的指针部分指向下一个输入的结点。具体建立过程如下：先输入n个整数，按照数据输入的顺序建立一个带头结点的单链表，再输入一个数据m,将单链表中的值为m的结点全部删除。输出删除后的单链表信息。<br /></p>","difficulty":"Mid","hint":"","input_description":"<p style=\"margin-left: 0px;\">包括三行：</p><p>第一行输入数据个数n (3≤n≤100);</p><p>第二行依次输入n个整数(&lt;=1e6)，用空格分隔;</p><p>第三行输入欲删除数据m。</p>","output_description":"<p>包括两行：<br /></p><p>第一行输出完成删除后的单链表长度；</p><p>第二行依次输出完成删除后的单链表数据。</p>","samples_input":["5\n1 2 2 3 4\n2"],"samples_output":["3\n1 3 4"],"source":"牛客竞赛","tags":["链表","指针"],"title":"KiKi学结构体和指针"},{"description":"<p><img src=\"https://oj.wust-acm.top/public/upload/5f89f9d9dd.png\" alt=\"image.png\" width=\"700.0000610351562\" height=\"527.0552775627307\" /></p><p>$Herio$ 是一个热爱生活的男孩子，他喜欢在 $WUST$ 的校园中拍各种美美的照片。</p><p>今天他拍了 $n$ 张照片，编号从 $1$ 到 $n$，同时每张照片他定义了三个属性：色彩度 $A$，鲜艳度 $B$，清晰度 $C$，同时 $Liu$ 给他定义了一张照片的好看程度:  $Beautiful=B-A+C$，好看程度可能为负数，但是这又有什么影响呢？</p><p>他想让你帮助他给这个 $n$ 张照片按照好看程度从大到小排序，如果好看成度相同，则按照编号小的优先输出，并输出这个 $n$ 张照片的原编号，注意 $Herio$ 特别喜欢 $18$ 这个数字，如果排完序之后的照片数不足 $18$ 个请添加若干个 $H$ ，否则删掉末尾不好看的照片至 $18$ 个。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行输入一个 $n$，表示照片的个数。</p><p>接下来 $n$ 行，每行输入三个数$A,B,C$，表示照片的属性。</p>","output_description":"<p>按照题意，输出 $18$ 个数，表示照片对应的 $id$ 。</p>","samples_input":["1\n1 2 3"],"samples_output":["1 H H H H H H H H H H H H H H H H H"],"source":"","tags":["结构体"],"title":"Herio 爱拍照"},{"description":"<p><span style=\"color: rgb(77, 77, 77);\">在一次考试中，每个学生的成绩都不相同，现知道了每个学生的学号和成绩，求考第k名学生的学号和成绩。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(77, 77, 77);\">第一行有两个整数，分别是学生的人数n（1≤n≤100），和求第k名学生的k（1≤k≤n）。</span></p><p><span style=\"color: rgb(77, 77, 77);\">其后有n行数据，每行包括一个学号（整数）和一个成绩（浮点数，保留一位小数），中间用一个空格分隔。</span></p>","output_description":"<p><span style=\"color: rgb(77, 77, 77);\">输出第k名学生的学号和成绩，中间用空格分隔。</span><br /></p>","samples_input":["5 3\n90788001 67.8\n90788002 90.3\n90788003 61\n90788004 68.4\n90788005 73.9"],"samples_output":["90788004 68.4"],"source":"","tags":["结构体"],"title":"谁考了第k名"},{"description":"<p><span style=\"color: rgb(64, 64, 64);\">给定一个常数</span><span style=\"color: rgb(64, 64, 64);\">K</span><span style=\"color: rgb(64, 64, 64);\">以及一个单链表</span><span style=\"color: rgb(64, 64, 64);\">L</span><span style=\"color: rgb(64, 64, 64);\">，请编写程序将</span><span style=\"color: rgb(64, 64, 64);\">L</span><span style=\"color: rgb(64, 64, 64);\">中每</span><span style=\"color: rgb(64, 64, 64);\">K</span><span style=\"color: rgb(64, 64, 64);\">个结点反转。例如：给定</span><span style=\"color: rgb(64, 64, 64);\">L</span><span style=\"color: rgb(64, 64, 64);\">为 1→2→3→4→5→6，</span><span style=\"color: rgb(64, 64, 64);\">K</span><span style=\"color: rgb(64, 64, 64);\">为 3，则输出应该为 3→2→1→6→5→4；如果</span><span style=\"color: rgb(64, 64, 64);\">K</span><span style=\"color: rgb(64, 64, 64);\">为 4，则输出应该为 4→3→2→1→5→6，即最后不到</span><span style=\"color: rgb(64, 64, 64);\">K</span><span style=\"color: rgb(64, 64, 64);\">个元素不反转。</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数N(≤105)、以及正整数K(≤N)，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用−1表示。</p><p>接下来有N行，每行格式为:</p><pre><code>Address Data Next\n</code></pre><p>其中<code>Address</code>是结点地址，<code>Data</code>是该结点保存的整数数据，<code>Next</code>是下一结点的地址。</p>","output_description":"<p><span style=\"color: rgb(64, 64, 64);\">对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。</span><br /></p>","samples_input":["00100 6 4\n00000 4 99999\n00100 1 12309\n68237 6 -1\n33218 3 00000\n99999 5 68237\n12309 2 33218"],"samples_output":["00000 4 33218\n33218 3 12309\n12309 2 00100\n00100 1 99999\n99999 5 68237\n68237 6 -1"],"source":"","tags":["链表"],"title":"反转链表"},{"description":"<p>根据一棵二叉树的先序和中序遍历序列，可以将该二叉树构造出来。<br /></p>","difficulty":"Mid","hint":"","input_description":"<p>一行中包含两个由非空白字符组成的字符串（长度大于等于1，但不超过50），分别表示某二叉树的先序和中序遍历结果。</p><p>空白字符包括空格，制表符和换行符</p>","output_description":"<p>输出包括3行。</p><p>第一行输出该二叉树的高度。</p><p>第二行输出该二叉树的后序遍历序列。</p><p>第三行输出该二叉树的层次遍历序列。</p>","samples_input":["DBACEGF ABCDEFG"],"samples_output":["4\nACBFGED\nDBEACGF"],"source":"","tags":["二叉树"],"title":"二叉树及其遍历"},{"description":"<p>一棵树上有 $n$ 个节点，编号分别为 $1$ 到 $n$ ，每个节点都有一个权值 $w$。</p><p>我们将以下面的形式来要求你对这棵树完成一些操作：</p><ul><li><p><code>CHANGE u t</code>: 把结点 $u$ 的权值改为 $t$</p></li><li><p><code>QMAX u v</code>: 询问从点 $u$ 到点 $v$ 的路径上的节点的最大权值</p></li><li><p><code>QSUM u v</code>: 询问从点 $u$ 到点 $v$ 的路径上的节点的权值和</p></li></ul><p>注意：从点 $u$ 到点 $v$ 的路径上的节点包括 $u$ 和 $v$ 本身</p>","difficulty":"High","hint":"<p><span style=\"color: rgba(0, 0, 0, 0.87);\">对于100％的数据，保证1 $\\le$ n $\\le$ 30000，0 $\\le$ q $\\le$ 200000；中途操作中保证每个节点的权值 $w$ 在-30000到30000之间。</span><br /></p>","input_description":"<p>输入文件的第一行为一个整数<span style=\"color: rgb(51, 51, 51);\">$n$</span>，表示节点的个数。</p><p>接下来 $n – 1$ 行，每行2个整数 $a$ 和 $b$，表示节点 $a$ 和节点 $b$ 之间有一条边相连。</p><p>接下来一行 $n$ 个整数，第 $i$ 个整数 $wi$ 表示节点i的权值。</p><p>接下来1行，为一个整数 $q$，表示操作的总数。</p><p>接下来 $q$ 行，每行一个操作，以<code>CHANGE u t</code>或者<code>QMAX u v</code>或者<code>QSUM u v</code>的形式给出。</p>","output_description":"<p><span style=\"color: rgba(0, 0, 0, 0.87);\">对于每个<code>QMAX</code>或者<code>QSUM</code>的操作，每行输出一个整数表示要求输出的结果。</span></p>","samples_input":["4\n1 2\n2 3\n4 1\n4 2 1 3\n12\nQMAX 3 4\nQMAX 3 3\nQMAX 3 2\nQMAX 2 3\nQSUM 3 4\nQSUM 2 1\nCHANGE 1 5\nQMAX 3 4\nCHANGE 3 6\nQMAX 3 4\nQMAX 2 4\nQSUM 3 4"],"samples_output":["4\n1\n2\n2\n10\n6\n5\n6\n5\n16"],"source":"ZJOI2008","tags":["数据结构"],"title":"树的统计"},{"description":"<p>在LX学姐和男朋友的第一次约会中，尽管LX学姐尽快还原了牌，但却被男朋友抓到LX找场外求助，男友非常生气，觉得LX学姐经不住爱情的考验，是个渣女，于是毅然分手了，学姐非常伤心，每日以泪洗面，ZJGG非常心疼学姐，决定再为学姐找个男朋友，这次ZJGG选择广撒网多捕鱼，找了好多好多非常会写代码的男生，一共有奇数个男生，其中每个男生都在WUST OJ 通过了一定数量的题目，这些过题数目可能会重复，有且只有一个男生的过题数目是独一无二的，其余每一个过题数目都出现了偶数次。为了让学姐找到前任的感觉，这次ZJGG还是选出那个过题数目独一无二的男生，现在将Rank list给你，为了学姐的幸福，请你帮忙找到那个独一无二的男生的过题数目。</p><p>​题目保证输入合法，答案存在且唯一。</p>","difficulty":"Low","hint":"","input_description":"<p>输入的第一行包括一个整数n,表示男生的数量。</p><p>​输入的第二行是由空格分隔的n个整数，其中第i个整数a[i]表示第i个男生的过题数目。</p><p>1&lt;=n&lt;=10^6，1&lt;=a[i]&lt;=10^{18}</p>","output_description":"<p>一个整数，表示独一无二的男生的过题数目。<br /></p>","samples_input":["7\n1 1 2 3 3 3 3"],"samples_output":["2"],"source":"","tags":["校赛废案"],"title":"独一无二的数"},{"description":"<p>阿伟写的代码跑不动了！俗话说得好：代码和人一个能跑就行。工作多年的阿伟深深明白这一道理，在走之前，阿伟在公司的数据库管理系统敲下了一行神奇的魔咒：</p><pre><span style=\"padding-right: 0.1px;\">rm -rf</span></pre><p>现在距离公司发现阿伟跑路还有t秒，阿伟要尽可能利用这 t 秒时间跑路，阿伟跑路的速度是 v 米/秒，这个速度显然是不足以逃离公司的追杀，幸好，作为程序员的阿伟理所当然的会魔法，他能够燃烧 m 根头发来释放一次闪现！闪现可以在一秒内移动 s 米距离（闪现一定比跑路快），然而阿伟的头发是有限的，一开始只有 n 根，如果头发不足 m 根，就无法释放闪现，阿伟可以通过原地睡觉的方式来实现每秒生长 g 根头发的操作，现在请你告诉阿伟，在公司发现他之前，阿伟最远能跑多远。</p><p>注意，本题所有计算均不涉及浮点数，跑路、闪现或休息活动均以秒为单位，且每次活动的持续时间为整数秒。距离的单位为米。</p>","difficulty":"Low","hint":"<p><span style=\"color: rgb(51, 51, 51);\">前三秒选择闪现，第四秒直接步行，结果197=60*3+17。</span><br /></p>","input_description":"<p>一行中包含6个整数，依次分别为：</p><p>t  跑路的时间</p><pre><span style=\"padding-right: 0.1px;\">1&lt;=t&lt;=100</span></pre><p>v 跑路的速度</p><pre><span style=\"padding-right: 0.1px;\">1&lt;=v&lt;=20</span></pre><p>s 一次闪现的距离</p><pre><span style=\"padding-right: 0.1px;\">60&lt;=s&lt;=100</span></pre><p>n 初始蓝量</p><pre><span style=\"padding-right: 0.1px;\">30&lt;=n&lt;=100</span></pre><p>m 一次闪现消耗的蓝量</p><pre><span style=\"padding-right: 0.1px;\">5&lt;=m&lt;=15</span></pre><p>g 休息时每秒恢复的蓝量</p><pre><span style=\"padding-right: 0.1px;\">3&lt;=g&lt;=10</span></pre>","output_description":"<p>一个整数，表示阿伟能够跑路的最远距离<br /></p>","samples_input":["4 17 60 39 10 4"],"samples_output":["197"],"source":"","tags":["校赛废案"],"title":"阿伟要跑路"},{"description":"<p><span style=\"color: rgb(51, 51, 51);\">今天，LX心血来潮去实验室里视察了一圈，却发现自己的员工们竟然一点也不注意实验室的卫生。LX很生气，想整理出一份名单，以后每天都安排他们中的几个人去负责扫地，越先被安排去扫的越吃亏。最后，LX决定以每个人的空闲时间和能力水平为依据，<span style=\"color: rgb(51, 51, 51);\"><b>工作时长不相同时，</b></span><b>工作时间短的人先上；工作时长相同时，能力低的先上</b>。<br /></span><span style=\"color: rgb(51, 51, 51);\">LX从员工数据库中导出了</span><span style=\"color: rgb(51, 51, 51);\"><code>n</code></span><span style=\"color: rgb(51, 51, 51);\">员工的部分信息，员工的姓名</span><span style=\"color: rgb(51, 51, 51);\"><code>name</code></span><span style=\"color: rgb(51, 51, 51);\">、每天的所需的工作时间</span><span style=\"color: rgb(51, 51, 51);\"><code>t</code></span><span style=\"color: rgb(51, 51, 51);\">和上次员工考核分数</span><span style=\"color: rgb(51, 51, 51);\"><code>score</code></span><span style=\"color: rgb(51, 51, 51);\">。LX觉得这件事很简单，于是便交给你来完成。你能帮LX整理出一份扫地名单吗？</span><br /></p>","difficulty":"Low","hint":"","input_description":"<p>输入数据包括<code>n + 1</code>​行</p><p>第一行输入一个<code>n</code>​，表示员工的个数。<code>( 1 &lt;= n &lt;= 1000 )</code></p><p>接下来<code>2 ~ n + 1</code>行，第i行按顺序输入<code>name</code>（员工姓名）、<code>t</code>（每天的所需的工作时间）和<code>score</code>（上次员工考核分数）。</p><p><code>( name仅由字母组成, 不包含空格, 长度不超过20 )</code></p><p><code>( 0 &lt;= t &lt;= 1440, 0 &lt;= score &lt;= 2e8, t、score皆为整数)</code></p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">输出<span style=\"color: rgb(51, 51, 51);\"><code>n</code></span>行。</span></p><p><span style=\"color: rgb(51, 51, 51);\">按照名单上被安排去扫地的顺序，输出</span><span style=\"color: rgb(51, 51, 51);\"><code>n</code></span><span style=\"color: rgb(51, 51, 51);\">名员工的名字。</span><br /></p>","samples_input":["3\nAmeame 1440 12000\nYang 480 10000\nMaybe 480 8900"],"samples_output":["Maybe\nYang\nAmeame"],"source":"","tags":["结构体"],"title":"生气的LX (1)"},{"description":"<p>聪明的你迅速的完成了LX所需要的扫地名单，可LX看了眼名单顺序后发现这并不能让他满意。像Maybe这种最强8900怎么能第一个扫地呢？<br />于是他重新向你提出需求，希望你<strong>以导出的名单（即输入名单）为基础</strong>，根据LX的需求，把某个人放到<strong>当前名单</strong>的第一个或最后一个，你能再次满足LX的要求吗？</p>","difficulty":"Mid","hint":"","input_description":"<p>第一行输入两个数<code>n</code>和<code>m<br /></code><code>( 1 &lt;= n &lt;= 200000, 0 &lt;= m &lt;= 200000)</code><span style=\"color: rgb(51, 51, 51);\"></span><br />分别表示员工的个数和LX的需求数量。</p><p>接下来<code>2 ~ n + 1</code>行，<span style=\"color: rgb(51, 51, 51);\">第</span><span style=\"color: rgb(51, 51, 51);\"><code>i</code></span><span style=\"color: rgb(51, 51, 51);\">​行输入</span><code>name</code>，表示员工姓名。同时，此时的<code>i</code>即为该员工的编号。<code>( name仅由字母组成, 不包含空格, 长度不超过20)</code></p><p>接下来<code>m</code>行，LX将对你提出如下要求：<br />1、<code>H k</code>，将编号为<code>k</code>的员工放到名单的<strong>第一个<br /></strong>2、<code>T k</code>，将编号为<code>k</code>的员工放到名单的<strong>最后一个<br /></strong><code>1 &lt;= k &lt;= n 即员工编号</code></p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">输出<code>n</code>行。</span></p><p><span style=\"color: rgb(51, 51, 51);\">按照名单上被安排去扫地的顺序，输出</span><span style=\"color: rgb(51, 51, 51);\"><code>n</code></span><span style=\"color: rgb(51, 51, 51);\">名员工的名字。</span></p>","samples_input":["3 3\nMaybe \nYang \nAmeame \nH 2\nH 2\nT 1\n","3 3\nMaybe \nYang \nAmeame \nH 2\nH 3\nH 2\n","1 2\nZard\nH 1\nT 1\n","2 0\nAmeame\nZard\n"],"samples_output":["Yang\nAmeame\nMaybe\n","Yang\nAmeame\nMaybe\n","Zard\n","Ameame\nZard\n"],"source":"","tags":["链表","结构体"],"title":"生气的LX (2)"},{"description":"<p>(这是个夹带私货的题目)</p><p>在原神这款游戏中有一种叫做圣遗物的东西(就是游戏装备啦)，每个圣遗物拥有一个主词条和最多4条副词条(词条就是&quot;+攻击力&quot;，&quot;+防御力&quot;的那个东东)</p><p><img alt=\"圣遗物.png\" src=\"/public/upload/9af4a051a8.png\" width=\"400\" height=\"453\" /><br /></p><p>(Ps:这题我们只考虑副词条，且只考虑“暴击率”，“暴击伤害”和“攻击力”这三种词条)</p><p>HB已经刷取了很多圣遗物，背包都要满了，所以他打算挑选出一些好的圣遗物，其他的全部卖掉</p><p>但是挑选圣遗物是一件头痛的事情，因为副词条可能有很多种搭配，HB打算这样挑选圣遗物：</p><p>对于两件圣遗物，如果只能选择其中一件，那么HB将选择：</p><p>(1)含有增加暴击率词条的，如果两件圣遗物都拥有暴击率的话，选择暴击率数值更高的</p><p>(2)如果都有暴击率且数值相同，那么选择拥有增加暴击伤害词条的的，<span style=\"color: rgb(51, 51, 51);\">两件圣遗物都拥有暴击伤害的话，选择增加暴击伤害数值更高的</span></p><p><span style=\"color: rgb(51, 51, 51);\">(3)如果还是都相同，选择拥有增加攻击力词条的，<span style=\"color: rgb(51, 51, 51);\">两件圣遗物都拥有攻击力的话，选择增加攻击力数值更高的</span></span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\"><br /></span></span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">现在，HB打算从 n 件圣遗物中挑选出 m 件圣遗物，请你设计一个程序，帮助挑选出这m件圣遗物</span></span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">(防止题意太模糊，就是按上面的方式排个序，然后输出前m个的序号)</span></span></p>","difficulty":"Low","hint":"<p>Ps:std使用的是稳定的冒泡排序，如果使用不稳定的选择排序可能会出错</p>","input_description":"<p><span style=\"color: rgb(51, 51, 51);\">第一行两个数，</span><span style=\"color: rgb(51, 51, 51);\">n</span><span style=\"color: rgb(51, 51, 51);\">和</span><span style=\"color: rgb(51, 51, 51);\">m</span><span style=\"color: rgb(51, 51, 51);\">，代表圣遗物的总数量和</span><span style=\"color: rgb(51, 51, 51);\">HB</span><span style=\"color: rgb(51, 51, 51);\">想保留的圣遗物数量。</span><span style=\"color: rgb(51, 51, 51);\">1&lt;=m&lt;=n&lt;=100</span></p><p><span style=\"color: rgb(51, 51, 51);\">往后</span><span style=\"color: rgb(51, 51, 51);\">n</span><span style=\"color: rgb(51, 51, 51);\">行，每行三个整数</span><span style=\"color: rgb(51, 51, 51);\">(</span><span style=\"color: rgb(51, 51, 51);\">因为出浮点数据麻烦</span><span style=\"color: rgb(51, 51, 51);\">)</span><span style=\"color: rgb(51, 51, 51);\">，代表该圣遗物“暴击率”、“暴击伤害”、“攻击力”词条的数值</span><span style=\"color: rgb(51, 51, 51);\">(</span><span style=\"color: rgb(51, 51, 51);\">为</span><span style=\"color: rgb(51, 51, 51);\">0</span><span style=\"color: rgb(51, 51, 51);\">代表没有该词条</span><span style=\"color: rgb(51, 51, 51);\">)</span></p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">输出一行</span><span style=\"color: rgb(51, 51, 51);\">m</span><span style=\"color: rgb(51, 51, 51);\">个数，第</span><span style=\"color: rgb(51, 51, 51);\">i</span><span style=\"color: rgb(51, 51, 51);\">个数a[i]代表挑选第a[i]件圣遗物(1&lt;=a[i]&lt;=n)，<b>且以从小到大的顺序输出(</b>因为我不会写specia judge就只能麻烦你们再排个序啦<b>)</b>，每个数之间用一个空格隔开，行末无空格</span><br /></p>","samples_input":["5 2\n3 6 1\n0 0 10\n0 2 5\n0 3 3\n0 3 2"],"samples_output":["1 4"],"source":"","tags":["结构体","排序"],"title":"挑选圣遗物"},{"description":"<p>输入A、B，输出A+B。说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>-10000 &lt;= A, B &lt;= 10000。</p><p>说明：“数据规模与约定”中给出了试题中主要参数的范围。</p><p>这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。</p><p>有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。</p>","input_description":"<p>输入描述:</p><p>输入的第一行包括两个整数，由空格分隔，分别表示A、B。</p><p>说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。</p><p>做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。多余的格式检查可能会适得其反，使用你的程序错误。</p><p>在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。</p><p>输入样例:</p><p>12 45</p><p>说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。</p><p>这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。</p>","output_description":"<p>输出描述:</p><p>输出一行，包括一个整数，表示A+B的值。</p><p>说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。</p><p>在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。</p><p>输出样例:</p><p>57</p><p>说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。</p><p>样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。</p><p>要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。</p><p>比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 1 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T1","tags":["蓝桥杯-入门训练"],"title":"入门训练 A+B问题"},{"description":"<p>求1+2+3+...+n的值。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= n &lt;= 1,000,000,000。</p><p>说明：请注意这里的数据规模。</p><p>本题直接的想法是直接使用一个循环来累加，然而，当数据规模很大时，这种“暴力”的方法往往会导致超时。此时你需要想想其他方法。你可以试一试，如果使用1000000000作为你的程序的输入，你的程序是不是能在规定的上面规定的时限内运行出来。</p><p>本题另一个要值得注意的地方是答案的大小不在你的语言默认的整型(int)范围内，如果使用整型来保存结果，会导致结果错误。</p><p>如果你使用C++或C语言而且准备使用printf输出结果，则你的格式字符串应该写成%I64d以输出long long类型的整数。</p>","input_description":"<p>输入描述:</p><p>输入包括一个整数n。</p><p>输入样例:</p><p>4</p>","output_description":"<p>输出描述:</p><p>输出一行，包括一个整数，表示1+2+3+...+n的值。</p><p>输出样例:</p><p>10</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 2 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T2","tags":["蓝桥杯-入门训练"],"title":"入门训练 序列求和"},{"description":"<p>给定圆的半径r，求圆的面积。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= r &lt;= 10000。</p>","input_description":"<p>输入描述:</p><p>输入包含一个整数r，表示圆的半径。</p><p>输入样例:</p><p>4</p>","output_description":"<p>输出描述:</p><p>输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。</p><p>说明：在本题中，输入是一个整数，但是输出是一个实数。</p><p>对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须<b>严格的</b>输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。</p><p>实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</p><p>输出样例:</p><p>50.2654825</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 3 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T3","tags":["蓝桥杯-入门训练"],"title":"入门训练 圆的面积"},{"description":"<p>Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</p><p>当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= n &lt;= 1,000,000。</p>","input_description":"<p>输入描述:</p><p>输入包含一个整数n。</p><p>输入样例:</p><p>10</p>","output_description":"<p>输出描述:</p><p>输出一行，包含一个整数，表示Fn除以10007的余数。</p><p>说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</p><p>输出样例:</p><p>55</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 4 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T4","tags":["蓝桥杯-入门训练"],"title":"入门训练 Fibonacci数列"},{"description":"<p>给定一个年份，判断这一年是不是闰年。</p><p>当以下情况之一满足时，这一年是闰年：</p><p>1. 年份是4的倍数而不是100的倍数；</p><p>2. 年份是400的倍数。</p><p>其他的年份都不是闰年。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1990 &lt;= y &lt;= 2050。</p>","input_description":"<p>输入描述:</p><p>输入包含一个整数y，表示当前的年份。</p><p>输入样例:</p><p>2013</p>","output_description":"<p>输出描述:</p><p>输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</p><p>说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。<br />输出样例:<br />no</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 5 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T5","tags":["蓝桥杯-基础练习"],"title":"基础练习 闰年判断"},{"description":"<p>对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</p><p>00000</p><p>00001</p><p>00010</p><p>00011</p><p>00100</p><p>请按从小到大的顺序输出这32种01串。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>本试题没有输入。</p><p>输入样例:</p><p>00000</p><p>00001</p><p>00010</p><p>00011</p><p>&lt;以下部分省略&gt;</p>","output_description":"<p>输出描述:</p><p>输出32行，按从小到大的顺序每行一个长度为5的01串。</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 6 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T6","tags":["蓝桥杯-基础练习"],"title":"基础练习 01字串"},{"description":"<p>利用字母可以组成一些美丽的图形，下面给出了一个例子：</p><p>ABCDEFG</p><p>BABCDEF</p><p>CBABCDE</p><p>DCBABCD</p><p>EDCBABC</p><p>这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= n, m &lt;= 26。</p>","input_description":"<p>输入描述:</p><p>输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</p><p>输入样例:</p><p>5 7</p>","output_description":"<p>输出描述:</p><p>输出n行，每个m个字符，为你的图形。</p><p>输出样例:</p><p>ABCDEFG</p><p>BABCDEF</p><p>CBABCDE</p><p>DCBABCD</p><p>EDCBABC</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 7 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T7","tags":["蓝桥杯-基础练习"],"title":"基础练习 字母图形"},{"description":"<p>给出n个数，找出这n个数的最大值，最小值，和。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= n &lt;= 10000。</p>","input_description":"<p>输入描述:</p><p>第一行为整数n，表示数的个数。</p><p>第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</p><p>输入样例:</p><p>5</p><p>1 3 -2 4 5</p>","output_description":"<p>输出描述:</p><p>输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</p><p>输出样例:</p><p>5</p><p>-2</p><p>11</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 8 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T8","tags":["蓝桥杯-基础练习"],"title":"基础练习 数列特征"},{"description":"<p>给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= n &lt;= 1000。</p>","input_description":"<p>输入描述:</p><p>第一行包含一个整数n。</p><p>第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。</p><p>第三行包含一个整数a，为待查找的数。</p><p>输入样例:</p><p>6</p><p>1 9 4 8 3 9</p><p>9</p>","output_description":"<p>输出描述:</p><p>如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</p><p>输出样例:</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 9 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T9","tags":["蓝桥杯-基础练习"],"title":"基础练习 查找整数"},{"description":"<p>杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。</p><p>它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。</p><p>下面给出了杨辉三角形的前4行：</p><p>1</p><p>1 1</p><p>1 2 1</p><p>1 3 3 1</p><p>给出n，输出它的前n行。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= n &lt;= 34。</p>","input_description":"<p>输入描述:</p><p>输入包含一个数n。</p><p>输入样例:</p><p>4</p>","output_description":"<p>输出描述:</p><p>输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。</p><p>输出样例:</p><p>1</p><p>1 1</p><p>1 2 1</p><p>1 3 3 1</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 10 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T10","tags":["蓝桥杯-基础练习"],"title":"基础练习 杨辉三角形"},{"description":"<p>给定一个序列，每次询问序列中第l个数到第r个数中第K大的数是哪个。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>对于30%的数据，n,m&lt;=100；</p><p>对于100%的数据，n,m&lt;=1000；</p><p>保证k&lt;=(r-l+1)，序列中的数&lt;=106。</p>","input_description":"<p>输入描述:</p><p>第一行包含一个数n，表示序列长度。</p><p>第二行包含n个正整数，表示给定的序列。</p><p>第三个包含一个正整数m，表示询问个数。</p><p>接下来m行，每行三个数l,r,K，表示询问序列从左往右第l个数到第r个数中，从大往小第K大的数是哪个。序列元素从1开始标号。</p><p>输入样例:</p><p>5</p><p>1 2 3 4 5</p><p>2</p><p>1 5 2</p><p>2 3 2</p>","output_description":"<p>输出描述:</p><p>总共输出m行，每行一个数，表示询问的答案。</p><p>输出样例:</p><p>4</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 11 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T11","tags":["蓝桥杯-算法训练"],"title":"算法训练 区间k大数查询"},{"description":"<p>给定一个n个顶点，m条边的有向图（其中某些边权可能为负，但保证没有负环）。请你计算从1号点到其他点的最短路（顶点从1到n编号）。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>对于10%的数据，n = 2，m = 2。</p><p>对于30%的数据，n &lt;= 5，m &lt;= 10。</p><p>对于100%的数据，1 &lt;= n &lt;= 20000，1 &lt;= m &lt;= 200000，-10000 &lt;= l &lt;= 10000，保证从任意顶点都能到达其他所有顶点。</p>","input_description":"<p>输入描述:</p><p>第一行两个整数n, m。</p><p>接下来的m行，每行有三个整数u, v, l，表示u到v有一条长度为l的边。</p><p>输入样例:</p><p>3 3</p><p>1 2 -1</p><p>2 3 -1</p><p>3 1 2</p>","output_description":"<p>输出描述:</p><p>共n-1行，第i行表示1号点到i+1号点的最短路。</p><p>输出样例:</p><p>-1</p><p>-2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 15 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T15","tags":["蓝桥杯-算法训练"],"title":"算法训练 最短路"},{"description":"<p>Farmer John变得非常懒，他不想再继续维护供奶牛之间供通行的道路。道路被用来连接N个牧场，牧场被连续地编号为1到N。每一个牧场都是一个奶牛的家。FJ计划除去P条道路中尽可能多的道路，但是还要保持牧场之间 的连通性。你首先要决定那些道路是需要保留的N-1条道路。第j条双向道路连接了牧场Sj和Ej(1 &lt;= Sj&lt;= N; 1 &lt;= Ej&lt;= N; Sj!= Ej)，而且走完它需要Lj的时间。没有两个牧场是被一条以上的道路所连接。奶牛们非常伤心，因为她们的交通系统被削减了。你需要到每一个奶牛的住处去安慰她们。每次你到达第i个牧场的时候(即使你已经到过)，你必须花去Ci的时间和奶牛交谈。你每个晚上都会在同一个牧场(这是供你选择的)过夜，直到奶牛们都从悲伤中缓过神来。在早上 起来和晚上回去睡觉的时候，你都需要和在你睡觉的牧场的奶牛交谈一次。这样你才能完成你的 交谈任务。假设Farmer John采纳了你的建议，请计算出使所有奶牛都被安慰的最少时间。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>5 &lt;= N &lt;= 10000，N-1 &lt;= P &lt;= 100000，0 &lt;= Lj&lt;= 1000，1 &lt;= Ci&lt;= 1,000。</p>","input_description":"<p>输入描述:</p><p>第1行包含两个整数N和P。</p><p>接下来N行，每行包含一个整数Ci。</p><p>接下来P行，每行包含三个整数Sj, Ej和Lj。</p><p>输入样例:</p><p>5 7</p><p>10</p><p>10</p><p>20</p><p>6</p><p>30</p><p>1 2 5</p><p>2 3 5</p><p>2 4 12</p><p>3 4 17</p><p>2 5 15</p><p>3 5 6</p>","output_description":"<p>输出描述:</p><p>输出一个整数, 所需要的总时间(包含和在你所在的牧场的奶牛的两次谈话时间)。</p><p>输出样例:</p><p>176</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 16 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T16","tags":["蓝桥杯-算法训练"],"title":"算法训练 安慰奶牛"},{"description":"<p>Alice是一个让人非常愉跃的人!他总是去学习一些他不懂的问题，然后再想出许多稀奇古怪的题目。这几天，Alice又沉浸在逆序对的快乐当中，他已近学会了如何求逆序对对数，动态维护逆序对对数等等题目，他认为把这些题让你做简直是太没追求了，于是，经过一天的思考和完善，Alice终于拿出了一道他认为差不多的题目：</p><p>有一颗2n-1个节点的二叉树，它有恰好n个叶子节点，每个节点上写了一个整数。如果将这棵树的所有叶子节点上的数从左到右写下来，便得到一个序列a[1]…a[n]。现在想让这个序列中的逆序对数量最少，但唯一的操作就是选树上一个非叶子节点，将它的左右两颗子树交换。他可以做任意多次这个操作。求在最优方案下，该序列的逆序对数最少有多少。</p><p>Alice自己已近想出了题目的正解，他打算拿来和你分享，他要求你在最短的时间内完成。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>对于20%的数据，n &lt;= 5000。</p><p>对于100%的数据，1 &lt;= n &lt;= 200000，0 &lt;= a[i]&lt;2^31。</p>","input_description":"<p>输入描述:</p><p>第一行一个整数n。</p><p>下面每行，一个数x。</p><p>如果x=0，表示这个节点非叶子节点，递归地向下读入其左孩子和右孩子的信息，如果x≠0，表示这个节点是叶子节点，权值为x。</p><p>输入样例:</p><p>3</p><p>0</p><p>0</p><p>3</p><p>1</p><p>2</p>","output_description":"<p>输出描述:</p><p>输出一个整数，表示最少有多少逆序对。</p><p>输出样例:</p><p>1</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 17 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T17","tags":["蓝桥杯-算法训练"],"title":"算法训练 逆序对"},{"description":"<br /> \t<p>有n个格子，从左到右放成一排，编号为1-n。</p> \t<p>共有m次操作，有3种操作类型：</p> \t<p>1.修改一个格子的权值，</p> \t<p>2.求连续一段格子权值和，</p> \t<p>3.求连续一段格子的最大值。</p> \t<p>对于每个2、3操作输出你所求出的结果。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /> \t<p>对于20%的数据n &lt;= 100，m &lt;= 200。</p> \t<p>对于50%的数据n &lt;= 5000，m &lt;= 5000。</p> \t<p>对于100%的数据1 &lt;= n &lt;= 100000，m &lt;= 100000，0 &lt;= 格子权值 &lt;= 10000。</p>","input_description":"输入描述:<br /> \t<p>第一行2个整数n，m。</p> \t<p>接下来一行n个整数表示n个格子的初始权值。</p> \t<p>接下来m行，每行3个整数p,x,y，p表示操作类型，p=1时表示修改格子x的权值为y，p=2时表示求区间[x,y]内格子权值和，p=3时表示求区间[x,y]内格子最大的权值。</p>  <br />输入样例: <br /> 4 3<br /> 1 2 3 4<br /> 2 1 3<br /> 1 4 3<br /> 3 1 4","output_description":"<br />输出描述: <br /> \t<p>有若干行，行数等于p=2或3的操作总数。</p> \t<p>每行1个整数，对应了每个p=2或3操作的结果。</p> <br /> 输出样例: <br /> 6<br /> 3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 18 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T18","tags":["蓝桥杯-算法训练"],"title":"算法训练 操作格子"},{"description":"<br /> \t<p>给定平面上n个点。</p> \t<p>求两条直线，这两条直线互相垂直，而且它们与x轴的夹角为45度，并且n个点中离这两条直线的曼哈顿距离的最大值最小。</p> \t<p>两点之间的曼哈顿距离定义为横坐标的差的绝对值与纵坐标的差的绝对值之和，一个点到两条直线的曼哈顿距离是指该点到两条直线上的所有点的曼哈顿距离中的最小值。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /> <p>对于30%的数据，n&lt;=100。</p> <p>对于另外30%的数据，坐标范的绝对值小于100。</p> <p>对于100%的数据，n&lt;=10<sup>5</sup>。</p>","input_description":"输入描述:<br /> \t<p>第一行包含一个数n。</p> \t<p>接下来n行，每行包含两个整数，表示n个点的坐标（横纵坐标的绝对值小于10<sup>9</sup>）。</p>  <br />输入样例: <br /> 4<br /> 1 0<br /> 0 1<br /> 2 1<br /> 1 2","output_description":"<br />输出描述: <br /> \t输出一个值，表示最小的最大曼哈顿距离的值，保留一位小数。 <br /> 输出样例: <br /> 1.0","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 19 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T19","tags":["蓝桥杯-算法提高"],"title":"算法提高 两条直线"},{"description":"<br /> \t<p>Ciel有一个N*N的矩阵，每个格子里都有一个整数。</p> \t<p>N是一个奇数，设X = (N+1)/2。Ciel每次都可以做这样的一次操作：他从矩阵选出一个X*X的子矩阵，并将这个子矩阵中的所有整数都乘以-1。</p> \t<p>现在问你经过一些操作之后，矩阵中所有数的和最大可以为多少。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /> \t<p>1 &lt;= N &lt;= 33，且N为奇数。</p>","input_description":"输入描述:<br /> \t<p>第一行为一个正整数N。</p> \t<p>接下来N行每行有N个整数，表示初始矩阵中的数字。每个数的绝对值不超过1000。</p>  <br />输入样例: <br /> 3<br /> -1 -1 1<br /> -1 1 -1<br /> 1 -1 -1","output_description":"<br />输出描述: <br /> \t输出一个整数，表示操作后矩阵中所有数之和的最大值。 <br /> 输出样例: <br /> 9","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 20 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T20","tags":["蓝桥杯-算法提高"],"title":"算法提高 矩阵翻转"},{"description":"<br /> \t<p>人类在火星上发现了一种新的金属！这些金属分布在一些奇怪的地方，不妨叫它节点好了。一些节点之间有道路相连，所有的节点和道路形成了一棵树。一共有 n 个节点，这些节点被编号为 1~n 。人类将 k 个机器人送上了火星，目的是采集这些金属。这些机器人都被送到了一个指定的着落点， S 号节点。每个机器人在着落之后，必须沿着道路行走。当机器人到达一个节点时，它会采集这个节点蕴藏的所有金属矿。当机器人完成自己的任务之后，可以从任意一个节点返回地球。当然，回到地球的机器人就无法再到火星去了。我们已经提前测量出了每条道路的信息，包括它的两个端点 x 和 y，以及通过这条道路需要花费的能量 w 。我们想花费尽量少的能量采集所有节点的金属，这个任务就交给你了。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /> \t<p>所有机器人在 1 号节点着陆。</p> \t<p>第一个机器人的行走路径为 1-&gt;6 ，在 6 号节点返回地球，花费能量为1000。</p> \t<p>第二个机器人的行走路径为 1-&gt;2-&gt;3-&gt;2-&gt;4 ，在 4 号节点返回地球，花费能量为1003。</p> \t<p>第一个机器人的行走路径为 1-&gt;2-&gt;5 ，在 5 号节点返回地球，花费能量为1001。</p>","input_description":"输入描述:<br /> \t<p>第一行包含三个整数 n, S 和 k ，分别代表节点个数、着落点编号，和机器人个数。</p> \t<p>接下来一共 n-1 行，每行描述一条道路。一行含有三个整数 x, y 和 w ，代表在 x 号节点和 y 号节点之间有一条道路，通过需要花费 w 个单位的能量。所有道路都可以双向通行。</p>  <br />输入样例: <br /> 6 1 3<br /> 1 2 1<br /> 2 3 1<br /> 2 4 1000<br /> 2 5 1000<br /> 1 6 1000","output_description":"<br />输出描述: <br /> \t输出一个整数，代表采集所有节点的金属所需要的最少能量。 <br /> 输出样例: <br /> 3004","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 21 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T21","tags":["蓝桥杯-算法提高"],"title":"算法提高 金属采集"},{"description":"<br /> <p>农夫约翰正在针对一个新区域的牛奶配送合同进行研究。他打算分发牛奶到T个城镇（标号为1..T），这些城镇通过R条标号为（1..R）的道路和P条标号为（1..P）的航路相连。</p> <p>每一条公路i或者航路i表示成连接城镇A<sub>i</sub>（1&lt;=A_i&lt;=T）和B<sub>i</sub>（1&lt;=B<sub>i</sub>&lt;=T）代价为C<sub>i</sub>。每一条公路，C<sub>i</sub>的范围为0&lt;=C<sub>i</sub>&lt;=10,000；由于奇怪的运营策略，每一条航路的C<sub>i</sub>可能为负的，也就是-10,000&lt;=C<sub>i</sub>&lt;=10,000。</p> <p>每一条公路都是双向的，正向和反向的花费是一样的，都是非负的。</p> <p>每一条航路都根据输入的A<sub>i</sub>和B<sub>i</sub>进行从A<sub>i</sub>-&gt;B<sub>i</sub>的单向通行。实际上，如果现在有一条航路是从A<sub>i</sub>到B<sub>i</sub>的话，那么意味着肯定没有通行方案从B<sub>i</sub>回到A<sub>i</sub>。</p> <p>农夫约翰想把他那优良的牛奶从配送中心送到各个城镇，当然希望代价越小越好，你可以帮助他嘛？配送中心位于城镇S中（1&lt;=S&lt;=T）。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /> <p>对于20%的数据，T&lt;=100，R&lt;=500，P&lt;=500；</p> <p>对于30%的数据，R&lt;=1000，R&lt;=10000，P&lt;=3000；</p> <p>对于100%的数据，1&lt;=T&lt;=25000，1&lt;=R&lt;=50000，1&lt;=P&lt;=50000。</p>","input_description":"输入描述:<br /> \t<p>输入的第一行包含四个用空格隔开的整数T，R，P，S。</p> \t<p>接下来R行，描述公路信息，每行包含三个整数，分别表示A<sub>i</sub>，B<sub>i</sub>和C<sub>i</sub>。</p> \t<p>接下来P行，描述航路信息，每行包含三个整数，分别表示A<sub>i</sub>，B<sub>i</sub>和C<sub>i</sub>。</p>  <br />输入样例: <br /> 6 3 3 4<br /> 1 2 5<br /> 3 4 5<br /> 5 6 10<br /> 3 5 -100<br /> 4 6 -100<br /> 1 3 -10","output_description":"<br />输出描述: <br /> \t输出T行，分别表示从城镇S到每个城市的最小花费，如果到不了的话输出NO PATH。 <br /> 输出样例: <br /> NO PATH<br /> NO PATH<br /> 5<br /> 0<br /> -95<br /> -100","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 22 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T22","tags":["蓝桥杯-算法提高"],"title":"算法提高 道路和航路"},{"description":"<br />     给定带权无向图，求出一颗方差最小的生成树。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /> <p>1&lt;=U,V&lt;=N&lt;=50,N-1&lt;=M&lt;=1000,0&lt;=W&lt;=50。数据不超过5组。</p>","input_description":"输入描述:<br />    输入多组测试数据。第一行为N,M，依次是点数和边数。接下来M行，每行三个整数U,V,W，代表连接U,V的边，和权值W。保证图连通。n=m=0标志着测试文件的结束。    <br />输入样例: <br /> 4 5<br /> 1 2 1<br /> 2 3 2<br /> 3 4 2<br /> 4 1 1<br /> 2 4 3<br /> 4 6<br /> 1 2 1<br /> 2 3 2<br /> 3 4 3<br /> 4 1 1<br /> 2 4 3<br /> 1 3 3<br /> 0 0","output_description":"<br />输出描述: <br />     对于每组数据，输出最小方差，四舍五入到0.01。输出格式按照样例。 <br /> 输出样例: <br /> Case 1: 0.22<br /> Case 2: 0.00","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 23 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T23","tags":["蓝桥杯-算法提高"],"title":"算法提高 最小方差生成树"},{"description":"<p>小张是软件项目经理，他带领3个开发组。工期紧，今天都在加班呢。为鼓舞士气，小张打算给每个组发一袋核桃（据传言能补脑）。他的要求是：</p><p>1. 各组的核桃数量必须相同</p><p>2. 各组内必须能平分核桃（当然是不能打碎的）</p><p>3. 尽量提供满足1,2条件的最小数量（节约闹革命嘛）</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>输入包含三个正整数a, b, c，表示每个组正在加班的人数，用空格分开（a,b,c&lt;30）</p><p>输入样例:</p><p>2 4 5</p>","output_description":"<p>输出描述:</p><p>输出一个正整数，表示每袋核桃的数量。</p><p>输出样例:</p><p>20</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 24 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T24","tags":["蓝桥杯-历届试题"],"title":"历届试题 核桃的数量"},{"description":"<p>小明为某机构设计了一个十字型的徽标（并非红十字会啊），如下所示：</p><p>..$$$$$$$$$$$$$..</p><p>..$...........$..</p><p>$$$.$$$$$$$$$.$$$</p><p>$...$.......$...$</p><p>$.$$$.$$$$$.$$$.$</p><p>$.$...$...$...$.$</p><p>$.$.$$$.$.$$$.$.$</p><p>$.$.$...$...$.$.$</p><p>$.$.$.$$$$$.$.$.$</p><p>$.$.$...$...$.$.$</p><p>$.$.$$$.$.$$$.$.$</p><p>$.$...$...$...$.$</p><p>$.$$$.$$$$$.$$$.$</p><p>$...$.......$...$</p><p>$$$.$$$$$$$$$.$$$</p><p>..$...........$..</p><p>..$$$$$$$$$$$$$..</p><p>对方同时也需要在电脑dos窗口中以字符的形式输出该标志，并能任意控制层数。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>请仔细观察样例，尤其要注意句点的数量和输出位置。</p>","input_description":"<p>输入描述:</p><p>一个正整数 n (n&lt;30) 表示要求打印图形的层数。</p><p>输入样例:</p><p>..$$$$$$$$$$$$$..</p><p>..$...........$..</p><p>$$$.$$$$$$$$$.$$$</p><p>$...$.......$...$</p><p>$.$$$.$$$$$.$$$.$</p><p>$.$...$...$...$.$</p><p>$.$.$$$.$.$$$.$.$</p><p>$.$.$...$...$.$.$</p><p>$.$.$.$$$$$.$.$.$</p><p>$.$.$...$...$.$.$</p><p>$.$.$$$.$.$$$.$.$</p><p>$.$...$...$...$.$</p><p>$.$$$.$$$$$.$$$.$</p><p>$...$.......$...$</p><p>$$$.$$$$$$$$$.$$$</p><p>..$...........$..</p><p>..$$$$$$$$$$$$$..</p>","output_description":"<p>输出描述:</p><p>对应包围层数的该标志。</p><p>输出样例:</p><p>1</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 25 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T25","tags":["蓝桥杯-历届试题"],"title":"历届试题 打印十字图"},{"description":"<br /> <p>100 可以表示为带分数的形式：100 = 3 + 69258 / 714。</p> <p>还可以表示为：100 = 82 + 3546 / 197。</p> <p>注意特征：带分数中，数字1~9分别出现且只出现一次（不包含0）。</p> <p>类似这样的带分数，100 有 11 种表示法。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <p>从标准输入读入一个正整数N (N&lt;1000*1000)</p>   <br />输入样例: <br /> 100","output_description":"<br />输出描述: <br /> <p>程序输出该数字用数码1~9不重复不遗漏地组成带分数表示的全部种数。</p> <p>注意：不要求输出每个表示，只统计有多少表示法！</p> <br /> 输出样例: <br /> 11","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 26 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T26","tags":["蓝桥杯-历届试题"],"title":"历届试题 带分数"},{"description":"<br /> <p>如下图所示，3 x 3 的格子中填写了一些整数。</p>  +--*--+--+<br /> |10* 1|52|<br /> +--****--+<br /> |20|30* 1|<br /> *******--+<br /> | 1| 2| 3|<br /> +--+--+--+  <p>我们沿着图中的星号线剪开，得到两个部分，每个部分的数字和都是60。</p>  <p>本题的要求就是请你编程判定：对给定的m x n 的格子中的整数，是否可以分割为两个部分，使得这两个区域的数字和相等。</p> <p>如果存在多种解答，请输出包含左上角格子的那个区域包含的格子的最小数目。   </p> <p>如果无法分割，则输出 0。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> \t<p>程序先读入两个整数 m n 用空格分割 (m,n&lt;10)。</p> \t<p>表示表格的宽度和高度。</p> \t<p>接下来是n行，每行m个正整数，用空格分开。每个整数不大于10000。</p>   <br />输入样例: <br /> +--*--+--+<br /> |10* 1|52|<br /> +--****--+<br /> |20|30* 1|<br /> *******--+<br /> | 1| 2| 3|<br /> +--+--+--+","output_description":"<br />输出描述: <br /> 输出一个整数，表示在所有解中，包含左上角的分割区可能包含的最小的格子数目。 <br /> 输出样例: <br /> 3 3<br /> 10 1 52<br /> 20 30 1<br /> 1 2 3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 27 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T27","tags":["蓝桥杯-历届试题"],"title":"历届试题 剪格子"},{"description":"<br /> <p>某涉密单位下发了某种票据，并要在年终全部收回。</p> <p>每张票据有唯一的ID号。全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。</p> <p>因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。</p> <p>你的任务是通过编程，找出断号的ID和重号的ID。</p> <p>假设断号不可能发生在最大和最小号。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <p>要求程序首先输入一个整数N(N&lt;100)表示后面数据行数。</p> <p>接着读入N行数据。</p> <p>每行数据长度不等，是用空格分开的若干个（不大于100个）正整数（不大于100000），请注意行内和行末可能有多余的空格，你的程序需要能处理这些空格。</p> <p>每个整数代表一个ID号。</p>  <br />输入样例: <br />2<br /> 5 6 8 11 9 <br /> 10 12 9","output_description":"<br />输出描述: <br /> <p>要求程序输出1行，含两个整数m n，用空格分隔。</p> <p>其中，m表示断号ID，n表示重号ID</p> <br /> 输出样例: <br />7 9","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 28 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T28","tags":["蓝桥杯-历届试题"],"title":"历届试题 错误票据"},{"description":"<br />  <p>小明正在玩一个“翻硬币”的游戏。</p> <p>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。</p> <p>比如，可能情形是：**oo***oooo</p>  <p>如果同时翻转左边的两个硬币，则变为：oooo***oooo</p> <p>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？</p> <p>我们约定：把翻动相邻的两个硬币叫做一步操作，那么要求：","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />  <p>两行等长的字符串，分别表示初始状态和要达到的目标状态。每行的长度&lt;1000</p>   <br />输入样例: <br /> **********<br /> o****o****<br />","output_description":"<br />输出描述: <br />  <p>一个整数，表示最小操作步数。</p>  <br /> 输出样例: <br /> 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 29 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T29","tags":["蓝桥杯-历届试题"],"title":"历届试题 翻硬币"},{"description":"<br />  <p>小明这些天一直在思考这样一个奇怪而有趣的问题：</p> <p>在1~N的某个全排列中有多少个连号区间呢？这里所说的连号区间的定义是：</p> <p>如果区间[L, R] 里的所有元素（即此排列的第L个到第R个元素）递增排序后能得到一个长度为R-L+1的“连续”数列，则称这个区间连号区间。</p> <p>当N很小的时候，小明可以很快地算出答案，但是当N变大的时候，问题就不是那么简单了，现在小明需要你的帮助。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />  <p>第一行是一个正整数N (1 &lt;= N &lt;= 50000), 表示全排列的规模。</p> <p>第二行是N个不同的数字Pi(1 &lt;= Pi &lt;= N)， 表示这N个数字的某一全排列。</p>   <br />输入样例: <br /> 4<br /> 3 2 4 1<br />","output_description":"<br />输出描述: <br />  <p>输出一个整数，表示不同连号区间的数目。</p>  <br /> 输出样例: <br /> 7","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 30 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T30","tags":["蓝桥杯-历届试题"],"title":"历届试题 连号区间数"},{"description":"<br />  <p>小明开了一家糖果店。他别出心裁：把水果糖包成4颗一包和7颗一包的两种。糖果不能拆包卖。</p> <p>小朋友来买糖的时候，他就用这两种包装来组合。当然有些糖果数目是无法组合出来的，比如要买 10 颗糖。</p> <p>你可以用计算机测试一下，在这种包装情况下，最大不能买到的数量是17。大于17的任何数字都可以用4和7组合出来。</p> <p>本题的要求就是在已知两个包装的数量时，求最大不能组合出的数字。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />  <p>两个正整数，表示每种包装中糖的颗数(都不多于1000)</p>   <br />输入样例: <br /> 4 7<br />","output_description":"<br />输出描述: <br />  <p>一个正整数，表示最大不能买到的糖数</p>  <br /> 输出样例: <br /> 17","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 31 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T31","tags":["蓝桥杯-历届试题"],"title":"历届试题 买不到的数目"},{"description":"<br />  <p>很久以前，T王国空前繁荣。为了更好地管理国家，王国修建了大量的快速路，用于连接首都和王国内的各大城市。</p> <p>为节省经费，T国的大臣们经过思考，制定了一套优秀的修建方案，使得任何一个大城市都能从首都直接或者通过其他大城市间接到达。同时，如果不重复经过大城市，从首都到达每个大城市的方案都是唯一的。</p> <p>J是T国重要大臣，他巡查于各大城市之间，体察民情。所以，从一个城市马不停蹄地到另一个城市成了J最常做的事情。他有一个钱袋，用于存放往来城市间的路费。</p> <p>聪明的J发现，如果不在某个城市停下来修整，在连续行进过程中，他所花的路费与他已走过的距离有关，在走第x千米到第x+1千米这一千米中（x是整数），他花费的路费是x+10这么多。也就是说走1千米花费11，走2千米要花费23。</p> <p>J大臣想知道：他从某一个城市出发，中间不休息，到达另一个城市，所有可能花费的路费中最多是多少呢？</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />  <p>大臣J从城市4到城市5要花费135的路费。</p>","input_description":"输入描述:<br />  <p>输入的第一行包含一个整数n，表示包括首都在内的T王国的城市数</p> <p>城市从1开始依次编号，1号城市为首都。</p> <p>接下来n-1行，描述T国的高速路（T国的高速路一定是n-1条）</p> <p>每行三个整数Pi, Qi, Di，表示城市Pi和城市Qi之间有一条高速路，长度为Di千米。</p>   <br />输入样例: <br /> 5<br /> 1 2 2<br /> 1 3 1<br /> 2 4 5<br /> 2 5 4<br />","output_description":"<br />输出描述: <br />  <p>输出一个整数，表示大臣J最多花费的路费是多少。</p>  <br /> 输出样例: <br /> 135","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 32 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T32","tags":["蓝桥杯-历届试题"],"title":"历届试题 大臣的旅费"},{"description":"<br />  <p>    幸运数是波兰数学家乌拉姆命名的。它采用与生成素数类似的“筛法”生成</p>。 <p>    首先从1开始写出自然数1,2,3,4,5,6,....</p> <p>    1 就是第一个幸运数。</p> <p>    我们从2这个数开始。把所有序号能被2整除的项删除，变为：</p> <p>    1 _ 3 _ 5 _ 7 _ 9 ....</p> <p>    把它们缩紧，重新记序，为：</p>  <p>   1 3 5 7 9 .... 。这时，3为第2个幸运数，然后把所有能被3整除的序号位置的数删去。注意，是序号位置，不是那个数本身能否被3整除!! 删除的应该是5，11, 17, ...</p> <p>    此时7为第3个幸运数，然后再删去序号位置能被7整除的(19,39,...)</p>   <p>   最后剩下的序列类似：</p> <p>    1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, ...</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />  输入两个正整数m n, 用空格分开 (m &lt; n &lt; 1000*1000)   <br />输入样例: <br /> 1 20","output_description":"<br />输出描述: <br />  程序输出 位于m和n之间的幸运数的个数（不包含m和n）。  <br /> 输出样例: <br /> 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 33 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T33","tags":["蓝桥杯-历届试题"],"title":"历届试题 幸运数"},{"description":"<br />  <p>二叉树可以用于排序。其原理很简单：对于一个排序二叉树添加新节点时，先与根节点比较，若小则交给左子树继续处理，否则交给右子树。</p> <p>当遇到空子树时，则把该节点放入那个位置。 </p> <p>比如，10 8 5 7 12 4 的输入顺序，应该建成二叉树如下图所示，其中.表示空白。</p>   ...|-12<br /> 10-|<br /> ...|-8-|<br /> .......|...|-7<br /> .......|-5-|<br /> ...........|-4  <p>本题目要求：根据已知的数字，建立排序二叉树，并在标准输出中横向打印该二叉树。 </p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />  <p>输入数据为一行空格分开的N个整数。 N&lt;100，每个数字不超过10000。</p> <p>输入数据中没有重复的数字。 </p>   <br />输入样例: <br /> ...|-12<br /> 10-|<br /> ...|-8-|<br /> .......|...|-7<br /> .......|-5-|<br /> ...........|-4","output_description":"<br />输出描述: <br />  <p>输出该排序二叉树的横向表示。为了便于评卷程序比对空格的数目，请把空格用句点代替：</p>  <br /> 输出样例: <br /> 10 5 20","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 34 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T34","tags":["蓝桥杯-历届试题"],"title":"历届试题 横向打印二叉树"},{"description":"<br />  <p>抗日战争时期，冀中平原的地道战曾发挥重要作用。</p> <p>地道的多个站点间有通道连接，形成了庞大的网络。但也有隐患，当敌人发现了某个站点后，其它站点间可能因此会失去联系。</p> <p>我们来定义一个危险系数DF(x,y)：</p> <p>对于两个站点x和y (x != y), 如果能找到一个站点z，当z被敌人破坏后，x和y不连通，那么我们称z为关于x,y的关键点。相应的，对于任意一对站点x和y，危险系数DF(x,y)就表示为这两点之间的关键点个数。</p> <p>本题的任务是：已知网络结构，求两站点之间的危险系数。</p>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />  <p>输入数据第一行包含2个整数n(2 &lt;= n &lt;= 1000), m(0 &lt;= m &lt;= 2000),分别代表站点数，通道数；</p> <p>接下来m行，每行两个整数 u,v (1 &lt;= u, v &lt;= n; u != v)代表一条通道；</p> <p>最后1行，两个数u,v，代表询问两点之间的危险系数DF(u, v)。</p>   <br />输入样例: <br /> 7 6<br /> 1 3<br /> 2 3<br /> 3 4<br /> 3 5<br /> 4 5<br /> 5 6<br /> 1 6","output_description":"<br />输出描述: <br />  一个整数，如果询问的两点不连通则输出-1.  <br /> 输出样例: <br /> 2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 35 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T35","tags":["蓝桥杯-历届试题"],"title":"历届试题 危险系数"},{"description":"<p>X 国的一个网络使用若干条线路连接若干个节点。节点间的通信是双向的。某重要数据包，为了安全起见，必须恰好被转发两次到达目的地。该包可能在任意一个节点产生，我们需要知道该网络中一共有多少种不同的转发路径。</p><p>源地址和目标地址可以相同，但中间节点必须不同。</p><p>如下图所示的网络。</p><p><img src=\"/public/upload/910d5d5e82.jpg\" width=\"502\" height=\"376\" alt=\"\" /></p><p>1 -&gt; 2 -&gt; 3 -&gt; 1  是允许的</p><p>1 -&gt; 2 -&gt; 1 -&gt; 2 或者 1 -&gt; 2 -&gt; 3 -&gt; 2 都是非法的。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>输入数据的第一行为两个整数N M，分别表示节点个数和连接线路的条数(1&lt;=N&lt;=10000; 0&lt;=M&lt;=100000)。</p><p>接下去有M行，每行为两个整数 u 和 v，表示节点u 和 v 联通(1&lt;=u,v&lt;=N , u!=v)。</p><p>输入数据保证任意两点最多只有一条边连接，并且没有自己连自己的边，即不存在重边和自环。</p><p>输入样例:</p><p>3 3</p><p>1 2</p><p>2 3</p><p>1 3</p>","output_description":"<p>输出描述:</p><p>输出一个整数，表示满足要求的路径条数。</p><p>输出样例:</p><p>6</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 36 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T36","tags":["蓝桥杯-历届试题"],"title":"历届试题 网络寻路"},{"description":"<br />　　古时丧葬活动中经常请高僧做法事。仪式结束后，有时会有“高僧斗法”的趣味节目，以舒缓压抑的气氛。<br /> 　　节目大略步骤为：先用粮食（一般是稻米）在地上“画”出若干级台阶（表示N级浮屠）。又有若干小和尚随机地“站”在某个台阶上。最高一级台阶必须站人，其它任意。(如图1所示)<br /> 　　两位参加游戏的法师分别指挥某个小和尚向上走任意多级的台阶，但会被站在高级台阶上的小和尚阻挡，不能越过。两个小和尚也不能站在同一台阶，也不能向低级台阶移动。<br /> 　　两法师轮流发出指令，最后所有小和尚必然会都挤在高段台阶，再也不能向上移动。轮到哪个法师指挥时无法继续移动，则游戏结束，该法师认输。<br /> 　　对于已知的台阶数和小和尚的分布位置，请你计算先发指令的法师该如何决策才能保证胜出。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入数据为一行用空格分开的N个整数，表示小和尚的位置。台阶序号从1算起，所以最后一个小和尚的位置即是台阶的总数。（N&lt;100, 台阶总数&lt;1000） <br />输入样例: <br />1 5 9","output_description":"<br />输出描述: <br />　　输出为一行用空格分开的两个整数: A B, 表示把A位置的小和尚移动到B位置。若有多个解，输出A值较小的解，若无解则输出-1。<br /> 输出样例: <br />1 4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 37 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T37","tags":["蓝桥杯-历届试题"],"title":"历届试题 高僧斗法"},{"description":"<p>X国的一段古城墙的顶端可以看成 2*N个格子组成的矩形（如下图所示），现需要把这些格子刷上保护漆。</p><p><img src=\"/public/upload/4724b99d67.jpg\" width=\"439\" height=\"234\" /></p><p>你可以从任意一个格子刷起，刷完一格，可以移动到和它相邻的格子（对角相邻也算数），但不能移动到较远的格子（因为油漆未干不能踩！）</p><p>比如：a d b c e f 就是合格的刷漆顺序。</p><p>c e f d a b 是另一种合适的方案。</p><p>当已知 N 时，求总的方案数。当N较大时，结果会迅速增大，请把结果对 1000000007 (十亿零七) 取模。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>输入数据为一个正整数（不大于1000）</p><p>输入样例:</p><p>2</p>","output_description":"<p>输出描述:</p><p>输出数据为一个正整数。</p><p>输出样例:</p><p>24</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 38 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T38","tags":["蓝桥杯-历届试题"],"title":"历届试题 格子刷油漆"},{"description":"<br />　　X星球十分特殊，它的自转速度与公转速度相同，所以阳光总是以固定的角度照射。<br /> 　　最近，X星球为发展星际旅游业，把空间位置出租给Y国游客来晒太阳。每个租位是漂浮在空中的圆盘形彩云（圆盘与地面平行）。当然，这会遮挡住部分阳光，被遮挡的土地植物无法生长。<br /> 　　本题的任务是计算某个农场宜于作物生长的土地面积有多大。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入数据的第一行包含两个整数a, b，表示某农场的长和宽分别是a和b，此时，该农场的范围是由坐标(0, 0, 0), (a, 0, 0), (a, b, 0), (0, b, 0)围成的矩形区域。<br /> 　　第二行包含一个实数g，表示阳光照射的角度。简单起见，我们假设阳光光线是垂直于农场的宽的，此时正好和农场的长的夹角是g度，此时，空间中的一点(x, y, z)在地面的投影点应该是(x + z * ctg(g度), y, 0)，其中ctg(g度)表示g度对应的余切值。<br /> 　　第三行包含一个非负整数n，表示空中租位个数。<br /> 　　接下来 n 行，描述每个租位。其中第i行包含4个整数xi, yi, zi, ri，表示第i个租位彩云的圆心在(xi, yi, zi)位置，圆半径为ri。 <br />输入样例: <br />10 10<br /> 90.0<br /> 1<br /> 5 5 10 5","output_description":"<br />输出描述: <br />　　要求输出一个实数，四舍五入保留两位有效数字，表示农场里能长庄稼的土地的面积。<br /> 输出样例: <br />21.46","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 39 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T39","tags":["蓝桥杯-历届试题"],"title":"历届试题 农场阳光"},{"description":"<br />　　闲暇时，福尔摩斯和华生玩一个游戏：<br /> 　　在N张卡片上写有N个整数。两人轮流拿走一张卡片。要求下一个人拿的数字一定是前一个人拿的数字的约数或倍数。例如，某次福尔摩斯拿走的卡片上写着数字“6”，则接下来华生可以拿的数字包括：<br /> 　　1，2，3, 6，12，18，24 ....<br /> 　　当轮到某一方拿卡片时，没有满足要求的卡片可选，则该方为输方。<br /> 　　请你利用计算机的优势计算一下，在已知所有卡片上的数字和可选哪些数字的条件下，怎样选择才能保证必胜！<br /> 　　当选多个数字都可以必胜时，输出其中最小的数字。如果无论如何都会输，则输出-1。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入数据为2行。第一行是若干空格分开的整数（每个整数介于1~100间），表示当前剩余的所有卡片。<br /> 　　第二行也是若干空格分开的整数，表示可以选的数字。当然，第二行的数字必须完全包含在第一行的数字中。 <br />输入样例: <br />2 3 6<br /> 3 6","output_description":"<br />输出描述: <br />　　程序则输出必胜的招法！！<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 40 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T40","tags":["蓝桥杯-历届试题"],"title":"历届试题 约数倍数选卡片"},{"description":"<p>栋栋每天骑自行车回家需要经过一条狭长的林荫道。道路由于年久失修，变得非常不平整。虽然栋栋每次都很颠簸，但他仍把骑车经过林荫道当成一种乐趣。</p><p>由于颠簸，栋栋骑车回家的路径是一条上下起伏的曲线，栋栋想知道，他回家的这条曲线的长度究竟是多长呢？更准确的，栋栋想知道从林荫道的起点到林荫道的终点，他的车前轮的轴（圆心）经过的路径的长度。</p><p>栋栋对路面进行了测量。他把道路简化成一条条长短不等的直线段，这些直线段首尾相连，且位于同一平面内。并在该平面内建立了一个直角坐标系，把所有线段的端点坐标都计算好。</p><p>假设栋栋的自行车在行进的过程中前轮一直是贴着路面前进的。</p><p><img src=\"/public/upload/dc1df3e426.png\" width=\"512\" height=\"256\" alt=\"T41\" /></p><p>上图给出了一个简单的路面的例子，其中蓝色实线为路面，红色虚线为车轮轴经过的路径。在这个例子中，栋栋的前轮轴从A点出发，水平走到B点，然后绕着地面的F点到C点（绕出一个圆弧），再沿直线下坡到D点，最后水平走到E点，在这个图中地面的坐标依次为：(0, 0), (2, 0), (4, -1), (6, -1)，前轮半径为1.50，前轮轴前进的距离依次为：</p><p>AB=2.0000；弧长BC=0.6955；CD=1.8820；DE=1.6459。</p><p>总长度为6.2233。</p><p>下图给出了一个较为复杂的路面的例子，在这个例子中，车轮在第一个下坡还没下完时（D点）就开始上坡了，之后在坡的顶点要从E绕一个较大的圆弧到F点。这个图中前轮的半径为1，每一段的长度依次为：</p><p>AB=3.0000；弧长BC=0.9828；CD=1.1913；DE=2.6848；弧长EF=2.6224；    FG=2.4415；GH=2.2792。</p><p>总长度为15.2021。</p><p><img src=\"/public/upload/a04689b6a5.png\" width=\"680\" height=\"400\" /></p><p>现在给出了车轮的半径和路面的描述，请求出车轮轴轨迹的总长度。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>这个样例对应第一个图。</p>","input_description":"<p>输入描述:</p><p>输入的第一行包含一个整数n和一个实数r，用一个空格分隔，表示描述路面的坐标点数和车轮的半径。</p><p>接下来n行，每个包含两个实数，其中第i行的两个实数x[i], y[i]表示描述路面的第i个点的坐标。</p><p>路面定义为所有路面坐标点顺次连接起来的折线。给定的路面的一定满足以下性质：</p><p>*第一个坐标点一定是(0, 0)；</p><p>*第一个点和第二个点的纵坐标相同；</p><p>*倒数第一个点和倒数第二个点的纵坐标相同；</p><p>*第一个点和第二个点的距离不少于车轮半径；</p><p>*倒数第一个点和倒数第二个点的的距离不少于车轮半径；</p><p>*后一个坐标点的横坐标大于前一个坐标点的横坐标，即对于所有的i，x[i+1]&gt;x[i]。</p><p>输入样例:</p><p>4 1.50</p><p>0.00 0.00</p><p>2.00 0.00</p><p>4.00 -1.00</p><p>6.00 -1.00</p>","output_description":"<p>输出描述:</p><p>输出一个实数，四舍五入保留两个小数，表示车轮轴经过的总长度。</p><p>你的结果必须和参考答案一模一样才能得分。数据保证答案精确值的小数点后第三位不是4或5。</p><p>输出样例:</p><p>6.22</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 41 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T41","tags":["蓝桥杯-历届试题"],"title":"历届试题 车轮轴迹"},{"description":"<p>如下面第一个图的九宫格中，放着 1~8 的数字卡片，还有一个格子空着。与空格子相邻的格子中的卡片可以移动到空格中。经过若干次移动，可以形成第二个图所示的局面。</p><p><img src=\"/public/upload/bd156bc262.jpg\" width=\"236\" height=\"245\" alt=\"T42_1\" /><img src=\"/public/upload/f2a7decfb3.jpg\" width=\"236\" height=\"245\" /></p><p>我们把第一个图的局面记为：12345678.</p><p>把第二个图的局面记为：123.46758</p><p>显然是按从上到下，从左到右的顺序记录数字，空格记为句点。</p><p>本题目的任务是已知九宫的初态和终态，求最少经过多少步的移动可以到达。如果无论多少步都无法到达，则输出-1。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>输入第一行包含九宫的初态，第二行包含九宫的终态。</p><p>输入样例:</p><p>12345678.</p><p>123.46758</p>","output_description":"<p>输出描述:</p><p>输出最少的步数，如果不存在方案，则输出-1。</p><p>输出样例:</p><p>3</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 42 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T42","tags":["蓝桥杯-历届试题"],"title":"历届试题 九宫重排"},{"description":"<p>输入n, m, k，输出下面公式的值。</p><p><img src=\"/public/upload/a487283545.png\" width=\"317\" height=\"129\" alt=\"T43_1\" /></p><p>其中C_n^m是组合数，表示在n个人的集合中选出m个人组成一个集合的方案数。组合数的计算公式如下。</p><p><img src=\"/public/upload/b84382afe1.png\" width=\"1160\" height=\"112\" /></p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>对于10%的数据，n≤10，k≤3；</p><p>对于20%的数据，n≤20，k≤3；</p><p>对于30%的数据，n≤1000，k≤5；</p><p>对于40%的数据，n≤10^7，k≤10；</p><p>对于60%的数据，n≤10^15，k ≤100；</p><p>对于70%的数据，n≤10^100，k≤200；</p><p>对于80%的数据，n≤10^500，k ≤500；</p><p>对于100%的数据，n在十进制下不超过1000位，即1≤n&lt;10^1000，1≤k≤1000，同时0≤m≤n，k≤n。</p>","input_description":"<p>输入描述:</p><p>输入的第一行包含一个整数n；第二行包含一个整数m，第三行包含一个整数k。</p><p>输入样例:</p><p>3</p><p>1</p><p>3</p>","output_description":"<p>输出描述:</p><p>计算上面公式的值，由于答案非常大，请输出这个值除以999101的余数。</p><p>输出样例:</p><p>162</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 43 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T43","tags":["蓝桥杯-历届试题"],"title":"历届试题 公式求值"},{"description":"<br />　　如果一个序列满足下面的性质，我们就将它称为摆动序列：<br /> 　　1.        序列中的所有数都是不大于k的正整数；<br /> 　　2.        序列中至少有两个数。<br /> 　　3.        序列中的数两两不相等；<br /> 　　4.        如果第i – 1个数比第i – 2个数大，则第i个数比第i – 2个数小；如果第i – 1个数比第i – 2个数小，则第i个数比第i – 2个数大。<br /> 　　比如，当k = 3时，有下面几个这样的序列：<br /> 　　1 2<br /> 　　1 3<br /> 　　2 1<br /> 　　2 1 3<br /> 　　2 3<br /> 　　2 3 1<br /> 　　3 1<br /> 　　3 2<br /> 　　一共有8种，给定k，请求出满足上面要求的序列的个数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　输入包含了一个整数k。（k&lt;=20） <br />输入样例: <br />3","output_description":"<br />输出描述: <br />　　输出一个整数，表示满足要求的序列个数。<br /> 输出样例: <br />8","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 44 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T44","tags":["蓝桥杯-算法训练"],"title":"算法训练 摆动序列"},{"description":"<p>给定一个信封，最多只允许粘贴N张邮票，计算在给定K（N+K≤13）种邮票的情况下（假定所有的邮票数量都足够），如何设计邮票的面值，能得到最大值MAX，使在1～MAX之间的每一个邮资值都能得到。</p><p>例如，N=3，K=2，如果面值分别为1分、4分，则在1分～6分之间的每一个邮资值都能得到（当然还有8分、9分和12分）；如果面值分别为1分、3分，则在1分～7分之间的每一个邮资值都能得到。可以验证当N=3，K=2时，7分就是可以得到的连续的邮资最大值，所以MAX=7，面值分别为1分、3分。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>一行，两个数N、K</p><p>输入样例:</p><p>3 2</p>","output_description":"<p>输出描述:</p><p>两行，第一行升序输出设计的邮票面值，第二行输出“MAX=xx”（不含引号），其中xx为所求的能得到的连续邮资最大值。</p><p>输出样例:</p><p>1 3</p><p>MAX=7</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 45 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T45","tags":["蓝桥杯-算法提高"],"title":"算法提高 邮票面值设计"},{"description":"<p>153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1*1*1+5*5*5+3*3*3。编程求所有满足这种条件的三位十进制数。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 46 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T46","tags":["蓝桥杯-基础练习"],"title":"基础练习 特殊的数字"},{"description":"<p>1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>按从小到大的顺序输出满足条件的四位十进制数。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 47 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T47","tags":["蓝桥杯-基础练习"],"title":"基础练习 回文数"},{"description":"<p>123321是一个非常特殊的数，它从左边读和从右边读是一样的。</p><p>输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>1&lt;=n&lt;=54。</p>","input_description":"<p>输入描述:</p><p>输入一行，包含一个正整数n。</p><p>输入样例:</p><p>52</p>","output_description":"<p>输出描述:</p><p>按从小到大的顺序输出满足条件的整数，每个整数占一行。</p><p>输出样例:</p><p>899998</p><p>989989</p><p>998899</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 48 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T48","tags":["蓝桥杯-基础练习"],"title":"基础练习 特殊回文数"},{"description":"<p>十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。</p><p>给出一个非负整数，将它表示成十六进制的形式。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入包含一个非负整数a，表示要转换的数。0&lt;=a&lt;=2147483647</p><p>输入样例:</p><p>30</p>","output_description":"<p>输出描述:</p><p>输出这个整数的16进制表示</p><p>输出样例:</p><p>1E</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 49 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T49","tags":["蓝桥杯-基础练习"],"title":"基础练习 十进制转十六进制"},{"description":"<p>从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。</p><p>注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>FFFF</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>65535</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 50 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T50","tags":["蓝桥杯-基础练习"],"title":"基础练习 十六进制转十进制"},{"description":"<p><b>问题描述</b><b></b></p><p>给定n个十六进制正整数，输出它们对应的八进制数。</p><p><b>输入格式</b><b></b></p><p>输入的第一行为一个正整数n （1&lt;=n&lt;=10）。</p><p>接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</p><p><b>输出格式</b><b></b></p><p>输出n行，每行为输入对应的八进制正整数。</p><p><b>【注意</b><b></b>】</p><p>输入的十六进制数不会有前导0，比如012A。</p><p>输出的八进制数也不能有前导0。</p><p><b>样例输入</b><b></b></p><p>2</p><p>39</p><p>123ABC</p><p><b>样例输出</b><b></b></p><p>71</p><p>4435274</p><p><b><b>【</b>提示</b><b></b>】</p><p>先将十六进制数转换成某进制数，再由某进制数转换成八进制。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 51 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T51","tags":["蓝桥杯-基础练习"],"title":"基础练习 十六进制转八进制"},{"description":"<p>给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1&lt;=n&lt;=200</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行为一个整数n。</p><p>第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。</p><p>输入样例:</p><p>5</p><p>8 3 6 4 9</p>","output_description":"<p>输出描述:</p><p>输出一行，按从小到大的顺序输出排序后的数列。</p><p>输出样例:</p><p>3 4 6 8 9</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 52 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T52","tags":["蓝桥杯-基础练习"],"title":"基础练习 数列排序"},{"description":"<br />　　给出两个整数集合A、B，求出他们的交集、并集以及B在A中的余集。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　第一行为一个整数n，表示集合A中的元素个数。<br /> 　　第二行有n个互不相同的用空格隔开的整数，表示集合A中的元素。<br /> 　　第三行为一个整数m，表示集合B中的元素个数。<br /> 　　第四行有m个互不相同的用空格隔开的整数，表示集合B中的元素。<br /> 　　集合中的所有元素均为int范围内的整数，n、m&lt;=1000。 <br />输入样例: <br />5<br /> 1 2 3 4 5<br /> 5<br /> 2 4 6 8 10","output_description":"<br />输出描述: <br />　　第一行按从小到大的顺序输出A、B交集中的所有元素。<br /> 　　第二行按从小到大的顺序输出A、B并集中的所有元素。<br /> 　　第三行按从小到大的顺序输出B在A中的余集中的所有元素。<br /> 输出样例: <br />2 4<br /> 1 2 3 4 5 6 8 10<br /> 1 3 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 53 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T53","tags":["蓝桥杯-算法训练"],"title":"算法训练 集合运算"},{"description":"<p>给定一个以秒为单位的时间t，要求用“&lt;H&gt;:&lt;M&gt;:&lt;S&gt;”的格式来表示这个时间。&lt;H&gt;表示时间，&lt;M&gt;表示分钟，而&lt;S&gt;表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入只有一行，是一个整数t（0&lt;=t&lt;=86399）。</p><p>输入样例:</p><p>0</p>","output_description":"<p>输出描述:</p><p>输出只有一行，是以“&lt;H&gt;:&lt;M&gt;:&lt;S&gt;”的格式所表示的时间，不包括引号。</p><p>输出样例:</p><p>0:0:0</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 54 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T54","tags":["蓝桥杯-基础练习"],"title":"基础练习 时间转换"},{"description":"<br />　　有一长度为N(1&lt;=Ｎ&lt;=10)的地板，给定两种不同瓷砖：一种长度为1，另一种长度为2，数目不限。要将这个长度为N的地板铺满，一共有多少种不同的铺法？<br /> 　　例如，长度为4的地面一共有如下5种铺法：<br /> 　　4=1+1+1+1<br /> 　　4=2+1+1<br /> 　　4=1+2+1<br /> 　　4=1+1+2<br /> 　　4=2+2<br /> 　　编程用递归的方法求解上述问题。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　只有一个数N，代表地板的长度 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出一个数，代表所有不同的瓷砖铺放方法的总数<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 55 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T55","tags":["蓝桥杯-算法训练"],"title":"算法训练 瓷砖铺放"},{"description":"<p>给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：</p><p>1：两个字符串长度不等。比如 Beijing 和 Hebei</p><p>2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing</p><p>3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和        BEIjing</p><p>4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing</p><p>编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>包括两行，每行都是一个字符串</p><p>输入样例:</p><p>BEIjing</p><pre> <font>beiJing </font> </pre>","output_description":"<p>输出描述:</p><p>仅有一个数字，表明这两个字符串的关系编号</p><p>输出样例:</p><p>3</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 56 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T56","tags":["蓝桥杯-基础练习"],"title":"基础练习 字符串对比"},{"description":"<p>求出区间[a,b]中所有整数的质因数分解。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>先筛出所有素数，然后再分解。</p>","input_description":"<p>输入描述:</p><p>输入两个整数a，b。</p><p>输入样例:</p><p>3 10</p>","output_description":"<p>输出描述:</p><p>每行输出一个数的分解，形如k=a1*a2*a3...(a1&lt;=a2&lt;=a3...，k也是从小到大的)(具体可看样例)</p><p>输出样例:</p><p>3=3</p><p>4=2*2</p><p>5=5</p><p>6=2*3</p><p>7=7</p><p>8=2*2*2</p><p>9=3*3</p><p>10=2*5</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 57 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T57","tags":["蓝桥杯-基础练习"],"title":"基础练习 分解质因数"},{"description":"<p>给定一个N阶矩阵A，输出A的M次幂（M是非负整数）</p><p>例如：</p><p>A =</p><p>1 2</p><p>3 4</p><p>A的2次幂</p><p>7 10</p><p>15 22</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行是一个正整数N、M（1&lt;=N&lt;=30, 0&lt;=M&lt;=5），表示矩阵A的阶数和要求的幂数</p><p>接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值</p><p>输入样例:</p><p>2 2</p><p>1 2</p><p>3 4</p>","output_description":"<p>输出描述:</p><p>输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开</p><p>输出样例:</p><p>7 10</p><p>15 22</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 58 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T58","tags":["蓝桥杯-基础练习"],"title":"基础练习 矩阵乘法"},{"description":"<p>平面上有两个矩形，它们的边平行于直角坐标系的X轴或Y轴。对于每个矩形，我们给出它的一对相对顶点的坐标，请你编程算出两个矩形的交的面积。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入仅包含两行，每行描述一个矩形。</p><p>在每行中，给出矩形的一对相对顶点的坐标，每个点的坐标都用两个绝对值不超过10^7的实数表示。</p><p>输入样例:</p><p>1 1 3 3</p><p>2 2 4 4</p>","output_description":"<p>输出描述:</p><p>输出仅包含一个实数，为交的面积，保留到小数后两位。</p><p>输出样例:</p><p>1.00</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 59 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T59","tags":["蓝桥杯-基础练习"],"title":"基础练习 矩形面积交"},{"description":"<p>回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。</p><p>交换的定义是：交换两个相邻的字符</p><p>例如mamad</p><p>第一次交换 ad : mamda</p><p>第二次交换 md : madma</p><p>第三次交换 ma : madam (回文！完美！)</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行是一个整数N，表示接下来的字符串的长度(N &lt;= 8000)</p><p>第二行是一个字符串，长度为N.只包含小写字母</p><p>输入样例:</p><p>5</p><p>mamad</p>","output_description":"<p>输出描述:</p><p>如果可能，输出最少的交换次数。</p><p>否则输出Impossible</p><p>输出样例:</p><p>3</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 60 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T60","tags":["蓝桥杯-基础练习"],"title":"基础练习 完美的代价"},{"description":"<p>Tom教授正在给研究生讲授一门关于基因的课程，有一件事情让他颇为头疼：一条染色体上有成千上万个碱基对，它们从0开始编号，到几百万，几千万，甚至上亿。</p><p>比如说，在对学生讲解第1234567009号位置上的碱基时，光看着数字是很难准确的念出来的。</p><p>所以，他迫切地需要一个系统，然后当他输入12 3456 7009时，会给出相应的念法：</p><p>十二亿三千四百五十六万七千零九</p><p>用汉语拼音表示为</p><p>shi er yi san qian si bai wu shi liu wan qi qian ling jiu</p><p>这样他只需要照着念就可以了。</p><p>你的任务是帮他设计这样一个系统：给定一个阿拉伯数字串，你帮他按照中文读写的规范转为汉语拼音字串，相邻的两个音节用一个空格符格开。</p><p>注意必须严格按照规范，比如说“10010”读作“yi wan ling yi shi”而不是“yi wan ling shi”，“100000”读作“shi wan”而不是“yi shi wan”，“2000”读作“er qian”而不是“liang qian”。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>有一个数字串，数值大小不超过2,000,000,000。</p><p>输入样例:</p><p>1234567009</p>","output_description":"<p>输出描述:</p><p>是一个由小写英文字母，逗号和空格组成的字符串，表示该数的英文读法。</p><p>输出样例:</p><p>shi er yi san qian si bai wu shi liu wan qi qian ling jiu</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 61 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T61","tags":["蓝桥杯-基础练习"],"title":"基础练习 数的读法"},{"description":"<p>最近FJ为他的奶牛们开设了数学分析课，FJ知道若要学好这门课，必须有一个好的三角函数基本功。所以他准备和奶牛们做一个“Sine之舞”的游戏，寓教于乐，提高奶牛们的计算能力。</p><p>不妨设</p><p>An=sin(1–sin(2+sin(3–sin(4+...sin(n))...)</p><p>Sn=(...(A1+n)A2+n-1)A3+...+2)An+1</p><p>FJ想让奶牛们计算Sn的值，请你帮助FJ打印出Sn的完整表达式，以方便奶牛们做题。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>仅有一个数：N&lt;201。</p><p>输入样例:</p><p>3</p>","output_description":"<p>输出描述:</p><p>请输出相应的表达式Sn，以一个换行符结束。输出中不得含有多余的空格或换行、回车符。</p><p>输出样例:</p><p>((sin(1)+3)sin(1–sin(2))+2)sin(1–sin(2+sin(3)))+1</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 62 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T62","tags":["蓝桥杯-基础练习"],"title":"基础练习 Sine之舞"},{"description":"<p>FJ在沙盘上写了这样一些字符串：</p><p>A1 = “A”</p><p>A2 = “ABA”</p><p>A3 = “ABACABA”</p><p>A4 = “ABACABADABACABA”</p><p>… …</p><p>你能找出其中的规律并写所有的数列AN吗？</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>仅有一个数：N ≤ 26。</p><p>输入样例:</p><p>3</p>","output_description":"<p>输出描述:</p><p>请输出相应的字符串AN，以一个换行符结束。输出中不得含有多余的空格或换行、回车符。</p><p>输出样例:</p><p>ABACABA</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 63 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T63","tags":["蓝桥杯-基础练习"],"title":"基础练习 FJ的字符串"},{"description":"<p>有n（2≤n≤20）块芯片，有好有坏，已知好芯片比坏芯片多。</p><p>每个芯片都能用来测试其他芯片。用好芯片测试其他芯片时，能正确给出被测试芯片是好还是坏。而用坏芯片测试其他芯片时，会随机给出好或是坏的测试结果（即此结果与被测试芯片实际的好坏无关）。</p><p>给出所有芯片的测试结果，问哪些芯片是好芯片。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入数据第一行为一个整数n，表示芯片个数。</p><p>第二行到第n+1行为n*n的一张表，每行n个数据。表中的每个数据为0或1，在这n行中的第i行第j列（1≤i, j≤n）的数据表示用第i块芯片测试第j块芯片时得到的测试结果，1表示好，0表示坏，i=j时一律为1（并不表示该芯片对本身的测试结果。芯片不能对本身进行测试）。</p><p>输入样例:</p><p>3</p><p>1 0 1</p><p>0 1 0</p><p>1 0 1</p>","output_description":"<p>输出描述:</p><p>按从小到大的顺序输出所有好芯片的编号</p><p>输出样例:</p><p>1 3</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 64 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T64","tags":["蓝桥杯-基础练习"],"title":"基础练习 芯片测试"},{"description":"<p>话说这个世界上有各种各样的兔子和乌龟，但是研究发现，所有的兔子和乌龟都有一个共同的特点——喜欢赛跑。于是世界上各个角落都不断在发生着乌龟和兔子的比赛，小华对此很感兴趣，于是决定研究不同兔子和乌龟的赛跑。他发现，兔子虽然跑比乌龟快，但它们有众所周知的毛病——骄傲且懒惰，于是在与乌龟的比赛中，一旦任一秒结束后兔子发现自己领先t米或以上，它们就会停下来休息s秒。对于不同的兔子，t，s的数值是不同的，但是所有的乌龟却是一致——它们不到终点决不停止。</p><p>然而有些比赛相当漫长，全程观看会耗费大量时间，而小华发现只要在每场比赛开始后记录下兔子和乌龟的数据——兔子的速度v1（表示每秒兔子能跑v1米），乌龟的速度v2，以及兔子对应的t，s值，以及赛道的长度l——就能预测出比赛的结果。但是小华很懒，不想通过手工计算推测出比赛的结果，于是他找到了你——清华大学计算机系的高才生——请求帮助，请你写一个程序，对于输入的一场比赛的数据v1，v2，t，s，l，预测该场比赛的结果。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入只有一行，包含用空格隔开的五个正整数v1，v2，t，s，l，其中(v1,v2&lt;=100;t&lt;=300;s&lt;=10;l&lt;=10000且为v1,v2的公倍数)</p><p>输入样例:</p><p>10 5 5 2 20</p>","output_description":"<p>输出描述:</p><p>输出包含两行，第一行输出比赛结果——一个大写字母“T”或“R”或“D”，分别表示乌龟获胜，兔子获胜，或者两者同时到达终点。</p><p>第二行输出一个正整数，表示获胜者（或者双方同时）到达终点所耗费的时间（秒数）。</p><p>输出样例:</p><p>D</p><p>4</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 65 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T65","tags":["蓝桥杯-基础练习"],"title":"基础练习 龟兔赛跑预测"},{"description":"<p>回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入第一行是两个不超过200的正整数m, n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。</p><p>输入样例:</p><p>3 3</p><p>1 2 3</p><p>4 5 6</p><p>7 8 9</p>","output_description":"<p>输出描述:</p><p>输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。</p><p>输出样例:</p><p>1 4 7 8 9 6 3 2 5</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 66 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T66","tags":["蓝桥杯-基础练习"],"title":"基础练习 回形取数"},{"description":"<p>给定当前的时间，请用英文的读法将它读出来。</p><p>时间用时h和分m表示，在英文的读法中，读一个时间的方法是：</p><p>如果m为0，则将时读出来，然后加上“o&#039;clock”，如3:00读作“three o&#039;clock”。</p><p>如果m不为0，则将时读出来，然后将分读出来，如5:30读作“five thirty”。</p><p>时和分的读法使用的是英文数字的读法，其中0~20读作：</p><p>0:zero, 1: one, 2:two, 3:three, 4:four, 5:five, 6:six, 7:seven, 8:eight, 9:nine, 10:ten, 11:eleven, 12:twelve, 13:thirteen, 14:fourteen, 15:fifteen, 16:sixteen, 17:seventeen, 18:eighteen, 19:nineteen, 20:twenty。</p><p>30读作thirty，40读作forty，50读作fifty。</p><p>对于大于20小于60的数字，首先读整十的数，然后再加上个位数。如31首先读30再加1的读法，读作“thirty one”。</p><p>按上面的规则21:54读作“twenty one fifty four”，9:07读作“nine seven”，0:15读作“zero fifteen”。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入包含两个非负整数h和m，表示时间的时和分。非零的数字前没有前导0。h小于24，m小于60。</p><p>输入样例:</p><p>0 15</p>","output_description":"<p>输出描述:</p><p>输出时间时刻的英文。</p><p>输出样例:</p><p>zero fifteen</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 67 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T67","tags":["蓝桥杯-基础练习"],"title":"基础练习 报时助手"},{"description":"<p>给定一个n*n的棋盘，棋盘中有一些位置不能放皇后。现在要向棋盘中放入n个黑皇后和n个白皇后，使任意的两个黑皇后都不在同一行、同一列或同一条对角线上，任意的两个白皇后都不在同一行、同一列或同一条对角线上。问总共有多少种放法？n小于等于8。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入的第一行为一个整数n，表示棋盘的大小。</p><p>接下来n行，每行n个0或1的整数，如果一个整数为1，表示对应的位置可以放皇后，如果一个整数为0，表示对应的位置不可以放皇后。</p><p>输入样例:</p><p>4</p><p>1 1 1 1</p><p>1 1 1 1</p><p>1 1 1 1</p><p>1 1 1 1</p>","output_description":"<p>输出描述:</p><p>输出一个整数，表示总共有多少种放法。</p><p>输出样例:</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 68 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T68","tags":["蓝桥杯-基础练习"],"title":"基础练习 2n皇后问题"},{"description":"<p>Huffman树在编码中有着广泛的应用。在这里，我们只关心Huffman树的构造过程。</p><p>给出一列数{pi}={p0, p1, …, pn-1}，用这列数构造Huffman树的过程如下：</p><p>1.      找到{pi}中最小的两个数，设为pa和pb，将pa和pb从{pi}中删除掉，然后将它们的和加入到{pi}中。这个过程的费用记为pa+ pb。</p><p>2.      重复步骤1，直到{pi}中只剩下一个数。</p><p>在上面的操作过程中，把所有的费用相加，就得到了构造Huffman树的总费用。</p><p>本题任务：对于给定的一个数列，现在请你求出用该数列构造Huffman树的总费用。</p><p>例如，对于数列{pi}={5, 3, 8, 2, 9}，Huffman树的构造过程如下：</p><p>1.      找到{5, 3, 8, 2, 9}中最小的两个数，分别是2和3，从{pi}中删除它们并将和5加入，得到{5, 8, 9, 5}，费用为5。</p><p>2.      找到{5, 8, 9, 5}中最小的两个数，分别是5和5，从{pi}中删除它们并将和10加入，得到{8, 9, 10}，费用为10。</p><p>3.      找到{8, 9, 10}中最小的两个数，分别是8和9，从{pi}中删除它们并将和17加入，得到{10, 17}，费用为17。</p><p>4.      找到{10, 17}中最小的两个数，分别是10和17，从{pi}中删除它们并将和27加入，得到{27}，费用为27。</p><p>5.      现在，数列中只剩下一个数27，构造过程结束，总费用为5+10+17+27=59。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入的第一行包含一个正整数n（n&lt;=100）。</p><p>接下来是n个正整数，表示p0, p1, …, pn-1，每个数不超过1000。</p><p>输入样例:</p><p>5</p><p>5 3 8 2 9</p>","output_description":"<p>输出描述:</p><p>输出用这些数构造Huffman树的总费用。</p><p>输出样例:</p><p>59</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 69 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T69","tags":["蓝桥杯-基础练习"],"title":"基础练习 Huffuman树"},{"description":"<p>输入两个整数a和b，输出这两个整数的和。a和b都不超过100位。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>输出一行，表示a + b的值。</p>","input_description":"<p>输入描述:</p><p>由于a和b都比较大，所以不能直接使用语言中的标准数据类型来存储。对于这种问题，一般使用数组来处理。</p><p>定义一个数组A，A[0]用于存储a的个位，A[1]用于存储a的十位，依此类推。同样可以用一个数组B来存储b。</p><p>计算c = a + b的时候，首先将A[0]与B[0]相加，如果有进位产生，则把进位（即和的十位数）存入r，把和的个位数存入C[0]，即C[0]等于(A[0]+B[0])%10。然后计算A[1]与B[1]相加，这时还应将低位进上来的值r也加起来，即C[1]应该是A[1]、B[1]和r三个数的和．如果又有进位产生，则仍可将新的进位存入到r中，和的个位存到C[1]中。依此类推，即可求出C的所有位。</p><p>最后将C输出即可。</p><p>输入样例:</p><p>20100122201001221234567890</p><p>2010012220100122</p>","output_description":"<p>输出描述:</p><p>输入包括两行，第一行为一个非负整数a，第二行为一个非负整数b。两个整数都不超过100位，两数的最高位都不是0。</p><p>输出样例:</p><p>20100122203011233454668012</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 70 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T70","tags":["蓝桥杯-基础练习"],"title":"基础练习 高精度加法"},{"description":"<p>输入一个正整数n，输出n!的值。</p><p>其中n!=1*2*3*…*n。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>输出n!的准确值。</p>","input_description":"<p>输入描述:</p><p>n!可能很大，而计算机能表示的整数范围有限，需要使用高精度计算的方法。使用一个数组A来表示一个大整数a，A[0]表示a的个位，A[1]表示a的十位，依次类推。</p><p>将a乘以一个整数k变为将数组A的每一个元素都乘以k，请注意处理相应的进位。</p><p>首先将a设为1，然后乘2，乘3，当乘到n时，即得到了n!的值。</p><p>输入样例:</p><p>10</p>","output_description":"<p>输出描述:</p><p>输入包含一个正整数n，n&lt;=1000。</p><p>输出样例:</p><p>3628800</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 71 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T71","tags":["蓝桥杯-基础练习"],"title":"基础练习 阶乘计算"},{"description":"<br />　　任何一个正整数都可以用2的幂次方表示。例如：<br /> 　　137=2<sup>7</sup>+2<sup>3</sup>+2<sup>0         </sup><br /> 　　同时约定方次用括号来表示，即a<sup>b</sup> 可表示为a（b）。<br /> 　　由此可知，137可表示为：<br /> 　　2（7）+2（3）+2（0）<br /> 　　进一步：7= 2<sup>2</sup>+2+2<sup>0   </sup>（2<sup>1</sup>用2表示）<br /> 　　3=2+2<sup>0   </sup><br /> 　　所以最后137可表示为：<br /> 　　2（2（2）+2+2（0））+2（2+2（0））+2（0）<br /> 　　又如：<br /> 　　1315=2<sup>10</sup> +2<sup>8</sup> +2<sup>5</sup> +2+1<br /> 　　所以1315最后可表示为：<br /> 　　2（2（2+2（0））+2）+2（2（2+2（0）））+2（2（2）+2（0））+2+2（0）","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入包含一个正整数N（N&lt;=20000），为要求分解的整数。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　程序输出包含一行字符串，为符合约定的n的0，2表示（在表示中不能有空格）<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 72 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T72","tags":["蓝桥杯-算法训练"],"title":"算法训练 幂方分解"},{"description":"<br />　　某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。<br /> <br /> 　　输入导弹依次飞来的高度（雷达给出的高度数据是不大于30000的正整数），计算这套系统最多能拦截多少导弹，如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　一行，为导弹依次飞来的高度 <br />输入样例: <br />389 207 155 300 299 170 158 65","output_description":"<br />输出描述: <br />　　两行，分别是最多能拦截的导弹数与要拦截所有导弹最少要配备的系统数<br /> 输出样例: <br />6<br /> 2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 73 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T73","tags":["蓝桥杯-算法训练"],"title":"算法训练 拦截导弹"},{"description":"<br />　　若一个数（首位不为零）从左向右读与从右向左读都一样，我们就将其称之为回文数。<br /> 　　例如：给定一个10进制数56，将56加65（即把56从右向左读），得到121是一个回文数。<br /> <br /> 　　又如：对于10进制数87：<br /> 　　STEP1：87+78  = 165                  STEP2：165+561 = 726<br /> 　　STEP3：726+627 = 1353                STEP4：1353+3531 = 4884<br /> <br /> 　　在这里的一步是指进行了一次N进制的加法，上例最少用了4步得到回文数4884。<br /> <br /> 　　写一个程序，给定一个N（2&lt;=N&lt;=10或N=16）进制数M（其中16进制数字为0-9与A-F），求最少经过几步可以得到回文数。<br /> 　　如果在30步以内（包含30步）不可能得到回文数，则输出“Impossible!”","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　两行，N与M <br />输入样例: <br />9<br /> 87","output_description":"<br />输出描述: <br />　　如果能在30步以内得到回文数，输出“STEP=xx”（不含引号），其中xx是步数；否则输出一行”Impossible!”（不含引号）<br /> 输出样例: <br />STEP=6","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 74 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T74","tags":["蓝桥杯-算法训练"],"title":"算法训练 回文数"},{"description":"<br />　　一个旅行家想驾驶汽车以最少的费用从一个城市到另一个城市（假设出发时油箱是空的）。给定两个城市之间的距离D1、汽车油箱的容量C（以升为单位）、每升汽油能行驶的距离D2、出发点每升汽油价格P和沿途油站数N（N可以为零），油站i离出发点的距离Di、每升汽油价格Pi（i=1，2，……N）。计算结果四舍五入至小数点后两位。如果无法到达目的地，则输出“No Solution”。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　第一行为4个实数D1、C、D2、P与一个非负整数N；<br /> 　　接下来N行，每行两个实数Di、Pi。 <br />输入样例: <br />275.6 11.9 27.4 2.8 2<br /> 102.0 2.9<br /> 220.0 2.2","output_description":"<br />输出描述: <br />　　如果可以到达目的地，输出一个实数（四舍五入至小数点后两位），表示最小费用；否则输出“No Solution”（不含引号）。<br /> 输出样例: <br />26.95","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 75 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T75","tags":["蓝桥杯-算法训练"],"title":"算法训练 旅行家的预算"},{"description":"<br /><b>问题描述</b><b>   </b><br /> <br /> 　　我们可以用这样的方式来表示一个十进制数： 将每个阿拉伯数字乘以一个以该数字所处位置的（值减１）为指数，以１０为底数的幂之和的形式。例如：１２３可表示为 １＊１０<sup>２</sup>＋２＊１０<sup>１</sup>＋３＊１０<sup>０</sup>这样的形式。<br /> 　　与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置的（值－１）为指数，以２为底数的幂之和的形式。一般说来，任何一个正整数Ｒ或一个负整数－Ｒ都可以被选来作为一个数制系统的基数。如果是以Ｒ或－Ｒ为基数，则需要用到的数码为 ０，１，．．．．Ｒ－１。例如，当Ｒ＝７时，所需用到的数码是０，１，２，３，４，５和６，这与其是Ｒ或－Ｒ无关。如果作为基数的数绝对值超过１０，则为了表示这些数码，通常使用英文字母来表示那些大于９的数码。例如对１６进制数来说，用Ａ表示１０，用Ｂ表示１１，用Ｃ表示１２，用Ｄ表示１３，用Ｅ表示１４，用Ｆ表示１５。<br /> 　　在负进制数中是用－Ｒ 作为基数，例如－１５（十进制）相当于１１０００１（－２进制），并且它可以被表示为２的幂级数的和数：<br /> 　　１１０００１＝１＊（－２）<sup>５</sup>＋１＊（－２）<sup>４</sup>＋０＊（－２）<sup>３</sup>＋０＊（－２）<sup>２</sup>＋<br /> 　　０＊（－２）<sup>１</sup> ＋１＊（－２）<sup>０</sup><br /> 　　<sup>  </sup>  设计一个程序，读入一个十进制数和一个负进制数的基数, 并将此十进制数转换为此负进制下的数：     －Ｒ∈｛－２，－３，－４，．．．，－２０｝<br /> <br /> <b>输</b><b>入格式</b><b>   </b><br /> 　　一行两个数，第一个是十进制数Ｎ（－32768＜＝Ｎ＜＝32767），  第二个是负进制数的基数－Ｒ。<br /> <br /> <b>输</b>出格式<b>   </b><br /> 　　输出所求负进制数及其基数，若此基数超过１０，则参照１６进制的方式处理。（格式参照样例）<br /> <br /> 　　<b>样</b><b>例</b>输入1<br /> 　　30000 -2","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />30000=11011010101110000(base-2)","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />-20000 -2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 76 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T76","tags":["蓝桥杯-算法训练"],"title":"算法训练 进制转换"},{"description":"<br /><b>问题描述</b><b>   </b><br /> <br /> 　　今年是国际数学联盟确定的“2000——世界数学年”，又恰逢我国著名数学家华罗庚先生诞辰90周年。在华罗庚先生的家乡江苏金坛，组织了一场别开生面的数学智力竞赛的活动，你的一个好朋友XZ也有幸得以参加。活动中，主持人给所有参加活动的选手出了这样一道题目：<br /> <br /> 　　设有一个长度为N的数字串，要求选手使用K个乘号将它分成K+1个部分，找出一种分法，使得这K+1个部分的乘积能够为最大。<br /> <br /> 　　同时，为了帮助选手能够正确理解题意，主持人还举了如下的一个例子：<br /> <br /> 　　有一个数字串：312， 当N=3，K=1时会有以下两种分法：<br /> <br /> 　　3*12=36<br /> 　　31*2=62<br /> <br /> 　　这时，符合题目要求的结果是：31*2=62<br /> <br /> 　　现在，请你帮助你的好朋友XZ设计一个程序，求得正确的答案。<br /> <br /> <b>输</b><b>入格式</b><b>   </b><br /> <br /> 　　程序的输入共有两行：<br /> 　　第一行共有2个自然数N，K（6≤N≤40，1≤K≤6）<br /> 　　第二行是一个长度为N的数字串。<br /> <br /> <br /> <b>输</b><b>出格式</b><b>   </b><br /> <br /> 　　输出所求得的最大乘积（一个自然数）。<br /> <br /> 　　<b>样</b><b>例</b>输入<br /> <br /> 　　4  2<br /> 　　1231","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />62","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 77 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T77","tags":["蓝桥杯-算法训练"],"title":"算法训练 乘积最大"},{"description":"<br /><b>问题描述</b><b>   </b><br /> <br /> 　　单词接龙是一个与我们经常玩的成语接龙相类似的游戏，现在我们已知一组单词，且给定一个开头的字母，要求出以这个字母开头的最长的“龙”（每个单词都最多在“龙”中出现两次），在两个单词相连时，其重合部分合为一部分，例如 beast和astonish，如果接成一条龙则变为beastonish，另外相邻的两部分不能存在包含关系，例如at 和 atide 间不能相连。<br /> <br /> <b>输</b><b>入格式</b><b>  </b><br /> <br /> 　　输入的第一行为一个单独的整数n (n&lt;=20)表示单词数，以下n 行每行有一个单词，输入的最后一行为一个单个字符，表示“龙”开头的字母。你可以假定以此字母开头的“龙”一定存在.<br /> <br /> <b>输</b><b>出格式</b><b>  </b><br /> <br /> 　　只需输出以此字母开头的最长的“龙”的长度<br /> <br /> <b>样</b><b>例输入</b><br /> 　　5<br /> 　　at<br /> 　　touch<br /> 　　cheat<br /> 　　choose<br /> 　　tact<br /> 　　a","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　连成的“龙”为atoucheatactactouchoose <br />输入样例: <br />23","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 78 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T78","tags":["蓝桥杯-算法训练"],"title":"算法训练 单词接龙"},{"description":"<br /><b>问题描述</b><b>   </b><br /> 　　设有N*N的方格图(N&lt;=10),我们将其中的某些方格中填入正整数,而其他的方格中则放入数字0。<br /> 　　某人从图的左上角的A 点(1,1)出发，可以向下行走，也可以向右走，直到到达右下角的B点(N,N)。在走过的路上，他可以取走方格中的数（取走后的方格中将变为数字0）。<br /> 　　此人从A点到B 点共走两次，试找出2条这样的路径，使得取得的数之和为最大。<br /> <b>输</b><b>入格式</b><br /> 　　输入的第一行为一个整数N（表示N*N的方格图），接下来的每行有三个整数，前两个表示位置，第三个数为该位置上所放的数。一行单独的0表示输入结束。<br /> <b>输</b><b>出格式</b><br /> 　　只需输出一个整数，表示2条路径上取得的最大的和。<br /> <b>样</b><b>例</b><b>输</b><b>入</b><br /> 　　8<br /> 　　2 3 13<br /> 　　2 6 6<br /> 　　3 5 7<br /> 　　4 4 14<br /> 　　5 2 21<br /> 　　5 6 4<br /> 　　6 3 15<br /> 　　7 2 14<br /> 　　0 0 0<br /> <b>样例输出</b><br /> 　　67","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 79 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T79","tags":["蓝桥杯-算法训练"],"title":"算法训练 方格取数"},{"description":"<p>一个有N个元素的集合有2^N个不同子集（包含空集），现在要在这2^N个集合中取出若干集合（至少一个），使得它们的交集的元素个数为K，求取法的方案数，答案模1000000007。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1 &lt;= K &lt;= N &lt;= 10 ^ 6。</p>","input_description":"<p>输入描述:</p><p>输入一行两个整数N，K。</p><p>输入样例:</p><p>3 2</p>","output_description":"<p>输出描述:</p><p>输出一个整数表示答案。</p><p>输出样例:</p><p>6</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 80 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T80","tags":["蓝桥杯-算法提高"],"title":"算法提高 子集选取"},{"description":"<p>考虑冒泡排序的一种实现。</p><p>bubble-sort (A[], n)</p><p>&gt; round = 0</p><p>&gt; while A is not sorted</p><p>&gt; &gt; round := round + 1</p><p>&gt; &gt; for i := 1 to n - 1</p><p>&gt; &gt; &gt; if (A[i] &gt; A[i + 1])</p><p>&gt; &gt; &gt; &gt; swap(A[i], A[i + 1])</p><p>求1 .. n的排列中，有多少个排列使得A被扫描了K遍，亦即算法结束时round == K。</p><p>答案模20100713输出。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>T &lt;= 10 ^ 5。</p><p>1 &lt;= K &lt; N &lt; 10 ^ 6。</p>","input_description":"<p>输入描述:</p><p>输入包含多组数据。每组数据为一行两个整数N，K。</p><p>输入样例:</p><p>3</p><p>3 0</p><p>3 1</p><p>3 2</p>","output_description":"<p>输出描述:</p><p>对每组数据，输出一行一个整数表示答案。</p><p>输出样例:</p><p>1</p><p>3</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 81 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T81","tags":["蓝桥杯-算法提高"],"title":"算法提高 冒泡排序计数"},{"description":"<br /><b>问题描述</b><br /> 　　给出一棵二叉树的中序与后序排列。求出它的先序排列。（约定树结点用不同的大写字母表示，长度&lt;=8）。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　两行，每行一个字符串，分别表示中序和后序排列 <br />输入样例: <br />ABCD","output_description":"<br />输出描述: <br />　　一个字符串，表示所求先序排列<br /> <br /> 　　<b>样例</b>输入<br /> 　　BADC<br /> 　　BDCA<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 82 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T82","tags":["蓝桥杯-算法训练"],"title":"算法训练 求先序排列"},{"description":"<br /><b>问题描述</b><br /> 　　有一个箱子容量为V（正整数，0＜＝V＜＝20000），同时有n个物品（0＜n＜＝30），每个物品有一个体积（正整数）。<br /> 　　要求n个物品中，任取若干个装入箱内，使箱子的剩余空间为最小。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　第一行为一个整数，表示箱子容量；<br /> 　　第二行为一个整数，表示有n个物品；<br /> 　　接下来n行，每行一个整数表示这n个物品的各自体积。 <br />输入样例: <br />0","output_description":"<br />输出描述: <br />　　一个整数，表示箱子剩余空间。<br /> 　　<b>样例</b>输入<br /> 　　24<br /> 　　6<br /> 　　8<br /> 　　3<br /> 　　12<br /> 　　7<br /> 　　9<br /> 　　7<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 83 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T83","tags":["蓝桥杯-算法训练"],"title":"算法训练 装箱问题"},{"description":"<br />　　将整数n分成k份，且每份不能为空，任意两份不能相同(不考虑顺序)。<br /> 　　例如：n=7，k=3，下面三种分法被认为是相同的。<br /> 　　1，1，5;        1，5，1; 5，1，1;<br /> 　　问有多少种不同的分法。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　6&lt;n&lt;=200，2&lt;=k&lt;=6","input_description":"输入描述:<br />　　n，k <br />输入样例: <br />7 3","output_description":"<br />输出描述: <br />　　一个整数，即不同的分法<br /> 输出样例: <br />4      {四种分法为：1，1，5;1，2，4;1，3，3;2，2，3;}","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 84 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T84","tags":["蓝桥杯-算法训练"],"title":"算法训练 数的划分"},{"description":"<br />　　有形如：ax<sup>3</sup>+bx<sup>2</sup>+cx+d=0  这样的一个一元三次方程。给出该方程中各项的系数(a，b，c，d  均为实数)，并约定该方程存在三个不同实根(根的范围在-100至100之间)，且根与根之差的绝对值&gt;=1。要求三个实根。。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　|a|，|b|，|c|，|d|&lt;=10","input_description":"输入描述:<br />　　四个实数：a，b，c，d <br />输入样例: <br />1   -5   -4   20","output_description":"<br />输出描述: <br />　　由小到大依次在同一行输出这三个实根(根与根之间留有空格)，并精确到小数点后2位<br /> 输出样例: <br />-2.00          2.00   5.00","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 85 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T85","tags":["蓝桥杯-算法训练"],"title":"算法训练 一元三次方程求解"},{"description":"<br />　　给出一个长度不超过200的由小写英文字母组成的字母串(约定;该字串以每行20个字母的方式输入，且保证每行一定为20个)。要求将此字母串分成k份 (1&lt;k&lt;=40)，且每份中包含的单词个数加起来总数最大(每份中包含的单词可以部分重叠。当选用一个单词之后，其第一个字母不能再用。例 如字符串this中可包含this和is，选用this之后就不能包含th)。<br /> 　　单词在给出的一个不超过6个单词的字典中。<br /> 　　要求输出最大的个数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　长度不超过200，1&lt;k&lt;=40，字典中的单词数不超过6。","input_description":"输入描述:<br />　　第一行有二个正整数(p，k)<br /> 　　p表示字串的行数;<br /> 　　k表示分为k个部分。<br /> 　　接下来的p行，每行均有20个字符。<br /> 　　再接下来有一个正整数s，表示字典中单词个数。(1&lt;=s&lt;=6)<br /> 　　接下来的s行，每行均有一个单词。 <br />输入样例: <br />1        3<br /> thisisabookyouareaoh<br /> 4<br /> is<br /> a<br /> ok<br /> sab","output_description":"<br />输出描述: <br />　　每行一个整数，分别对应每组测试数据的相应结果。<br /> 输出样例: <br />7","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 86 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T86","tags":["蓝桥杯-算法训练"],"title":"算法训练 统计单词个数"},{"description":"<br />　　又到暑假了，住在城市A的Car想和朋友一起去城市B旅游。她知道每个城市都有四个飞机场，分别位于一个矩形的四个顶点上，同一个城市中两个机场之间有一 条笔直的高速铁路，第I个城市中高速铁路了的单位里程价格为Ti，任意两个不同城市的机场之间均有航线，所有航线单位里程的价格均为t。<br /> 　　那么Car应如何安排到城市B的路线才能尽可能的节省花费呢?她发现这并不是一个简单的问题，于是她来向你请教。<br /> 　　找出一条从城市A到B的旅游路线，出发和到达城市中的机场可以任意选取，要求总的花费最少。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　0&lt;S&lt;=100，","input_description":"输入描述:<br />　　的第一行有四个正整数s，t，A，B。<br /> 　　S表示城市的个数，t表示飞机单位里程的价格，A，B分别为城市A，B的序号，(1&lt;=A，B&lt;=S)。<br /> 　　接下来有S行，其中第I行均有7个正整数xi1，yi1，xi2，yi2，xi3，yi3，Ti，这当中的(xi1，yi1)，(xi2，yi2)，(xi3，yi3)分别是第I个城市中任意三个机场的坐标，T        I为第I个城市高速铁路单位里程的价格。 <br />输入样例: <br />1<br /> 1 10 1 3<br /> 1 1 1 3 3 1 30<br /> 2 5 7 4 5 2        1<br /> 8 6 8 8 11 6 3","output_description":"<br />输出描述: <br />　　共有n行，每行一个数据对应测试数据，保留一位小数。<br /> 输出样例: <br />47.55","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 87 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T87","tags":["蓝桥杯-算法训练"],"title":"算法训练 Car的旅行路线"},{"description":"<br />　　形如2<sup>P</sup>-1的素数称为麦森数，这时P一定也是个素数。但反过来不一定，即如果P是个素数，2<sup>P</sup>-1不一定也是素数。到1998年底，人们已找到了37个麦森数。最大的一个是P=3021377，它有909526位。麦森数有许多重要应用，它与完全数密切相关。<br /> 　　任务：从文件中输入P（1000&lt;P&lt;3100000），计算2<sup>P</sup>-1的位数和最后500位数字（用十进制高精度数表示）","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　文件中只包含一个整数P（1000&lt;P&lt;3100000） <br />输入样例: <br />1279","output_description":"<br />输出描述: <br />　　第一行：十进制高精度数2<sup>P</sup>-1的位数。<br /> 　　第2-11行：十进制高精度数2<sup>P</sup>-1的最后500位数字。（每行输出50位，共输出10行，不足500位时高位补0）<br /> 　　不必验证2<sup>P</sup>-1与P是否为素数。<br /> 输出样例: <br />386<br /> 00000000000000000000000000000000000000000000000000<br /> 00000000000000000000000000000000000000000000000000<br /> 00000000000000104079321946643990819252403273640855<br /> 38615262247266704805319112350403608059673360298012<br /> 23944173232418484242161395428100779138356624832346<br /> 49081399066056773207629241295093892203457731833496<br /> 61583550472959420547689811211693677147548478866962<br /> 50138443826029173234888531116082853841658502825560<br /> 46662248318909188018470682222031405210266984354887<br /> 32958028878050869736186900714720710555703168729087","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 88 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T88","tags":["蓝桥杯-算法训练"],"title":"算法训练 麦森数"},{"description":"<br />　　我们可以把由“0”和“1”组成的字符串分为三类：全“0”串称为B串，全“1”串称为I串，既含“0”又含“1”的串则称为F串。<br /> 　　FBI树是一种二叉树，它的结点类型也包括F结点，B结点和I结点三种。由一个长度为2<sup>N</sup>的“01”串S可以构造出一棵FBI树T，递归的构造方法如下：<br /> 　　1)T的根结点为R，其类型与串S的类型相同；<br /> 　　2)若串S的长度大于1，将串S从中间分开，分为等长的左右子串S1和S2；由左子串S1构造R的左子树T1，由右子串S2构造R的右子树T2。<br /> 　　现在给定一个长度为2<sup>N</sup>的“01”串，请用上述构造方法构造出一棵FBI树，并输出它的后序遍历序列。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　对于40%的数据，N  &lt;= 2；<br /> 　　对于全部的数据，N  &lt;= 10。<br /> 　　注：<br /> 　　[1]   二叉树：二叉树是结点的有限集合，这个集合或为空集，或由一个根结点和两棵不相交的二叉树组成。这两棵不相交的二叉树分别称为这个根结点的左子树和右子树。<br /> 　　[2]   后序遍历：后序遍历是深度优先遍历二叉树的一种方法，它的递归定义是：先后序遍历左子树，再后序遍历右子树，最后访问根。","input_description":"输入描述:<br />　　第一行是一个整数N（0  &lt;= N &lt;= 10），第二行是一个长度为2<sup>N</sup>的“01”串。 <br />输入样例: <br />3<br /> 10001011","output_description":"<br />输出描述: <br />　　包括一行，这一行只包含一个字符串，即FBI树的后序遍历序列。<br /> 输出样例: <br />IBFBBBFIBFIIIFF","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 89 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T89","tags":["蓝桥杯-算法训练"],"title":"算法训练 FBI树"},{"description":"<br />　　人类终于登上了火星的土地并且见到了神秘的火星人。人类和火星人都无法理解对方的语言，但是我们的科学家发明了一种用数字交流的方法。这种交流方法是这样 的，首先，火星人把一个非常大的数字告诉人类科学家，科学家破解这个数字的含义后，再把一个很小的数字加到这个大数上面，把结果告诉火星人，作为人类的回 答。<br /> 　　火星人用一种非常简单的方式来表示数字——掰手指。火星人只有一只手，但这只手上有成千上万的手指，这些手指排成一列，分别编号为1，2，3……。火星人的任意两根手指都能随意交换位置，他们就是通过这方法计数的。<br /> 　　一个火星人用一个人类的手演示了如何用手指计数。如果把五根手指——拇指、食指、中指、无名指和小指分别编号为1，2，3，4和5，当它们按正常顺序排列 时，形成了5位数12345，当你交换无名指和小指的位置时，会形成5位数12354，当你把五个手指的顺序完全颠倒时，会形成54321，在所有能够形 成的120个5位数中，12345最小，它表示1；12354第二小，它表示2；54321最大，它表示120。下表展示了只有3根手指时能够形成的6个 3位数和它们代表的数字：<br /> 　　三进制数<br /> 　　123<br /> 　　132<br /> 　　213<br /> 　　231<br /> 　　312<br /> 　　321<br /> 　　代表的数字<br /> 　　1<br /> 　　2<br /> 　　3<br /> 　　4<br /> 　　5<br /> 　　6<br /> 　　现在你有幸成为了第一个和火星人交流的地球人。一个火星人会让你看他的手指，科学家会告诉你要加上去的很小的数。你的任务是，把火星人用手指表示的数与科 学家告诉你的数相加，并根据相加的结果改变火星人手指的排列顺序。输入数据保证这个结果不会超出火星人手指能表示的范围。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　对于30%的数据，N&lt;=15；<br /> 　　对于60%的数据，N&lt;=50；<br /> 　　对于全部的数据，N&lt;=10000；","input_description":"输入描述:<br />　　包括三行，第一行有一个正整数N，表示火星人手指的数目（1 &lt;= N &lt;=  10000）。第二行是一个正整数M，表示要加上去的小整数（1 &lt;= M &lt;=  100）。下一行是1到N这N个整数的一个排列，用空格隔开，表示火星人手指的排列顺序。 <br />输入样例: <br />5<br /> 3<br /> 1 2 3 4 5","output_description":"<br />输出描述: <br />　　只有一行，这一行含有N个整数，表示改变后的火星人手指的排列顺序。每两个相邻的数中间用一个空格分开，不能有多余的空格。<br /> 输出样例: <br />1 2 4 5 3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 90 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T90","tags":["蓝桥杯-算法训练"],"title":"算法训练 星际交流"},{"description":"<br />　　某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数 轴上的每个整数点，即0，1，2，……，L，都种有一棵树。<br /> 　　由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已 知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树 都移走后，马路上还有多少棵树。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　对于20%的数据，区域之间没有重合的部分；<br /> 　　对于其它的数据，区域之间有重合的情况。","input_description":"输入描述:<br />　　输入文件的第一行有两个整数L（1 &lt;= L &lt;= 10000）和 M（1 &lt;= M &lt;=  100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点 和终止点的坐标。 <br />输入样例: <br />500 3<br /> 150 300<br /> 100 200<br /> 470 471","output_description":"<br />输出描述: <br />　　输出文件包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。<br /> 输出样例: <br />298","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 91 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T91","tags":["蓝桥杯-算法训练"],"title":"算法训练 校门外的树"},{"description":"<br />　　辰辰是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。医师为了判断他的资质，给他出了一个难题。医师把他带到一个到处都是草药的山洞里对他说：“孩子，这个山洞里有一些不同的草药，采每一株都需要一些时间，每一株也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。”<br /> 　　如果你是辰辰，你能完成这个任务吗？","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　对于30%的数据，M  &lt;= 10；<br /> 　　对于全部的数据，M  &lt;= 100。","input_description":"输入描述:<br />　　第一行有两个整数T（1  &lt;= T &lt;= 1000）和M（1  &lt;= M &lt;= 100），用一个空格隔开，T代表总共能够用来采药的时间，M代表山洞里的草药的数目。接下来的M行每行包括两个在1到100之间（包括1和100）的整数，分别表示采摘某株草药的时间和这株草药的价值。 <br />输入样例: <br />70 3<br /> 71 100<br /> 69 1<br /> 1 2","output_description":"<br />输出描述: <br />　　包括一行，这一行只包含一个整数，表示在规定的时间内，可以采到的草药的最大总价值。<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 92 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T92","tags":["蓝桥杯-算法训练"],"title":"算法训练 入学考试"},{"description":"<br />　　金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间他自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎 么布置，你说了算，只要不超过N元钱就行”。今天一早金明就开始做预算，但是他想买的东西太多了，肯定会超过妈妈限定的N元。于是，他把每件物品规定了一 个重要度，分为5等：用整数1~5表示，第5等最重要。他还从因特网上查到了每件物品的价格（都是整数元）。他希望在不超过N元（可以等于N元）的前提 下，使每件物品的价格与重要度的乘积的总和最大。<br /> 　　设第j件物品的价格为v[j]，重要度为w[j]，共选中了k件物品，编号依次为 j1，j2，……，jk，则所求的总和为：<br /> 　　v[j1]*w[j1]+v[j2]*w[j2]+ …+v[jk]*w[jk]。（其中*为乘号）<br /> 　　请 你帮助金明设计一个满足要求的购物单。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入文件 的第1行，为两个正整数，用一个空格隔开：<br /> 　　N m<br /> 　　（其中N（&lt;30000）表示总钱 数，m（&lt;25）为希望购买物品的个数。）<br /> 　　从第2行到第m+1行，第j行给出了编号为j-1的物品的基本数据，每行有2个非负整数<br /> 　　v  p<br /> 　　（其中v表示该物品的价格(v&lt;=10000)，p表示该物品的重要度(1~5)） <br />输入样例: <br />1000 5<br /> 800 2<br /> 400 5<br /> 300 5<br /> 400 3<br /> 200 2","output_description":"<br />输出描述: <br />　　输出文件只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值（&lt;100000000）。<br /> 输出样例: <br />3900","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 93 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T93","tags":["蓝桥杯-算法训练"],"title":"算法训练 开心的金明"},{"description":"<br />　　Jam是个喜欢标新立异的科学怪人。他不使用阿拉伯数字计数，而是使用<b>小写英文字母</b>计数，他觉得这样做，会使世界更加丰富多彩。在他的计数法中，每个数字的位数都是相同的（使用相同个数的字母），英文字母按原先的顺序，排在前面的字母小于排在它后面的字母。我们把这样的“数字”称为Jam数字。在Jam数字中，每个字母互不相同，而且<b>从左到右是严格递增</b>的。每次，Jam还指定使用字母的<b>范围</b>，例如，从2到10，表示只能使用{b,c,d,e,f,g,h,i,j}这些字母。如果再规定位数为5，那么，紧接在Jam数字“bdfij”之后的数字应该是“bdghi”。（如果我们用U、V依次表示Jam数字“bdfij”与“bdghi”，则U&lt;V&lt;  span&gt;，且不存在Jam数字P，使U&lt;P&lt;V&lt;  span&gt;）。你的任务是：对于从文件读入的一个Jam数字，按顺序输出紧接在后面的5个Jam数字，如果后面没有那么多Jam数字，那么有几个就输出几个。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　有2行，第1行为3个正整数，用一个空格隔开：<br /> 　　s t w<br /> 　　（其中s为所使用的最小的字母的序号，t为所使用的最大的字母的序号。w为数字的位数，这3个数满足：1≤s&lt;T≤26,  2≤w≤t-s ）<br /> 　　第2行为具有w个小写字母的字符串，为一个符合要求的Jam数字。<br /> 　　所给的数据都是正确的，不必验证。 <br />输入样例: <br />2 10 5<br /> bdfij","output_description":"<br />输出描述: <br />　　最多为5行，为紧接在输入的Jam数字后面的5个Jam数字，如果后面没有那么多Jam数字，那么有几个就输出几个。每行只输出一个Jam数字，是由w个小写字母组成的字符串，不要有多余的空格。<br /> 输出样例: <br />bdghi<br /> bdghj<br /> bdgij<br /> bdhij<br /> befgh","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 94 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T94","tags":["蓝桥杯-算法训练"],"title":"算法训练 JAM计数法"},{"description":"<br />　　给定一个正整数k(3≤k≤15),把所有k的方幂及所有有限个互不相等的k的方幂之和构成一个递增的序列，例如，当k=3时，这个序列是：<br /> 　　1，3，4，9，10，12，13，…<br /> 　　（该序列实际上就是：3<sup>0</sup>，3<sup>1</sup>，3<sup>0</sup>+3<sup>1</sup>，3<sup>2</sup>，3<sup>0</sup>+3<sup>2</sup>，3<sup>1</sup>+3<sup>2</sup>，3<sup>0</sup>+3<sup>1</sup>+3<sup>2</sup>，…）<br /> 　　请你求出这个序列的第N项的值（用10进制数表示）。<br /> 　　例如，对于k=3，N=100，正确答案应该是981。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　只有1行，为2个正整数，用一个空格隔开：<br /> 　　k N<br /> 　　（k、N的含义与上述的问题描述一致，且3≤k≤15，10≤N≤1000）。 <br />输入样例: <br />3 100","output_description":"<br />输出描述: <br />　　计算结果，是一个正整数（在所有的测试数据中，结果均不超过2.1*10<sup>9</sup>）。（整数前不要有空格和其他符号）。<br /> 输出样例: <br />981","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 95 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T95","tags":["蓝桥杯-算法训练"],"title":"算法训练 数列"},{"description":"<br />　　元旦快到了，校学生会让乐乐负责新年晚会的纪念品发放工作。为使得参加晚会的同学所获得的纪念品价值 相对均衡，他要把购来的纪念品根据价格进行分组，但每组最多只能包括两件纪念品，并且每组纪念品的价格之和不能超过一个给定的整数。为了保证在尽量短的时 间内发完所有纪念品，乐乐希望分组的数目最少。<br /> 　　你的任务是写一个程序，找出所有分组方案中分组数最少的一种，输出最少的分组数目。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　50%的数据满足：1 &lt;= n &lt;= 15<br /> 　　100%的数据满足：1 &lt;= n &lt;= 30000, 80 &lt;= w &lt;= 200","input_description":"输入描述:<br />　　输入包含n+2行：<br /> 　　第1行包括一个整数w，为每组纪念品价格之和的上限。<br /> 　　第2行为一个整数n，表示购来的纪念品的总件数。<br /> 　　第3~n+2行每行包含一个正整数p<sub>i</sub> (5  &lt;= p<sub>i</sub> &lt;= w)，表示所对应纪念品的价格。 <br />输入样例: <br />100<br /> 9<br /> 90<br /> 20<br /> 20<br /> 30<br /> 50<br /> 60<br /> 70<br /> 80<br /> 90","output_description":"<br />输出描述: <br />　　输出仅一行，包含一个整数，即最少的分组数目。<br /> 输出样例: <br />6","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 96 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T96","tags":["蓝桥杯-算法训练"],"title":"算法训练 纪念品分组"},{"description":"<br />　　<b>【</b>问题描述】<br /> 　　上体育课的时候，小蛮的老师经常带着同学们一起做游戏。这次，老师带着同学们一起做传球游戏。<br /> 　　游戏规则是这样的：n个同学站成一个圆圈，其中的一个同学手里拿着一个球，当老师吹哨子时开始传球，每个同学可以把球传给自己左右的两个同学中的一个（左右任意），当老师再次吹哨子时，传球停止，此时，拿着球没传出去的那个同学就是败者，要给大家表演一个节目。<br /> 　　聪明的小蛮提出一个有趣的问题：有多少种不同的传球方法可以使得从小蛮手里开始传的球，传了m次以后，又回到小蛮手里。两种传球的方法被视作不同的方法，当且仅当这两种方法中，接到球的同学按接球顺序组成的序列是不同的。比如有3个同学1号、2号、3号，并假设小蛮为1号，球传了3次回到小蛮手里的方式有1-&gt;2-&gt;3-&gt;1和1-&gt;3-&gt;2-&gt;1，共2种。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　40%的数据满足：3&lt;=n&lt;=30，1&lt;=m&lt;=20<br /> 　　100%的数据满足：3&lt;=n&lt;=30，1&lt;=m&lt;=30","input_description":"输入描述:<br />　　共一行，有两个用空格隔开的整数n，m（3&lt;=n&lt;=30，1&lt;=m&lt;=30）。 <br />输入样例: <br />3 3","output_description":"<br />输出描述: <br />　　t共一行，有一个整数，表示符合题意的方法数。<br /> 输出样例: <br />2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 97 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T97","tags":["蓝桥杯-算法训练"],"title":"算法训练 传球游戏"},{"description":"<p>小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学安排做成一个m行n列的矩阵，而小渊和小轩被安排在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的左上角，坐标(1,1)，小轩坐在矩阵的右下角，坐标(m,n)。从小渊传到小轩的纸条只可以向下或者向右传递，从小轩传给小渊的纸条只可以向上或者向左传递。</p><p>在活动进行中，小渊希望给小轩传递一张纸条，同时希望小轩给他回复。班里每个同学都可以帮他们传递，但只会帮他们一次，也就是说如果此人在小渊递给小轩纸条的时候帮忙，那么在小轩递给小渊的时候就不会再帮忙。反之亦然。</p><p>还有一件事情需要注意，全班每个同学愿意帮忙的好感度有高有低（注意：小渊和小轩的好心程度没有定义，输入时用0表示），可以用一个0-100的自然数来表示，数越大表示越好心。小渊和小轩希望尽可能找好心程度高的同学来帮忙传纸条，即找到来回两条传递路径，使得这两条路径上同学的好心程度只和最大。现在，请你帮助小渊和小轩找到这样的两条路径。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>30%的数据满足：1&lt;=m,n&lt;=10</p><p>100%的数据满足：1&lt;=m,n&lt;=50</p>","input_description":"<p>输入描述:</p><p>输入第一行有2个用空格隔开的整数m和n，表示班里有m行n列（1&lt;=m,n&lt;=50）。</p><p>接下来的m行是一个m*n的矩阵，矩阵中第i行j列的整数表示坐在第i行j列的学生的好心程度。每行的n个整数之间用空格隔开。</p><p>输入样例:</p><p>3 3</p><p>0 3 9</p><p>2 8 5</p><p>5 7 0</p>","output_description":"<p>输出描述:</p><p>输出一行，包含一个整数，表示来回两条路上参与传递纸条的学生的好心程度之和的最大值。</p><p>输出样例:</p><p>34</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 98 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T98","tags":["蓝桥杯-算法训练"],"title":"算法训练 传纸条"},{"description":"<p>Hanks 博士是BT (Bio-Tech，生物技术) 领域的知名专家，他的儿子名叫Hankson。现 在，刚刚放学回家的Hankson 正在思考一个有趣的问题。 今天在课堂上，老师讲解了如何求两个正整数c1 和c2 的最大公约数和最小公倍数。现 在Hankson 认为自己已经熟练地掌握了这些知识，他开始思考一个“求公约数”和“求公 倍数”之类问题的“逆问题”，这个问题是这样的：已知正整数a0,a1,b0,b1，设某未知正整 数x 满足： 1． x 和a0 的最大公约数是a1； 2． x 和b0 的最小公倍数是b1。 Hankson 的“逆问题”就是求出满足条件的正整数x。但稍加思索之后，他发现这样的 x 并不唯一，甚至可能不存在。因此他转而开始考虑如何求解满足条件的x 的个数。请你帮 助他编程求解这个问题。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：64.0MB</p><p>第一组输入数据，x 可以是9、18、36、72、144、288，共有6 个。</p><p>第二组输入数据，x 可以是48、1776，共有2 个。</p>","input_description":"<p>输入描述:</p><p>输入第一行为一个正整数n，表示有n 组输入数据。</p><p>接下来的n 行每 行一组输入数据，为四个正整数a0，a1，b0，b1，每两个整数之间用一个空格隔开。输入 数据保证a0 能被a1 整除，b1 能被b0 整除。</p><p>输入样例:</p><p>2</p><p>41 1 96 288</p><p>95 1 37 1776</p>","output_description":"<p>输出描述:</p><p>输出共n 行。每组输入数据的输出结果占一行，为一个整数。</p><p>对于每组数据：若不存在这样的 x，请输出0； 若存在这样的 x，请输出满足条件的x 的个数；</p><p>输出样例:</p><p>6</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 99 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T99","tags":["蓝桥杯-算法训练"],"title":"算法训练 Hankson的趣味题"},{"description":"<p>学校里有一个水房，水房里一共装有m 个龙头可供同学们打开水，每个龙头每秒钟的 供水量相等，均为1。 现在有n 名同学准备接水，他们的初始接水顺序已经确定。将这些同学按接水顺序从1 到n 编号，i 号同学的接水量为wi。接水开始时，1 到m 号同学各占一个水龙头，并同时打 开水龙头接水。当其中某名同学j 完成其接水量要求wj 后，下一名排队等候接水的同学k 马上接替j 同学的位置开始接水。这个换人的过程是瞬间完成的，且没有任何水的浪费。即 j 同学第x 秒结束时完成接水，则k 同学第x+1 秒立刻开始接水。若当前接水人数n’不足m， 则只有n’个龙头供水，其它m−n’个龙头关闭。 现在给出n 名同学的接水量，按照上述接水规则，问所有同学都接完水需要多少秒。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：64.0MB</p><p>第1 秒，3 人接水。第1 秒结束时，1、2、3 号同学每人的已接水量为1，3 号同学接完</p><p>水，4 号同学接替3 号同学开始接水。</p><p>第2 秒，3 人接水。第2 秒结束时，1、2 号同学每人的已接水量为2，4 号同学的已接</p><p>水量为1。</p><p>第3 秒，3 人接水。第3 秒结束时，1、2 号同学每人的已接水量为3，4 号同学的已接</p><p>水量为2。4 号同学接完水，5 号同学接替4 号同学开始接水。</p><p>第4 秒，3 人接水。第4 秒结束时，1、2 号同学每人的已接水量为4，5 号同学的已接</p><p>水量为1。1、2、5 号同学接完水，即所有人完成接水。</p><p>总接水时间为4 秒。</p>","input_description":"<p>输入描述:</p><p>第1 行2 个整数n 和m，用一个空格隔开，分别表示接水人数和龙头个数。 第2 行n 个整数w1、w2、……、wn，每两个整数之间用一个空格隔开，wi 表示i 号同 学的接水量。</p><p>输入样例:</p><p>5 3</p><p>4 4 1 2 1</p>","output_description":"<p>输出描述:</p><p>输出只有一行，1 个整数，表示接水所需的总时间。</p><p>输出样例:</p><p>4</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 100 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T100","tags":["蓝桥杯-算法训练"],"title":"算法训练 接水问题"},{"description":"<p>输入A,B。</p><p>输出A+B。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>-1,000,000,000&lt;=A,B&lt;=1,000,000,000。</p>","input_description":"<p>输入描述:</p><p>输入包含两个整数A,B，用一个空格分隔。</p><p>输入样例:</p><p>5 8</p>","output_description":"<p>输出描述:</p><p>输出一个整数，表示A+B的值。</p><p>输出样例:</p><p>13</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 103 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T103","tags":["蓝桥杯-算法训练"],"title":"算法训练 A+B Problem"},{"description":"<p>采油区域　　Siruseri政府决定将石油资源丰富的Navalur省的土地拍卖给私人承包商以建立油井。被拍卖的整块土地为一个矩形区域，被划分为M×N个小块。</p><p>Siruseri地质调查局有关于Navalur土地石油储量的估测数据。这些数据表示为M×N个非负整数，即对每一小块土地石油储量的估计值。</p><p>为了避免出现垄断，政府规定每一个承包商只能承包一个由K×K块相连的土地构成的正方形区域。</p><p>AoE石油联合公司由三个承包商组成，他们想选择三块互不相交的K×K的区域使得总的收益最大。</p><p>例如，假设石油储量的估计值如下：</p><p>1 1 1 1 1 1 1 1 1<br />1 1 1 1 1 1 1 1 1<br />1 8 8 8 8 8 1 1 1<br />1 8 8 8 8 8 1 1 1<br />1 8 8 8 8 8 1 1 1<br />1 1 1 1 8 8 8 1 1<br />1 1 1 1 1 1 8 8 8<br />1 1 1 1 1 1 9 9 9<br />1 1 1 1 1 1 9 9 9<br /></p><p>如果K = 2, AoE公司可以承包的区域的石油储量总和为100, 如果K = 3, AoE公司可以承包的区域的石油储量总和为208。</p><p>AoE公司雇佣你来写一个程序，帮助计算出他们可以承包的区域的石油储量之和的最大值。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：2.0s  内存限制：512.0MB</p><p>数据保证K≤M且K≤N并且至少有三个K×K的互不相交的正方形区域。其中30%的输入数据，M, N≤ 12。所有的输入数据, M, N≤ 1500。每一小块土地的石油储量的估计值是非负整数且≤ 500。</p>","input_description":"<p>输入描述:</p><p>输入第一行包含三个整数M, N, K，其中M和N是矩形区域的行数和列数，K是每一个承包商承包的正方形的大小（边长的块数）。接下来M行，每行有N个非负整数表示这一行每一小块土地的石油储量的估计值。</p><p>输入样例:</p><p>9 9 3</p><p>1 1 1 1 1 1 1 1 1</p><p>1 1 1 1 1 1 1 1 1</p><p>1 8 8 8 8 8 1 1 1</p><p>1 8 8 8 8 8 1 1 1</p><p>1 8 8 8 8 8 1 1 1</p><p>1 1 1 1 8 8 8 1 1</p><p>1 1 1 1 1 1 8 8 8</p><p>1 1 1 1 1 1 9 9 9</p><p>1 1 1 1 1 1 9 9 9</p>","output_description":"<p>输出描述:</p><p>输出只包含一个整数，表示AoE公司可以承包的区域的石油储量之和的最大值。</p><p>输出样例:</p><p>208</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 104 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T104","tags":["蓝桥杯-算法训练"],"title":"算法训练 采油区域"},{"description":"<p>会议中心　　Siruseri政府建造了一座新的会议中心。许多公司对租借会议中心的会堂很感兴趣，他们希望能够在里面举行会议。</p><p>对于一个客户而言，仅当在开会时能够独自占用整个会堂，他才会租借会堂。会议中心的销售主管认为：最好的策略应该是将会堂租借给尽可能多的客户。显然，有可能存在不止一种满足要求的策略。</p><p>例如下面的例子。总共有4个公司。他们对租借会堂发出了请求，并提出了他们所需占用会堂的起止日期（如下表所示）。</p><p>开始日期 结束日期<br />公司1 4 9<br />公司2 9 11<br />公司3 13 19<br />公司4 10 17<br /></p><p>上例中，最多将会堂租借给两家公司。租借策略分别是租给公司1和公司3，或是公司2和公司3，也可以是公司1和公司4。注意会议中心一天最多租借给一个公司，所以公司1和公司2不能同时租借会议中心，因为他们在第九天重合了。</p><p>销售主管为了公平起见，决定按照如下的程序来确定选择何种租借策略：首先，将租借给客户数量最多的策略作为候选，将所有的公司按照他们发出请求的顺序编号。对于候选策略，将策略中的每家公司的编号按升序排列。最后，选出其中字典序最小[1]的候选策略作为最终的策略。</p><p>例中，会堂最终将被租借给公司1和公司3：3个候选策略是{(1,3),(2,3),(1,4)}。而在字典序中(1,3)&lt;(1,4)&lt;(2,3)。</p><p>你的任务是帮助销售主管确定应该将会堂租借给哪些公司。<b></b></p>","difficulty":"Mid","hint":"<p>HINT:时间限制：2.0s  内存限制：512.0MB</p><p>对于50%的输入，N≤3000。在所有输入中，N≤200000。</p>","input_description":"<p>输入描述:</p><p>输入的第一行有一个整数N，表示发出租借会堂申请的公司的个数。第2到第N+1行每行有2个整数。第i+1行的整数表示第i家公司申请租借的起始和终止日期。对于每个公司的申请，起始日期为不小于1的整数，终止日期为不大于109的整数。</p><p>输入样例:</p><p>4</p><p>4 9</p><p>9 11</p><p>13 19</p><p>10 17</p>","output_description":"<p>输出描述:</p><p>输出的第一行应有一个整数M，表示最多可以租借给多少家公司。第二行应列出M个数，表示最终将会堂租借给哪些公司。</p><p>输出样例:</p><p>2</p><p>1 3</p><p>[1] 字典序指在字典中排列的顺序，如果序列l1是序列l2的前缀，或者对于l1和l2的第一个不同位置j，l1[j]&lt;l2[j]，则l1比l2小。</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 105 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T105","tags":["蓝桥杯-算法训练"],"title":"算法训练 会议中心"},{"description":"<p>输入一个实数x，求最小的n使得，1/2+1/3+1/4+...+1/(n+1)&gt;=x。</p><p>输入的实数x保证大于等于0.01，小于等于5.20，并且恰好有两位小数。你的程序要能够处理多组数据，即不停地读入x，如果x不等于0.00，则计算答案，否则退出程序。</p><p>输出格式为对于一个x，输出一行n card(s)。其中n表示要计算的答案。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>分行输入x的具体数值</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>分行输出n的数值，格式为n card(s)</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 107 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T107","tags":["蓝桥杯-算法训练"],"title":"算法训练 调和数列问题"},{"description":"<p>如果将课本上的Hanoi塔问题稍做修改：仍然是给定N只盘子，3根柱子，但是允许每次最多移动相邻的M只盘子（当然移动盘子的数目也可以小于M）,最少需要多少次？</p><p>例如N=5，M=2时，可以分别将最小的2个盘子、中间的2个盘子以及最大的一个盘子分别看作一个整体，这样可以转变为N=3，M=1的情况，共需要移动7次。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入数据仅有一行，包括两个数N和M（0&lt;=M&lt;=N&lt;=8）</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>仅输出一个数，表示需要移动的最少次数</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 108 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T108","tags":["蓝桥杯-算法训练"],"title":"算法训练 Hanoi问题"},{"description":"<p>“两只小蜜蜂呀，飞在花丛中呀……”</p><p>话说这天天上飞舞着两只蜜蜂，它们在跳一种奇怪的舞蹈。用一个空间直角坐标系来描述这个世界，那么这两只蜜蜂初始坐标分别为(x1,y1,z1)，(x2,y2,z2)　　。在接下来它们将进行n次飞行，第i次飞行两只蜜蜂分别按照各自的速度向量飞行ti个单位时间。对于这一现象，玮玮已经观察了很久。他很想知道在蜜蜂飞舞结束时，两只蜜蜂的距离是多少。现在他就求教于你，请你写一个程序来帮他计算这个结果。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行有且仅有一个整数n，表示两只蜜蜂将进行n次飞行。</p><p>接下来有n行。</p><p>第i行有7个用空格分隔开的整数ai,bi,ci,di,ei,fi,ti　　，表示第一只蜜蜂单位时间的速度向量为(ai,bi,ci) ，第二只蜜蜂单位时间的速度向量为(di,ei,fi) ，它们飞行的时间为ti 。</p><p>最后一行有6个用空格分隔开的整数x1,y1,z1,x2,y2,z2，如题所示表示两只蜜蜂的初始坐标。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>输出仅包含一行，表示最后两只蜜蜂之间的距离。保留4位小数位。</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 109 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T109","tags":["蓝桥杯-算法训练"],"title":"算法训练 蜜蜂飞舞"},{"description":"<br />　　完成一个递归程序，倒置字符数组。并打印实现过程<br /> 　　递归逻辑为：<br /> 　　当字符长度等于1时，直接返回<br /> 　　否则，调换首尾两个字符，在递归地倒置字符数组的剩下部分","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　字符数组长度及该数组 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　在求解过程中，打印字符数组的变化情况。<br /> 　　最后空一行，在程序结尾处打印倒置后该数组的各个元素。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 112 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T112","tags":["蓝桥杯-算法提高"],"title":"算法提高 递归倒置字符数组"},{"description":"<br />　　如右图所示，这是一个空心正方体（请想象用纸糊出来的正方体），每条棱的编号如图所示<br /> 　　(图在http://166.111.138.150/fop/attach/cube.jpg)。<br /> <br /> 　　考虑剪开若干条棱，请判断正方体是否会被剪成分开（即判断正方体是否会被分割成不少于2个部分）。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　本题包括多组数据。<br /> 　　第一行输入一个N，表示数据组数。<br /> 　　对于每一组数据，都包括两行。<br /> 　　第一行输入一个n，表示总共剪开了n条棱。<br /> 　　第二行有n个数，每个数表示剪开的棱的编号。（输入保证每条棱出现次数不超过1） <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　对于每一组输入，输出一行。<br /> 　　若正方体会被分割成不少于2个部分，则输出“Yes”，否则输出“No”（均不包括引号）。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 127 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T127","tags":["蓝桥杯-算法提高"],"title":"算法提高 立方体截断问题"},{"description":"<p>给定某整数数组和某一整数b。要求删除数组中可以被b整除的所有元素，同时将该数组各元素按从小到大排序。如果数组元素数值在A到Z的ASCII之间，替换为对应字母。元素个数不超过100，b在1至100之间。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行为数组元素个数和整数b</p><p>第二行为数组各个元素</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>按照要求输出</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 128 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T128","tags":["蓝桥杯-算法训练"],"title":"算法训练 数组查找及替换"},{"description":"<br />　　Torry从小喜爱数学。一天，老师告诉他，像2、3、5、7……这样的数叫做质数。Torry突然想到一个问题，前10、100、1000、10000……个质数的乘积是多少呢？他把这个问题告诉老师。老师愣住了，一时回答不出来。于是Torry求助于会编程的你，请你算出前n个质数的乘积。不过，考虑到你才接触编程不久，Torry只要你算出这个数模上50000的值。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　仅包含一个正整数n，其中n&lt;=100000。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出一行，即前n个质数的乘积模50000的值。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 130 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T130","tags":["蓝桥杯-算法提高"],"title":"算法提高 Torry的困惑(提高型)"},{"description":"<p>求一个0～N-1的排列（即每个数只能出现一次），给出限制条件（一张N*N的表，第i行第j列的1或0，表示为j-1这个数不能出现在i-1这个数后面，并保证第i行第i列为0），将这个排列看成一个自然数，求从小到大排序第K个排列。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>所求的排列</p>","input_description":"<p>输入描述:</p><p>N&lt;=10，K&lt;=500000</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>第一行为N和K,接下来的N行，每行N个数，0表示不能，1表示能</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 131 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T131","tags":["蓝桥杯-算法训练"],"title":"算法训练 排列问题"},{"description":"<br />　　给定一个t，将t秒转化为HH:MM:SS的形式，表示HH小时MM分钟SS秒。HH,MM,SS均是两位数，如果小于10用0补到两位。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　第一行一个数T(1&lt;=T&lt;=100,000)，表示数据组数。后面每组数据读入一个数t，0&lt;=t&lt;24*60*60。 <br />输入样例: <br />2<br /> 0<br /> 86399","output_description":"<br />输出描述: <br />　　每组数据一行，HH:MM:SS。<br /> 输出样例: <br />00:00:00<br /> 23:59:59","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 132 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T132","tags":["蓝桥杯-算法提高"],"title":"算法提高 计算时间"},{"description":"<br />　　给两组数，各n个。<br /> 　　请调整每组数的排列顺序，使得两组数据相同下标元素对应相乘，然后相加的和最小。要求程序输出这个最小值。<br /> 　　例如两组数分别为:1 3　　-5和-2 4 1<br /> <br /> 　　那么对应乘积取和的最小值应为：<br /> 　　(-5) * 4 + 3 * (-2) + 1 * 1 = -25","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　第一个行一个数T表示数据组数。后面每组数据，先读入一个n，接下来两行每行n个数，每个数的绝对值小于等于1000。<br /> 　　n&lt;=1000,T&lt;=10 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　一个数表示答案。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 134 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T134","tags":["蓝桥杯-算法提高"],"title":"算法提高 最小乘积(提高型)"},{"description":"<br />　　锦瑟年华谁与度 莫问情归处 只影向斜阳 剑吼西风 欲把春留驻<br /> 　　天涯芳草无归路 回首花无数 解语自销魂 弱袂萦春 尘缘不相误<br /> 　　......<br /> 　　在卡勒沃夫充满文学杀伤力的声音中，身处紫荆2号楼202B的四位远近高低各不同的室友纷纷回忆起了各自波澜起伏的过去，并对长在百草园，邻有百花谷的现状表达了各自的见解。<br /> 　　某Q：&quot;...我小学就开窍了...她的父母说我很好，但是...今天又和北林的联系了...&quot;<br /> 　　某X：&quot;...差点就成了，结果到学校了...这个方法放假了我去对我的同桌用！...&quot;<br /> 　　某W：&quot;...&quot;（千言万语不言中，有大量的故事等待考古）<br /> 　　某Z：&quot;...为了来清华...咱们审美观不一样，不会抢...&quot;<br /> 　　......<br /> 　　卡勒沃夫在这个不朽的夜话中搜集出了某人零散的历任女友资料，为了强迫某人将他出的题目的标程交出，现在卡勒沃夫需要一个能将这些零散信息整合起来的程序。伴随着雄壮委婉动人的音乐，身为程序设计快男（超女）的你降临了！卡勒沃夫正对着您做Orz状并请求着：&quot;神牛啊~请施舍给我一段程序把~偶米头发~&quot;。。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　第一行为一个不超过5的整数T，表示数据的组数。之后每组数据的一行为一个不超过100的整数n。之后n行每行有两个用单个空格隔开的字符串（每个字符串只有英文大小写字母，长度不超过10），为两位mm的名字。每行第一个mm先于第二个mm成为某人的女友。<br /> 　　在这里我们假装诅咒某人不会同时被两个或两个以上mm泡，某个mm抛弃了某人后不会再吃回头草，同时卡勒沃夫深邃的洞察力使得他收集到了充足的信息以确定某人女友的先后顺序。<br /> 　　在小数据组中出现的人物不超过13个 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出T行，每行对应一组数据，并按照mm们从先到后成为某人女友的顺序输出她们的名字，各个名字间用一个空格隔开。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 135 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T135","tags":["蓝桥杯-算法提高"],"title":"算法提高 卡勒沃夫之弱水路三千(提高型)"},{"description":"<br />　　对于一个给定的长度为N的整数序列A，它的“子序列”的定义是：A中非空的一段连续的元素（整数）。你要完成的任务是，在所有可能的子序列中，找到一个子序列，该子序列中所有元素的和是最大的（跟其他所有子序列相比）。程序要求你输出这个最大值。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　输入文件的第一行包含一个整数N，第二行包含N个整数，表示A。<br /> 　　其中<br /> 　　1 &lt;= N &lt;= 100000<br /> 　　-10000 &lt;= A[i] &lt;=　　10000 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出仅包含一个整数，表示你算出的答案。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 137 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T137","tags":["蓝桥杯-算法提高"],"title":"算法提高 和最大子序列"},{"description":"<p>首先给出简单加法算式的定义：</p><p>如果有一个算式(i)+(i+1)+(i+2),(i&gt;=0)，在计算的过程中，没有任何一个数位出现了进位，则称其为简单的加法算式。</p><p>例如：i=3时，3+4+5=12，有一个进位，因此3+4+5不是一个简单的加法算式；又如i=112时，112+113+114=339，没有在任意数位上产生进位，故112+113+114是一个简单的加法算式。</p><p>问题：给定一个正整数n，问当i大于等于0且小于n时,有多少个算式(i)+(i+1)+(i+2)是简单加法算式。其中n&lt;10000。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>一个整数，表示n</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>一个整数,表示简单加法算式的个数</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 138 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T138","tags":["蓝桥杯-算法训练"],"title":"算法训练 简单加法(基本型)"},{"description":"<p>给定两个N×M的矩阵，计算其和。其中：</p><p>N和M大于等于1且小于等于100，矩阵元素的绝对值不超过1000。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入数据的第一行包含两个整数N、M，表示需要相加的两个矩阵的行数和列数。接下来2*N行每行包含M个数，其中前N行表示第一个矩阵，后N行表示第二个矩阵。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>你的程序需要输出一个N*M的矩阵，表示两个矩阵相加的结果。注意，输出中每行的最后不应有多余的空格，否则你的程序有可能被系统认为是Presentation　　Error</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 139 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T139","tags":["蓝桥杯-算法训练"],"title":"算法训练 矩阵加法"},{"description":"<br />　　统计输入英文文章段落中不同单词（单词有大小写之分,　　但统计时忽略大小写）各自出现的次数。 输入段落中所含单词的总数不超过100，最长单词的长度不超过20个字母.","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　一个包含若干句子的段落, 每个句子由若干英文单词组成. 除空格,　　逗号和句号外, 这些输入的句子中不含其他非字母字符, 并且, 逗号和句号紧跟在它前面的英文单词后面, 中间没有空格. 段落最后一个字符是回车符,　　表示输入结束. <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　若段落中共有M个不同的英文单词，则按照其在段落中出现的先后顺序输出M行，各行的格式为:　　单词中所有字母均用大写形式输出（最长的单词顶格输出，它前面没有多余的空格;　　其余单词与其右对齐）+冒号+N个*号+该单词在段落中的出现次数N<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 140 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T140","tags":["蓝桥杯-算法提高"],"title":"算法提高 统计单词数"},{"description":"<p>给定一个信封，有N（1≤N≤100）个位置可以贴邮票，每个位置只能贴一张邮票。我们现在有M(M&lt;=100)种不同邮资的邮票，面值为X1,X2….Xm分（Xi是整数，1≤Xi≤255），每种都有N张。</p><p>显然，信封上能贴的邮资最小值是min(X1, X2, …, Xm)，最大值是 N*max(X1, X2, …,　　Xm)。由所有贴法得到的邮资值可形成一个集合（集合中没有重复数值），要求求出这个集合中是否存在从1到某个值的连续邮资序列，输出这个序列的最大值。</p><p>例如，N=4，M=2，面值分别为4分，1分，于是形成1，2，3，4，5，6，7，8，9，10，12，13，16的序列，而从1开始的连续邮资序列为1，2，3，4，5，6，7，8，9，10，所以连续邮资序列的最大值为10分。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行：最多允许粘贴的邮票张数N；第二行：邮票种数M；第三行：空格隔开的M个数字，表示邮票的面值Xi。注意：Xi序列不一定是大小有序的！</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>从1开始的连续邮资序列的最大值MAX。若不存在从1分开始的序列（即输入的邮票中没有1分面额的邮票），则输出0.</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 141 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T141","tags":["蓝桥杯-算法训练"],"title":"算法训练 邮票"},{"description":"<br />　　计算两个实数相加的结果。<br /> 　　输入的实数满足如下要求: (1)　　小数点前的整数部分最多100位，(2) 小数点后的小数部分最多100位.","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　两行字符串，每行都是一个合法的实数。合法的意思是指:　　整数部分的值如果大于零,则最高位数字必定大于零. 如果整数部分的值为零,则整数部分只有一个零. 小数部分尾部可以有任意多的零. 可以没有小数部分,　　此时也没有小数点. 如果有小数点, 则至少需要有一位小数部分, 且允许是零. <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　相加结果。注意: 小数部分末尾如果有连续的0, 则它们都是有效数字,　　不能舍去. 如果是两个整数相加, 则结果仍为整数而没有小数部分.<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 142 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T142","tags":["蓝桥杯-算法提高"],"title":"算法提高 实数相加"},{"description":"<br />　　由 n(1≤n≤100)　　个珠子组成的一个项链，珠子有红、蓝、白三种颜色，各种颜色的珠子的安排顺序由键盘输入的字符串任意给定。蓝色用小写字母b表示,红色用小写字母r表示,　　白色用小写字母w表示.<br /> <br /> 　　假定从项链的某处将其剪断，把它摆成一条直线。先从左端向右收集同色珠子，遇到第一个异色珠子时停止.　　收集过程中, 白色是一种特殊颜色, 既可以看成红色也可以看成蓝色。然后再从剩余珠子的右端向左重复上述过程。<br /> <br /> 　　例如：对下图一所示的项链, 如果从图一中标记的位置0处剪断,　　则按顺时针顺序得到wbbbwwrrbwbrrwb（如图二所示）。这时从左端开始收集可以得到wbbbww,　　共6个珠子；然后从剩余珠子右端开始收集得到wb，共2个珠子。这种剪法共可收集到6+2=8个珠子。 如果从图一中标记的位置4处剪断,　　则按顺时针顺序得到wwrrbwbrrwbwbbb（如图二所示）。这时从左端收集可以得到wwrr,共4个珠子；然后从剩余珠子右端收集可以得到wbwbbb，共6个珠子。这种剪法共可收集到4+6=10个珠子。<br /> <br /> 　　要求: 在项链中选择合适的剪断位置, 使得从左右两端收集到的珠子数目之和最大，输出收集到的珠子数的最大值M。<br /> <img height=\"500\" src=\"\" /><br /> <img height=\"280\" src=\"\" />","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　由小写字母b,r,w组成的字符串。此字符串记录了一个首尾相接的项链从某处断开后，按顺时针顺序得到的珠子的直线排列。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　收集到的珠子数的最大值 M<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 143 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T143","tags":["蓝桥杯-算法提高"],"title":"算法提高 项链"},{"description":"<p>从键盘输入一个含有括号的四则运算表达式，要求去掉可能含有的多余的括号，结果要保持原表达式中变量和运算符的相对位置不变，且与原表达式等价,不要求化简。另外不考虑&#039;+&#039;　　&#039;-&#039;用作正负号的情况，即输入表达式不会出现(+a)或(-a)的情形。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>表达式字符串，长度不超过255,　　并且不含空格字符。表达式中的所有变量都是单个小写的英文字母, 运算符只有加+减-乘*除/等运算符号。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>去掉多余括号后的表达式</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 144 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T144","tags":["蓝桥杯-算法训练"],"title":"算法训练 删除多余括号"},{"description":"<br />　　给定N个整数组成的序列，每次交换当前第x个与第y个整数，要求输出最终的序列。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　第一行为序列的大小N(1&lt;=N&lt;=1000)和操作个数M(1&lt;=M&lt;=1000)。<br /> 　　第二行包含N个数字，表示初始序列。<br /> 　　接下来M行，每行两个整数x,y (1&lt;=x,y&lt;=N)，表示要交换的两个整数。在一次交换中，如果x和y相等，则不会改变序列的内容。 <br />输入样例: <br />5 2<br /> 1 2 3 4 5<br /> 1 2<br /> 3 4","output_description":"<br />输出描述: <br />　　输出N行，为交换后的序列中的数。<br /> 输出样例: <br />2<br /> 1<br /> 4<br /> 3<br /> 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 145 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T145","tags":["蓝桥杯-算法提高"],"title":"算法提高 交换Easy"},{"description":"<p>给定一个矩阵A,一个非负整数b和一个正整数m，求A的b次方除m的余数。</p><p>其中一个nxn的矩阵除m的余数得到的仍是一个nxn的矩阵，这个矩阵的每一个元素是原矩阵对应位置上的数除m的余数。</p><p>要计算这个问题，可以将A连乘b次，每次都对m求余，但这种方法特别慢，当b较大时无法使用。下面给出一种较快的算法(用A^b表示A的b次方)：</p><p>若b=0，则A^b%m=I%m。其中I表示单位矩阵。</p><p>若b为偶数，则A^b%m=(A^(b/2)%m)^2%m，即先把A乘b/2次方对m求余，然后再平方后对m求余。</p><p>若b为奇数，则A^b%m=(A^(b-1)%m)*a%m，即先求A乘b-1次方对m求余，然后再乘A后对m求余。</p><p>这种方法速度较快，请使用这种方法计算A^b%m，其中A是一个2x2的矩阵，m不大于10000。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入第一行包含两个整数b, m，第二行和第三行每行两个整数，为矩阵A。</p><p>输入样例:</p><p>2 2</p><p>1 1</p><p>0 1</p>","output_description":"<p>输出描述:</p><p>输出两行，每行两个整数，表示A^b%m的值。</p><p>输出样例:</p><p>1 0</p><p>0 1</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 148 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T148","tags":["蓝桥杯-算法训练"],"title":"算法训练 矩阵乘方"},{"description":"<br />　　一元n 次多项式可用如下的表达式表示：<br /> 　　f(x)=a[n]x^n+a[n-1]x^(n-1)+...+a[1]x+a[0], a[n]!=0<br /> 　　其中，a[i]x^i称为i 次项， a[i]称为i 次项的系数。给出一个一元多项式各项的次数和系数，请按照如下规定的格式要求输出该多项式：<br /> 　　1. 多项式中自变量为x，从左到右按照次数递减顺序给出多项式。<br /> 　　2. 多项式中只包含系数不为0 的项。<br /> 　　3. 如果多项式n 次项系数为正，则多项式开头不出现“+”号，如果多项式n 次项系数为负，则多项式以“-”号开头。<br /> 　　4. 对于不是最高次的项，以“+”号或者“-”号连接此项与前一项，分别表示此项系数为正或者系数为负。紧跟一个正整数，表示此项系数的绝对值（如果一个高于0 次的项，其系数的绝对值为1，则无需输出1）。如果x 的指数大于1，则接下来紧跟的指数部分的形式为“x^b”，其中b 为x 的指数；如果x 的指数为1，则接下来紧跟的指数部分形式为“x”；如果x 的指数为0，则仅需输出系数即可。<br /> 　　5. 多项式中，多项式的开头、结尾不含多余的空格。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　输入共有2 行<br /> 　　第一行1 个整数，n，表示一元多项式的次数。<br /> 　　第二行有n+1 个整数，其中第i 个整数表示第n-i+1 次项的系数，每两个整数之间用空格隔开。<br /> 　　1 ≤ n ≤ 100，多项式各次项系数的绝对值均不超过100。 <br />输入样例: <br />5<br /> 100 -1 1 -3 0 10","output_description":"<br />输出描述: <br />　　输出共1 行，按题目所述格式输出多项式。<br /> 输出样例: <br />100x^5-x^4+x^3-3x^2+10","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 152 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T152","tags":["蓝桥杯-算法提高"],"title":"算法提高 多项式输出"},{"description":"<br />　　给定一个矩阵A,一个非负整数b和一个正整数m，求A的b次方除m的余数。<br /> 　　其中一个nxn的矩阵除m的余数得到的仍是一个nxn的矩阵，这个矩阵的每一个元素是原矩阵对应位置上的数除m的余数。<br /> 　　要计算这个问题，可以将A连乘b次，每次都对m求余，但这种方法特别慢，当b较大时无法使用。下面给出一种较快的算法(用A^b表示A的b次方)：<br /> 　　若b=0，则A^b%m=I%m。其中I表示单位矩阵。<br /> 　　若b为偶数，则A^b%m=(A^(b/2)%m)^2%m，即先把A乘b/2次方对m求余，然后再平方后对m求余。<br /> 　　若b为奇数，则A^b%m=(A^(b-1)%m)*a%m，即先求A乘b-1次方对m求余，然后再乘A后对m求余。<br /> 　　这种方法速度较快，请使用这种方法计算A^b%m，其中A是一个2x2的矩阵，m不大于10000。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　输入第一行包含两个整数b, m，第二行和第三行每行两个整数，为矩阵A。 <br />输入样例: <br />2 2<br /> 1 1<br /> 0 1","output_description":"<br />输出描述: <br />　　输出两行，每行两个整数，表示A^b%m的值。<br /> 输出样例: <br />1 0<br /> 0 1","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 154 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T154","tags":["蓝桥杯-算法提高"],"title":"算法提高 矩阵乘方"},{"description":"<br /><b>[</b><b>题目描述]</b><br /> 　　在一座山上,有很多很多珠宝,它们散落在山底通往山顶的每条道路上,不同道路上的珠宝的数目也各不相同.下图为一张藏宝地图:<br /> <br /> 　　7<br /> 　　3        8<br /> 　　8   1   0<br /> 　　2   7   4   4<br /> 　　4   5   2   6   5<br /> <br /> 　　”夺宝奇兵”从山下出发,到达山顶,如何选路才能得到最多的珠宝呢?在上图所示例子中,按照5-&gt;7-&gt;8-&gt;3-&gt;7的顺序,将得到最大值30<br /> <br /> <b>[</b><b>输入]</b><br /> 　　第一行正整数N(100&gt;=N&gt;1),表示山的高度<br /> 　　接下来有N行非负整数,第i行有i个整数(1&lt;=i&lt;=N),表示山的第i层上从左到右每条路上的珠宝数目<br /> <br /> <b>[</b><b>输出]</b><br /> 　　一个整数,表示从山底到山顶的所能得到的珠宝的最大数目.<br /> <b>[</b><b>样例输入]</b><pre class=\"pddata\"> <span><font>5</font></span> </pre> <pre class=\"pddata\"> <span><font>7</font></span> </pre> <pre class=\"pddata\"> <span><font>3 8</font></span> </pre> <pre class=\"pddata\"> <span><font>8 1 0 </font></span> </pre> <pre class=\"pddata\"> <span><font>2 7 4 4</font></span> </pre> <pre class=\"pddata\"> <span><font>4 5 2 6 5</font></span> </pre> <br /> <b>[</b><b>样例输出]</b><br /> 　　30","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 155 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T155","tags":["蓝桥杯-算法提高"],"title":"算法提高 夺宝奇兵"},{"description":"<br />　　编制程序完成下述任务：接受两个数，一个为用户一年期定期存款金额，一个为按照百分比格式表示的利率；程序计算一年期满后本金与利息总额。说明：（1）存款金额以人民币元为单位，可能精确到分；（2）输入利率时不需要输入百分号，例如一年期定期存款年利率为2.52%，用户输入2.52即可；（3）按照国家法律，存款利息所得需缴纳20% 的所得税，计算结果时所得税部分应扣除。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　输入一行，包含两个实数，分别表示本金和年利率。 <br />输入样例: <br />10000  2.52","output_description":"<br />输出描述: <br />　　输出一行，包含一个实数，保留到小数点后两位，表示一年后的本金与利息和。<br /> 输出样例: <br />10201.60","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 156 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T156","tags":["蓝桥杯-算法提高"],"title":"算法提高 利息计算"},{"description":"<br />　　编制一个乘法运算的程序。<br /> 　　从键盘读入2个100以内的正整数，进行乘法运算并以竖式输出。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　3×89=267，则第四行267右侧对准个位输出。1×89=89，则第五行89右侧对准十位输出。267+890=1157，则1157右侧对准个位输出。","input_description":"输入描述:<br />　　输入只有一行，是两个用空格隔开的数字，均在1~99之间（含1和99）。 <br />输入样例: <br />89 13","output_description":"<br />输出描述: <br />　　输出为4行或7行，符合乘法的竖式运算格式。<br /> 输出样例: <br />89<br /> ×13<br /> ━━━<br /> 267<br /> 89<br /> ━━━<br /> 1157","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 157 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T157","tags":["蓝桥杯-算法提高"],"title":"算法提高 乘法运算"},{"description":"<br />　　输入三个自然数N，i，j （1&lt;=i&lt;=N，1&lt;=j&lt;=N），输出在一个N*N格的棋盘中，与格子（i，j）同行、同列、同一对角线的所有格子的位置。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　n=4，i=2，j=3表示了棋盘中的第二行第三列的格子，如下图：<br /> <table cellspacing=\"0\" cellpadding=\"2px\" style=\"border-collapse:collapse;\" class=\"table table-striped table-horver\"><tbody><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\">第1列</td><td style=\"border:solid 1.0pt\">第2列</td><td style=\"border:solid 1.0pt\">第3列</td><td style=\"border:solid 1.0pt\">第4列</td><td style=\"border:solid 1.0pt\"> </td></tr><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\">第1行</td></tr><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\">(2,3)</td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\">第2行</td></tr><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\">第3行</td></tr><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\"> </td><td style=\"border:solid 1.0pt\">第4行</td></tr></tbody></table><br /> 　　(2,1) (2,2) (2,3) (2,4) \t\t\t{同一行上格子的位置}<br /> 　　(1,3) (2,3) (3,3) (4,3)\t\t\t{同列列上格子的位置}<br /> 　　(1,2) (2,3) (3,4)\t         \t{左上到右下对角线上的格子的位置}<br /> 　　(4,1) (3,2) (2,3) (1,4)   \t\t{左下到右上对角线上的格子的位置}","input_description":"输入描述:<br />　　输入共三行，分别输入自然数N，i，j。其中保证N&lt;=24且1&lt;=i&lt;=N，1&lt;=j&lt;=N。 <br />输入样例: <br />4<br /> 2<br /> 3","output_description":"<br />输出描述: <br />　　输出共四行。第一行为与格子（i，j）同行的所有格子的位置，第二行为与格子（i，j）同列的所有格子的位置，第三行为从左上到右下对角线上的格子的位置，第四行为从左下到右上对角线上的格子的位置。<br /> 输出样例: <br />(2,1) (2,2) (2,3) (2,4)<br /> (1,3) (2,3) (3,3) (4,3)<br /> (1,2) (2,3) (3,4)<br /> (4,1) (3,2) (2,3) (1,4)","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 158 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T158","tags":["蓝桥杯-算法提高"],"title":"算法提高 格子位置"},{"description":"<p>设有有2n（n&lt;=6）个球队进行单循环比赛，计划在2n– 1天内完成，每个队每天进行一场比赛。设计一个比赛的安排，使在2n– 1天内每个队都与不同的对手比赛。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入文件matchplan.in共一行，输入n的数值。</p><p>输入样例:</p><p>2</p>","output_description":"<p>输出描述:</p><p>输出文件matchplan.out共（2 n – 1）行，第i行输出第i天的比赛安排。</p><p>格式为：&lt;i&gt; A-B，C-D，……。其中i是天数，A，B分别为比赛双方的编号，每行共2n-1个比赛场次。</p><p>输出样例:</p><p>&lt;1&gt;1-2,3-4</p><p>&lt;2&gt;1-3,2-4</p><p>&lt;3&gt;1-4,2-3</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 159 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T159","tags":["蓝桥杯-算法训练"],"title":"算法训练 比赛安排"},{"description":"<p>从键盘输入一个字符串（长度&lt;=40个字符），并以字符 ’.’ 结束。编辑功能有：</p><p>1    D：删除一个字符，命令的方式为： D  a  其中a为被删除的字符，例如：D  s  表示删除字符 ’s’ ，若字符串中有多个 ‘s’，则删除第一次出现的。</p><p>2    I：插入一个字符，命令的格式为：I  a1  a2  其中a1表示插入到指定字符前面，a2表示将要插入的字符。例如：I  s  d  表示在指定字符 ’s’ 的前面插入字符 ‘d’ ，若原串中有多个 ‘s’ ，则插入在最后一个字符的前面。</p><p>3   R：替换一个字符，命令格式为：R  a1  a2  其中a1为被替换的字符，a2为替换的字符，若在原串中有多个a1则应全部替换。</p><p>在编辑过程中，若出现被改的字符不存在时，则给出提示信息。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>命令为删去s，第一个在字符中出现的s在This中，即得到结果。</p>","input_description":"<p>输入描述:</p><p>输入共两行，第一行为原串(以’.’结束)，第二行为命令（输入方式参见“问题描述” 。</p><p>输入样例:</p><p>This is a book.</p><p>D s</p>","output_description":"<p>输出描述:</p><p>输出共一行，为修改后的字符串或输出指定字符不存在的提示信息。</p><p>输出样例:</p><p>Thi is a book.</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 160 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T160","tags":["蓝桥杯-算法训练"],"title":"算法训练 字符串编辑"},{"description":"<br />　　在同学们的帮助下，阮小二是变的越来越懒了，连算账都不愿意自己亲自动手了，每天的工作就是坐在电脑前看自己的银行账户的钱是否有变多。可是一段时间观察下来，阮小二发现自己账户的钱增长好慢啊，碰到节假日的时候连个铜板都没进，更郁闷的是这些天分文不进就算了，可恨的是银行这几天还有可能“落井下石”(代扣个人所得税)，看着自己账户的钱被负增长了，阮小二就有被割肉的感觉(太痛苦了！)，这时阮小二最大的愿望无疑是以最快的速度日进斗金，可什么方法能够日进斗金呢？抢银行(老本行)？不行，太危险，怕有命抢没命花；维持现状？受不了，搂钱太慢了！想来想去，抓破脑袋之后，终于想到了能快速发家致富的法宝----买彩票，不但挣了钱有命花，运气好的话，可以每天中他个几百万的，岂不爽哉！抱着这种想法，阮小二开始了他的买彩票之旅。想法是“好的”（太天真了OR 太蠢了），可是又发现自己的数学功底太差，因为不知道数字都有哪些组合排列？那现在就请同学们写个<b>递归</b>程序，帮助阮小二解决一下这个问题吧！","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　不超过6位数的正整数N，注意：<b>构成正整数</b><b>N</b><b>的数字可重复</b> <br />输入样例: <br />123","output_description":"<br />输出描述: <br />　　组成正整数N的所有位数的全排列，这些排列按<b>升序</b>输出，<b>每个排列占一行。</b><br /> <b>   </b><br /> <b>   注意：输出数据中不能有重复的排列</b><br /> 输出样例: <br />123<br /> 132<br /> 213<br /> 231<br /> 312<br /> 321","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 162 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T162","tags":["蓝桥杯-算法提高"],"title":"算法提高 阮小二买彩票"},{"description":"<br />　　近来，一种新的传染病肆虐全球。蓬莱国也发现了零星感染者，为防止该病在蓬莱国大范围流行，该国政府决定不惜一切代价控制传染病的蔓延。不幸的是，由于人们尚未完全认识这种传染病，难以准确判别病毒携带者，更没有研制出疫苗以保护易感人群。于是，蓬莱国的疾病控制中心决定采取切断传播途径的方法控制疾病传播。经过 WHO（世界卫生组织）以及全球各国科研部门的努力，这种新兴传染病的传播途径和控制方法已经研究消楚，剩下的任务就是由你协助蓬莱国疾控中心制定一个有效的控制办法。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　只有一行，输出总共被感染的人数。","input_description":"输入描述:<br />　　研究表明，这种传染病的传播具有两种很特殊的性质；<br /> 　　第一是它的传播途径是树型的，一个人X只可能被某个特定的人Y感染，只要Y不得病，或者是XY之间的传播途径被切断，则X就不会得病。<br /> 　　第二是，这种疾病的传播有周期性，在一个疾病传播周期之内，传染病将只会感染一代患者，而不会再传播给下一代。<br /> 　　这些性质大大减轻了蓬莱国疾病防控的压力，并且他们已经得到了国内部分易感人群的潜在传播途径图（一棵树）。但是，麻烦还没有结束。由于蓬莱国疾控中心人手不够，同时也缺乏强大的技术，以致他们在一个疾病传播周期内，只能设法切断一条传播途径，而没有被控制的传播途径就会引起更多的易感人群被感染（也就是与当前已经被感染的人有传播途径相连，且连接途径没有被切断的人群）。当不可能有健康人被感染时，疾病就中止传播。所以，蓬莱国疾控中心要制定出一个切断传播途径的顺序，以使尽量少的人被感染。你的程序要针对给定的树，找出合适的切断顺序。 <br />输入样例: <br />7 6<br /> 1 2<br /> 1 3<br /> 2 4<br /> 2 5<br /> 3 6<br /> 7 3","output_description":"<br />输出描述: <br />　　输入格式的第一行是两个整数n（1≤n≤300）和p。接下来p行，每一行有两个整数i和j，表示节点i和j间有边相连（意即，第i人和第j人之间有传播途径相连，注意：可能是i到j也可能是j到i）。其中节点1是已经被感染的患者。<br /> 　　对于给定的输入数据，如果不切断任何传播途径，则所有人都会感染。<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 163 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T163","tags":["蓝桥杯-算法提高"],"title":"算法提高 传染病控制"},{"description":"<br />　　企业发放的奖金根据利润提成。利润低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；20万到40万之间时，高于20万元的部分，可提成5%；40万元到60万元之间时高于40万元的部分，可提成3%；60万到100万之间时，高于60万元的部分，可提成1.5%；高于100万元时，超过100万元的部分按1%提成。从键盘输入当月利润，求应发放奖金总数？（保留两位小数）利润的大小在double以内","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />210000","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />18000.00","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 165 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T165","tags":["蓝桥杯-算法提高"],"title":"算法提高 企业奖金发放"},{"description":"<br />　　将一个正整数N(1&lt;N&lt;32768)分解质因数。例如，输入90，打印出90=2*3*3*5。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />66","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />66=2*3*11","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 166 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T166","tags":["蓝桥杯-算法提高"],"title":"算法提高 质因数"},{"description":"<p>求出5个字符串中最长的字符串。每个字符串长度在100以内，且全为小写字母。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>one two three four five</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>three</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 169 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T169","tags":["蓝桥杯-算法训练"],"title":"算法训练 最长字符串"},{"description":"<br />　　输入一元一次方法的ax+b=0的解。且数据均在double类型以内,且一定有解（保留2位小数）","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />2  6","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />-3.00","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 172 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T172","tags":["蓝桥杯-算法提高"],"title":"算法提高 一元一次方程"},{"description":"<br />　　输入一个3行4列的数组，找出该数组中绝对值最大的元素、输出该元素及其两个下标值。如有多个输出行号最小的，还有多个的话输出列号最小的。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />1 2  3  5<br /> -2  5  8  9<br /> 6  -7  5  3","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />9 2 4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 175 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T175","tags":["蓝桥杯-算法提高"],"title":"算法提高 数组输出"},{"description":"<br />　　输入一个整数，输出其所有质因子。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　1&lt;=n&lt;=10000。","input_description":"输入描述:<br />　　输入只有一行，包含一个整数n。 <br />输入样例: <br />6","output_description":"<br />输出描述: <br />　　输出一行，包含若干个整数，为n的所有质因子，按照从小到大的顺序排列。<br /> 输出样例: <br />2 3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 176 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T176","tags":["蓝桥杯-算法提高"],"title":"算法提高 计算整数因子"},{"description":"<br />　　编写一个函数，输入一行字符，将此字符串中最长的单词输出。<br /> 　　输入仅一行，多个单词，每个单词间用一个空格隔开。单词仅由小写字母组成。所有单词的长度和不超过100000。如有多个最长单词，输出最先出现的。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />I am a student","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />student","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 181 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T181","tags":["蓝桥杯-算法提高"],"title":"算法提高 最长单词"},{"description":"<br />　　输入n分钟换算成天、小时和分输出。例如4880分钟，可换算成3天9小时20分。<br /> 　　输入一个正整数n(1","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />4880","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />3  9  20","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 183 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T183","tags":["蓝桥杯-算法提高"],"title":"算法提高 时间转换"},{"description":"<br />　　将1，2，…，9共9个数分成三组，分别组成三个三位数，且使这三个三位数构成<br /> 　　1：2：3的比例，试求出所有满足条件的三个三位数。<br /> 　　例如：三个三位数192，384，576满足以上条件。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　无输入文件 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出每行有三个数，为满足题设三位数。各行为满足要求的不同解。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 189 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T189","tags":["蓝桥杯-算法提高"],"title":"算法提高 寻找三位数"},{"description":"<br />　　编写一程序，在屏幕上输出如下内容：<br /> 　　X | X | X<br /> 　　---+---+---<br /> 　　|   |<br /> 　　---+---+---<br /> 　　O | O | O<br /> 　　注意：本题请同学们严格按照图形的格式输出，对齐，其中X和O为大写，否则系统会判为错误。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 190 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T190","tags":["蓝桥杯-算法提高"],"title":"算法提高 图形输出"},{"description":"<br />　　编制程序完成下述任务：接受两个数，一个为用户一年期定期存款金额，一个为按照百分比格式表示的利率；程序计算一年期满<br /> 　　后本金与利息总额。说明：（1）存款金额以人民币元为单位，可能精确到分；（2）输入利率时不需要输入百分号，例如一年期定期存款年利率<br /> 　　为2.52%，用户输入2.52即可；（3）按照国家法律，存款利息所得需缴纳20% 的所得税，计算结果时所得税部分应扣除。要求输出小数点后严格<br /> 　　保留两位小数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />10000   2.52","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />10201.60","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 193 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T193","tags":["蓝桥杯-算法提高"],"title":"算法提高 利息计算"},{"description":"<br />　　注意：表头的大小写要和样例一致，短线“-”个数要与样例中一致，否则系统会判为错误。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 195 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T195","tags":["蓝桥杯-算法提高"],"title":"算法提高 输出九九乘法表"},{"description":"<br />","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br /><pre class=\"pddata\"> 已知2007年1月1日为星期一。 设计一函数按照下述格式打印2007年以后（含）某年某月的日历，2007年以前的拒绝打印。 为完成此函数，设计必要的辅助函数可能也是必要的。其中输入为年分和月份。 </pre>","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 199 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T199","tags":["蓝桥杯-算法提高"],"title":"算法提高 任意年月日历输出"},{"description":"<br />","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br /><pre class=\"pddata\"> 独立实现标准字符串库的strcmp函数，即字符串比较函数，从键盘输入两个字符串，按字典序比较大小，前者大于后者输出1，前者小于后者输出-1，两者相等输出0。 </pre>","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 204 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T204","tags":["蓝桥杯-算法提高"],"title":"算法提高 字符串比较"},{"description":"<br />","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br /><pre class=\"pddata\"> 从键盘读入n个复数（实部和虚部都为整数）用链表存储，遍历链表求出n个复数的和并输出。 样例输入: <br />3 <br />3 4<br />5 2<br />1 3<br />样例输出:<br />9+9i </pre>","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 206 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T206","tags":["蓝桥杯-算法提高"],"title":"算法提高 复数求和"},{"description":"<br />　　编写一个程序，输入两个整数，作为栅格的高度和宽度，然后用“+”、“-”和“|”这三个字符来打印一个栅格。<br /> 　　输入格式：输入只有一行，包括两个整数，分别为栅格的高度和宽度。<br /> 　　输出格式：输出相应的栅格。<br /> 　　输入输出样例","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />3 2","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />+-+-+<br /> | | |<br /> +-+-+<br /> | | |<br /> +-+-+<br /> | | |<br /> +-+-+","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 210 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T210","tags":["蓝桥杯-算法提高"],"title":"算法提高 栅格打印问题"},{"description":"<br />　　公安人员审问甲、乙、丙、丁四个嫌疑犯，已确知，这四个人当中仅有一人是偷窃者，还知道这四个人的答话，要么完全诚实，要么完全说谎。在回答公安人员的问话中：<br /> 　　甲说：“乙没有偷，是丁偷的。”<br /> 　　乙说：“我没有偷，是丙偷的。”<br /> 　　丙说：“甲没有偷，是乙偷的。”<br /> 　　丁说：“我没有偷，我用的那东西是我家里的。”<br /> 　　请根据上述四人答话，判断谁是偷窃者。<br /> 　　输入格式：无输入。<br /> 　　输出格式：输出一个字符，表示偷窃者是谁，A表示甲，B表示乙，C表示丙，D表示丁。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 212 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T212","tags":["蓝桥杯-算法提高"],"title":"算法提高 断案"},{"description":"<br />　　编写一个程序，输入一个字符串（长度不超过80），然后统计出该字符串当中包含有多少个单词。例如：字符串“this is a book”当中包含有4个单词。<br /> 　　输入格式：输入一个字符串，由若干个单词组成，单词之间用一个空格隔开。<br /> 　　输出格式：输出一个整数，即单词的个数。<br /> 　　输入输出样例<br /> 　　用户输入数据样例：<br /> 　　this is a book<br /> 　　系统输出数据如下：<br /> 　　4","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 214 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T214","tags":["蓝桥杯-算法提高"],"title":"算法提高 单词个数统计"},{"description":"<p>编写一个程序，输入一个二进制的字符串（长度不超过32），然后计算出相应的十进制整数，并把它打印出来。</p><p>输入格式：输入为一个字符串，每个字符都是’0’或’1’，字符串的长度不超过32。</p><p>输出格式：输出一个整数。</p><p>输入输出样例</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>1101</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>13</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 217 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T217","tags":["蓝桥杯-算法训练"],"title":"算法训练 进制转换"},{"description":"<p>输入两个矩阵，分别是m*s，s*n大小。输出两个矩阵相乘的结果。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>第一行，空格隔开的三个正整数m,s,n（均不超过200）。</p><p>接下来m行，每行s个空格隔开的整数，表示矩阵A（i，j）。</p><p>接下来s行，每行n个空格隔开的整数，表示矩阵B（i，j）。</p><p>输入样例:</p><p>2 3 2</p><p>1 0 -1</p><p>1 1 -3</p><p>0 3</p><p>1 2</p><p>3 1</p>","output_description":"<p>输出描述:</p><p>m行，每行n个空格隔开的整数，输出相乘後的矩阵C（i，j）的值。</p><p>输出样例:</p><p>-3 2</p><p>-8 2</p><p><b>提示</b></p><p>矩阵C应该是m行n列，其中C(i,j)等于矩阵A第i行行向量与矩阵B第j列列向量的内积。</p><p>例如样例中C(1,1)=(1,0,-1)*(0,1,3) = 1 * 0 +0*1+(-1)*3=-3</p><p><b></b></p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 218 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T218","tags":["蓝桥杯-算法训练"],"title":"算法训练 矩阵乘法"},{"description":"<p>给定一个长度为n的字符串S，还有一个数字L，统计长度大于等于L的出现次数最多的子串（不同的出现可以相交），如果有多个，输出最长的，如果仍然有多个，输出第一次出现最早的。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>n&lt;=60</p><p>S中所有字符都是小写英文字母。</p>","input_description":"<p>输入描述:</p><p>第一行一个数字L。</p><p>第二行是字符串S。</p><p>L大于0，且不超过S的长度。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>一行，题目要求的字符串。</p><p>输入样例1：</p><p>4</p><p>bbaabbaaaaa</p><p>输出样例1：</p><p>bbaa</p><p>输入样例2：</p><p>2</p><p>bbaabbaaaaa</p><p>输出样例2：</p><p>aa</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 219 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T219","tags":["蓝桥杯-算法训练"],"title":"算法训练 字串统计"},{"description":"<p>给定一个长度为n的字符串S，还有一个数字L，统计长度大于等于L的出现次数最多的子串（不同的出现可以相交），如果有多个，输出最长的，如果仍然有多个，输出第一次出现最早的。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p><p>n&lt;=60</p><p>S中所有字符都是小写英文字母。</p>","input_description":"<p>输入描述:</p><p>第一行一个数字L。</p><p>第二行是字符串S。</p><p>L大于0，且不超过S的长度。</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>一行，题目要求的字符串。</p><p>输入样例1：</p><p>4</p><p>bbaabbaaaaa</p><p>输出样例1：</p><p>bbaa</p><p>输入样例2：</p><p>2</p><p>bbaabbaaaaa</p><p>输出样例2：</p><p>aa</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 220 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T220","tags":["蓝桥杯-算法训练"],"title":"算法训练 字串统计"},{"description":"<p><b></b></p><p><b>问题描述</b></p><p>编写一个程序，先输入一个字符串str（长度不超过20），再输入单独的一个字符ch，然后程序会把字符串str当中出现的所有的ch字符都删掉，从而得到一个新的字符串str2，然后把这个字符串打印出来。</p><p>输入格式：输入有两行，第一行是一个字符串（内部没有空格），第二行是一个字符。</p><p>输出格式：经过处理以后的字符串。</p><p><b>输入输出样例</b></p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>123-45-678</p><p>-</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>12345678</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 221 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T221","tags":["蓝桥杯-算法训练"],"title":"算法训练 字符删除"},{"description":"<br />　　N个人要打水，有M个水龙头，第i个人打水所需时间为Ti，请安排一个合理的方案使得所有人的等待时间之和尽量小。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　一种最佳打水方案是，将N个人按照Ti从小到大的顺序依次分配到M个龙头打水。<br /> 　　例如样例中，Ti从小到大排序为1，2，3，4，5，6，7，将他们依次分配到3个龙头，则去龙头一打水的为1，4，7；去龙头二打水的为2,5；去第三个龙头打水的为3,6。<br /> 　　第一个龙头打水的人总等待时间 = 0 + 1 + (1 + 4) = 6<br /> 　　第二个龙头打水的人总等待时间 = 0 + 2 = 2<br /> 　　第三个龙头打水的人总等待时间 = 0 + 3 = 3<br /> 　　所以总的等待时间 = 6 + 2 + 3 = 11","input_description":"输入描述:<br />　　第一行两个正整数N M 接下来一行N个正整数Ti。<br /> 　　N,M&lt;=1000，Ti&lt;=1000 <br />输入样例: <br />7 3<br /> 3 6 1 4 2 5 7","output_description":"<br />输出描述: <br />　　最小的等待时间之和。（不需要输出具体的安排方案）<br /> 输出样例: <br />11","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 224 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T224","tags":["蓝桥杯-算法提高"],"title":"算法提高 打水问题"},{"description":"<p>一个整数的“反置数”指的是把该整数的每一位数字的顺序颠倒过来所得到的另一个整数。如果一个整数的末尾是以0结尾，那么在它的反置数当中，这些0就被省略掉了。比如说，1245的反置数是5421，而1200的反置数是21。请编写一个程序，输入两个整数，然后计算这两个整数的反置数之和sum，然后再把sum的反置数打印出来。要求：由于在本题中需要多次去计算一个整数的反置数，因此必须把这部分代码抽象为一个函数的形式。</p><p>输入格式：输入只有一行，包括两个整数，中间用空格隔开。</p><p>输出格式：输出只有一行，即相应的结果。</p><p>输入输出样例</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>435 754</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>199</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 226 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T226","tags":["蓝桥杯-算法训练"],"title":"算法训练 反置数"},{"description":"<p><b>问题描述</b></p><p>新生舞会开始了。n名新生每人有三个属性：姓名、学号、性别。其中，姓名用长度不超过20的仅由大小写字母构成的字符串表示，学号用长度不超过10的仅由数字构成的字符串表示，性别用一个大写字符‘F’或‘M’表示。任意两人的姓名、学号均互不相同。换言之，每个人可被其姓名或学号唯一确定。给出m对两人的信息（姓名或学号），判断他们是否能共舞。两人能共舞的充要条件为两人性别相异。</p><p><b>输入</b></p><p>第一行一个整数n（2&lt;=n&lt;=1000），表示学生人数。接下来的n行每行依次包含一名新生的姓名、学号、性别，分别用一个空格隔开。</p><p>之后的一行是一个整数m(1&lt;=m&lt;=1000)，表示询问的数目。接着的m行每行包含两个信息（姓名或学号），保证两个信息不属于同一人，中间用一个空格隔开。</p><p><b>输出</b></p><p>对于每个询问输出一行，如果两人可以共舞，输出一个大写字母‘Y’，否则输出一个大写字母‘N’。</p><p><b>样例输入</b></p><p>4</p><p>John 10 M</p><p>Jack 11 M</p><p>Kate 20 F</p><p>Jim 21 M</p><p>3</p><p>John 11</p><p>20 Jack</p><p>Jim Jack</p><p><b>样例输出</b></p><p>N</p><p>Y</p><p>N</p><p><b>提示</b></p><p>可以把名字和学号都当成字符串处理。可以按以下流程实现。</p><p>#include&lt;iostream&gt;</p><p>#include&lt;cstring&gt;</p><p>using namespace std;</p><p>struct tstudent</p><p>{</p><p>char name[21];</p><p>char num[21];</p><p>char sex;</p><p>};</p><p>void readdata(tstudent student[], int n)</p><p>{</p><p><b>输入N个学生的信息</b></p><p>}</p><p>int findstudent(tstudent student[], int n, char* data)</p><p>{</p><p>if (data == NULL) return -1;</p><p><b>判断是否有某个学生的学号或名字等于data，如果有，函数返回该学生在student数组中的序号，否则返回-1</b></p><p>}</p><p>void solve(tstudent student[], int n, int m)</p><p>{</p><p>char x[21], y[21];</p><p>for (int i=0; i&lt;m; i++) {</p><p><b>输入两个人的信息X、Y。通过调用findstudent函数判断这两个人能否成为舞伴</b></p><p>}</p><p>}</p><p>int main()</p><p>{</p><p>int n, m;</p><p>tstudent student[1010];</p><p>cin&gt;&gt;n;</p><p>readdata(student, n);</p><p>cin&gt;&gt;m;</p><p>solve(student, n, m);</p><p>}</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 227 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T227","tags":["蓝桥杯-算法训练"],"title":"算法训练 新生舞会"},{"description":"<br /><b> </b><br /> <b>问题描述</b><br /> 　　编写一个程序，输入一个句子，然后统计出这个句子当中不同的单词个数。例如：对于句子“one little two little three little boys”，总共有5个不同的单词：one, little, two, three, boys。<br /> 　　说明：（1）由于句子当中包含有空格，所以应该用gets函数来输入这个句子；（2）输入的句子当中只包含英文字符和空格，单词之间用一个空格隔开；（3）不用考虑单词的大小写，假设输入的都是小写字符；（4）句子长度不超过100个字符。<br /> 　　输入格式：输入只有一行，即一个英文句子。<br /> 　　输出格式：输出只有一行，是一个整数，表示句子中不同单词的个数。<br /> <b>输入输出样例</b>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />one little two little three little boys","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />5<br /> <b> </b>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 228 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T228","tags":["蓝桥杯-算法提高"],"title":"算法提高 不同单词个数统计"},{"description":"<br />　　2016.4.5 已更新试题，请重新提交自己的程序。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　将输出信息输出到指定的文件中:<br /> 　　一行一个整数表示phi(n)。","input_description":"输入描述:<br />　　给定一个大于1，不超过2000000的正整数n，输出欧拉函数，phi(n)的值。<br /> 　　如果你并不了解欧拉函数，那么请参阅提示。 <br />输入样例: <br />17","output_description":"<br />输出描述: <br />　　在给定的输入文件中进行读入：<br /> 　　一行一个正整数n。<br /> 输出样例: <br />16","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 229 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T229","tags":["蓝桥杯-算法提高"],"title":"算法提高 欧拉函数"},{"description":"<br />　　2016.4.5已更新此题，此前的程序需要重新提交。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />　　第一行为5个正整数，分别表示A,B,C,D,E五个等级段的人数<br /> 　　第二行一个正整数，表示人数最多的等级段中人数<br /> 　　接下来一行若干个用空格隔开的正整数，表示人数最多的那个等级中所有人的分数，按从大到小的顺序输出。","input_description":"输入描述:<br />　　给定一个百分制成绩T，将其划分为如下五个等级之一：<br /> 　　90~100为A，80~89为B，70~79为C，60~69为D，0~59为E<br /> 　　现在给定一个文件inp，文件中包含若干百分制成绩（成绩个数不超过100），请你统计五个等级段的人数，并找出人数最多的那个等级段，按照从大到小的顺序输出该段中所有人成绩（保证人数最多的等级只有一个）。要求输出到指定文件oup中。 <br />输入样例: <br />100 80 85 77 55 61 82 90 71 60","output_description":"<br />输出描述: <br />　　若干0~100的正整数，用空格隔开<br /> 输出样例: <br />2 3 2 2 1<br /> 3<br /> 85 82 80","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 231 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T231","tags":["蓝桥杯-算法提高"],"title":"算法提高 分数统计"},{"description":"<br />　　求解方程ax<sup>2</sup>+bx+c=0的根。要求a, b, c由用户输入，并且可以为任意实数。<br /> 　　输入格式：输入只有一行，包括三个系数，之间用空格格开。<br /> 　　输出格式：输出只有一行，包括两个根，大根在前，小根在后，无需考虑特殊情况，保留小数点后两位。<br /> 　　输入输出样例","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />2.5 7.5 1.0","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />-0.14 -2.86","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 234 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T234","tags":["蓝桥杯-算法提高"],"title":"算法提高 Quadratic Equation"},{"description":"<br />　　使用Switch语句编写一个模拟简单计算器的程序。依次输入两个整数和一个字符，并用空格隔开。如果该字符是一个“+”，则打印和；如果该字符是一个“-”，则打印差；如果该字符是一个“*”,则打印积；如果该字符是“/”，则打印商；如果该字符是一个“%”，则打印余数。打印结果后输出一个空行。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 238 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T238","tags":["蓝桥杯-算法提高"],"title":"算法提高 c++_ch02_02"},{"description":"<br />　　编写程序实现“剪刀，石头，布”游戏。在这个游戏中，两个人同时说“剪刀”，“石头”或“布”，压过另一方的为胜者。规则是：“布”胜过“石头”，“石头”胜过“剪刀”，“剪刀”胜过“布”。要求：选择结构中使用枚举类型，结果的输出也使用枚举类型表示。<br /> 　　输入：两个数，范围为{0,1,2}，用空格隔开。0表示石头，1表示布，2表示剪刀。这两个数分别表示两个人所说的物品。<br /> 　　输出：如果前者赢，输出1。如果后者赢，输出-1。如果是平局，输出0。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 239 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T239","tags":["蓝桥杯-算法提高"],"title":"算法提高 c++_ch02_03"},{"description":"<br />　　PASCAL三角是形状如下的三角矩阵：<br /> 　　1<br /> 　　1 1<br /> 　　1 2 1<br /> 　　1 3 3 1<br /> 　　1 4 6 4 1<br /> 　　在PASCAL三角中的每个数是一个组合C(n,k)。<br /> 　　C(n,k)=(((((((n/1)(n-1))/2(n-2))/3)***(n-k+2))/(k-1))(n-k+1))/k<br /> 　　公式中交替使用乘法和除法，每次将从n开始递减的一个值相乘，然后除以下一个从1开始递增的值。<br /> 　　如果对行和列从0开始计数，则数字C(n,k)在n行k列。例如C(6,2)在第6行第2列。编程输出指定阶数的PASCAL三角矩阵。例如下面给出的是12阶PASCAL三角形矩阵。<br /> <br /> 　　编写程序，使运行结果为：<br /> 　　1<br /> 　　1   1<br /> 　　1   2   1<br /> 　　1   3   3   1<br /> 　　1   4   6   4   1<br /> 　　1   5  10  10   5   1<br /> 　　1   6  15  20  15   6   1<br /> 　　1   7  21  35  35  21   7   1<br /> 　　1   8  28  56  70  56  28   8   1<br /> 　　1   9  36  84 126 126  84  36   9   1<br /> 　　1  10  45 120 210 252 210 120  45  10   1<br /> 　　1  11  55 165 330 462 462 330 165  55  11   1<br /> 　　1  12  66 220 495 792 924 792 495 220  66  12   1<br /> <br /> <br /> 　　该题的详细文档及程序框架请从网络学堂下载！","difficulty":"Mid","hint":"HINT:时间限制：3.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 240 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T240","tags":["蓝桥杯-算法提高"],"title":"算法提高 c++_ch03_02"},{"description":"<br />　　编写并测试如下函数：<br /> 　　void Add (int a[], int m, int b[], int n);<br /> 　　该函数将数组b的前n个元素追加到数组a的前m个元素后，假定数组a具有至少存放m+n个元素的空间。例如，如果数组a为{22,33,44,55,66,77,88,99}，数组b为{20,30,40,50,60,70,80,90}，则调用Add(a,5,b,3)后，将把数组a变为{22,33,44,55,66,20,30,40}。注意数组b并没有改变，而且数组a中只需改变n个元素。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br />　　输入：4行。第一行为两个整数：m，n，并以空格隔开，分别表示将要输入的数组a和数组b的元素的个数。第二行为m个整数，为数组a的元素；第三行为n个整数，为数组b的元素。第四行为两个整数m1，n1，表示把数组b的前n1个元素追加到数组a的前m1个元素后。<br /> 　　输出：1行。第一行为最后数组a中的元素，两个元素之间以逗号隔开。最后一个元素输出后，输出一个空行。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　#include &lt;cassert&gt;<br /> 　　#include &lt;iostream&gt;<br /> 　　using namespace std;<br /> <br /> 　　void Disp(int a[], int n)<br /> 　　{<br /> 　　for (int i=0; i&lt;n-1; i++)<br /> 　　cout &lt;&lt; a[i] &lt;&lt; &quot;, &quot;;<br /> 　　cout &lt;&lt; a[n-1] &lt;&lt; endl;<br /> 　　}<br /> <br /> 　　void Add(int a[], int m, int b[], int n)<br /> 　　{<br /> 　　//...请补充完整<br /> 　　}<br /> <br /> 　　int main()<br /> 　　{<br /> 　　int* a = NULL;<br /> 　　int* b = NULL;<br /> 　　int i = 0;<br /> 　　int m, n;<br /> 　　cin &gt;&gt; m &gt;&gt; n;<br /> 　　a = new int[m + n];<br /> 　　b = new int[n];<br /> 　　for(i = 0; i &lt; m; i++)<br /> 　　cin &gt;&gt; a[i];<br /> 　　for(i = 0; i &lt; n; i++)<br /> 　　cin &gt;&gt; b[i];<br /> <br /> 　　int m1, n1;<br /> 　　cin &gt;&gt; m1 &gt;&gt; n1;<br /> <br /> 　　//   请补充完整<br /> <br /> <br /> 　　return 0;<br /> 　　}<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 241 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T241","tags":["蓝桥杯-算法提高"],"title":"算法提高 c++_ch06_02"},{"description":"<br />　　程序提示用户输入三个字符，每个字符取值范围是0-9，A-F。然后程序会把这三个字符转化为相应的十六进制整数，并分别以十六进制，十进制，八进制输出。<br /> 　　输入格式：输入只有一行，即三个字符。<br /> 　　输出格式：输出只有一行，包括三个整数，中间用空格隔开。<br /> 　　输入输出样例","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />FFF","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />FFF 4095 7777","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 242 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T242","tags":["蓝桥杯-算法提高"],"title":"算法提高 进制转换"},{"description":"<p>编写一个程序，输入一个1000 以内的正整数，然后把这个整数的每一位数字都分离出来，并逐一地显示。</p><p>输入格式：输入只有一行，即一个1000以内的正整数。</p><p>输出格式：输出只有一行，即该整数的每一位数字，之间用空格隔开。</p><p>输入输出样例</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>769</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>7 6 9</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 244 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T244","tags":["蓝桥杯-算法训练"],"title":"算法训练 数位分离"},{"description":"<br />　　编写一个程序，计算员工的周薪。薪水的计算是以小时为单位，如果在一周的时间内，员工工作的时间不超过40 个小时，那么他/她的总收入等于工作时间乘以每小时的薪水。如果员工工作的时间在40 到50 个小时之间，那么对于前40 个小时，仍按常规方法计算；而对于剩余的超额部分，每小时的薪水按1.5 倍计算。如果员工工作的时间超过了50 个小时，那么对于前40 个小时，仍按常规方法计算；对于40～50 个小时之间的部分，每小时的薪水按1.5 倍计算；而对于超出50 个小时的部分，每小时的薪水按2 倍计算。请编写一个程序，输入员工的工作时间和每小时的薪水，然后计算并显示他/她应该得到的周薪。<br /> 　　输入格式：输入只有一行，包括一个整数和一个实数，分别表示工作时间和每小时薪水。<br /> 　　输出格式：输出只有一个实数，表示周薪，保留小数点后2位。<br /> 　　输入输出样例","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />40 50","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />2000.00","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 245 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T245","tags":["蓝桥杯-算法训练"],"title":"算法训练 薪水计算"},{"description":"<br />　　编写一个程序，输入三个正整数min、max和factor，然后对于min到max之间的每一个整数（包括min和max），如果它能被factor整除，就把它打印出来。<br /> 　　输入格式：输入只有一行，包括三个整数min、max和factor。<br /> 　　输出格式：输出只有一行，包括若干个整数。<br /> 　　输入输出样例","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />1 10 3","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />3 6 9","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 246 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T246","tags":["蓝桥杯-算法训练"],"title":"算法训练 整除问题"},{"description":"<br /><b></b><br /> <br /> <b>问题描述</b><br /> 　　编写一个程序，该程序从用户读入一个整数，然后列出所有的数对，每个数对的乘积即为该数。<br /> 　　输入格式：输入只有一行，即一个整数。<br /> 　　输出格式：输出有若干行，每一行是一个乘法式子。（注意：运算符号与数字之间有一个空格）<br /> <b>输入输出样例</b>","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />32","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />1 * 32 = 32<br /> 2 * 16 = 32<br /> 4 * 8 = 32<br /> 8 * 4 = 32<br /> 16 * 2 = 32<br /> 32 * 1 = 32","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 248 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T248","tags":["蓝桥杯-算法训练"],"title":"算法训练 数对"},{"description":"<br />　　一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如，6的因子为1、2、3，而6＝1＋2＋3，因此6就是“完数”。又如，28的因子为1、2、4、7、14，而28＝1＋2＋4＋7＋14，因此28也是“完数”。编写一个程序，判断用户输入的一个数是否为“完数”。<br /> 　　输入格式：输入只有一行，即一个整数。<br /> 　　输出格式：输出只有一行，如果该数为完数，输出yes，否则输出no。<br /> 　　输入输出样例","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />6","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />yes","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 249 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T249","tags":["蓝桥杯-算法训练"],"title":"算法训练 完数"},{"description":"<br />　　编写函数GetReal和GetString，在main函数中分别调用这两个函数。在读入一个实数和一个字符串后，将读入的结果依次用printf输出。<br /> 　　两次输入前要输出的提示信息分别是&quot;please input a number:\\n”和&quot;please input a string:\\n&quot;","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />9.56<br /> hello","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />please input a number:<br /> please input a string:<br /> 9.56<br /> hello","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 250 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T250","tags":["蓝桥杯-算法提高"],"title":"算法提高 3-2字符串输入输出函数"},{"description":"<p><b></b></p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>计算一个整数的阿尔法乘积。对于一个整数x来说，它的阿尔法乘积是这样来计算的：如果x是一个个位数，那么它的阿尔法乘积就是它本身；否则的话，x的阿尔法乘积就等于它的各位非0的数字相乘所得到的那个整数的阿尔法乘积。例如：4018224312的阿尔法乘积等于8，它是按照以下的步骤来计算的：</p><p>4018224312 → 4*1*8*2*2*4*3*1*2 → 3072 → 3*7*2 → 42 → 4*2 → 8</p><p>编写一个程序，输入一个正整数（该整数不会超过6,000,000），输出它的阿尔法乘积。</p><p>输入格式：输入只有一行，即一个正整数。</p><p>输出格式：输出相应的阿尔法乘积。</p><p>输入输出样例</p><p>输入样例:</p><p>4018224312</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>8</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 251 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T251","tags":["蓝桥杯-算法训练"],"title":"算法训练 阿尔法乘积"},{"description":"<p><b></b></p><p><b>问题描述</b></p><p>有些西方人比较迷信，如果某个月的13号正好是星期五，他们就会觉得不太吉利，用古人的说法，就是“诸事不宜”。请你编写一个程序，统计出在某个特定的年份中，出现了多少次既是13号又是星期五的情形，以帮助你的迷信朋友解决难题。</p><p>说明：（1）一年有365天，闰年有366天，所谓闰年，即能被4整除且不能被100整除的年份，或是既能被100整除也能被400整除的年份；（2）已知1998年1月1日是星期四，用户输入的年份肯定大于或等于1998年。</p><p>输入格式：输入只有一行，即某个特定的年份（大于或等于1998年）。</p><p>输出格式：输出只有一行，即在这一年中，出现了多少次既是13号又是星期五的情形。</p><p><b>输入输出样例</b></p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>1998</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>3</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 252 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T252","tags":["蓝桥杯-算法训练"],"title":"算法训练 黑色星期五"},{"description":"<p>返回给定字符串s中元音字母的首次出现位置。英语元音字母只有‘a’、‘e’、‘i’、‘o’、‘u’五个。</p><p>若字符串中没有元音字母，则返回0。</p><p>只考虑小写的情况。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>and</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>1</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 253 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T253","tags":["蓝桥杯-算法训练"],"title":"算法训练 6-3判定字符位置"},{"description":"<br />　　编写函数CompactIntegers，删除数组中所有值为0的元素，其后元素向数组首端移动。注意，CompactIntegers函数需要接收数组及其元素个数作为参数，函数返回值应为删除操作执行后数组的新元素个数。<br /> 　　输入时首先读入数组长度，再依次读入每个元素。<br /> 　　将调用此函数后得到的数组和函数返回值输出。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：512.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />7<br /> 2 0 4 3 0 0 5","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />2 4 3 5<br /> 4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 254 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T254","tags":["蓝桥杯-算法提高"],"title":"算法提高 6-9删除数组中的0元素"},{"description":"<p>读入10个复数，建立对应链表，然后求所有复数的和。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：512.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p><p>1 2</p><p>1 3</p><p>4 5</p><p>2 3</p><p>3 1</p><p>2 1</p><p>4 2</p><p>2 2</p><p>3 3</p><p>1 1</p>","output_description":"<p>输出描述:</p><p>输出样例:</p><p>23+23i</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 256 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T256","tags":["蓝桥杯-算法训练"],"title":"算法训练 9-7链表数据求和操作"},{"description":"<br />　　在C/C++语言中，整型所能表示的范围一般为-2<sup>31</sup>到2<sup>31</sup>（大约21亿）,即使long long型，一般也只能表示到-2<sup>63</sup>到2<sup>63</sup>。要想计算更加规模的数，就要用软件来扩展了，比如用数组或字符串来模拟更多规模的数及共运算。<br /> 　　现在输入两个整数，请输出它们的和。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　每个整数不超过1000位","input_description":"输入描述:<br />　　两行，每行一个整数，每个整数不超过1000位 <br />输入样例: <br />15464315464465465<br /> 482321654151","output_description":"<br />输出描述: <br />　　一行，两个整数的和。<br /> 输出样例: <br />15464797786119616","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 257 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T257","tags":["蓝桥杯-算法提高"],"title":"算法提高 高精度加法"},{"description":"<br />　　<br /> 　　去注释","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　去掉注释部分后的程序","input_description":"输入描述:<br />　　给你一段C++代码，将其中的注释去除后输出剩余的代码。<br /> 　　注释共有两种形式：<br /> 　　1.       行注视：以//开头，一直作用到行尾为止。<br /> 　　例子：<br /> 　　int n;<b>//n</b><b>表示数据规模</b><br /> 　　int a;<br /> 　　去注释后：<br /> 　　int n;<br /> 　　int a;<br /> 　　注意：保留行尾换行符<br /> 　　2.       段注视：以/*开头，到*//结尾，中间部分都是注释，可以跨行。<br /> 　　例子：<br /> 　　int main() {<br /> 　　/*<br /> 　　我是<br /> 　　一段<br /> 　　注释<br /> 　　*/<br /> 　　}<br /> 　　去注释后：<br /> 　　int main() {<br /> <br /> 　　}<br /> 　　注意：由于在线评测系统（Online Judge）对网页显示文本作了格式化，一些空行会被删去，导致上面显示的删除后的结果不正确。删除注释后，剩余的代码应该是三行，两行代码之间有一个空行。这是因为：在段注释结尾符的后面有一个换行符，它不在注释内，需要保留。 <br />输入样例: <br />int main() {<br /> /*<br /> 我是<br /> 一段<br /> 注释<br /> */<br /> int n;//n表示数据规模<br /> }","output_description":"<br />输出描述: <br />　　一段C++程序代码<br /> 输出样例: <br />int main() {<br /> <br /> int n;<br /> }<br /> <br /> 注意：和之前题目中的解释一样，在int n;之前有一个空行，被在线评测系统删掉，实际程序输出应该有该空行。","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 258 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T258","tags":["蓝桥杯-算法提高"],"title":"算法提高 去注释"},{"description":"<br />　　巴斯维克命案抓住了六个嫌疑犯，他们的口供如下：<br /> 　　A：我不是罪犯<br /> 　　B：A、C中有一个是罪犯<br /> 　　C：A和B说了假话<br /> 　　D：C和F说了假话<br /> 　　E：其他五个人中，只有A和D说了真话<br /> 　　F：我是罪犯<br /> 　　他们中只有一半说了真话，凶手只有一个。<br /> 　　本题可能有多种可能性，即正确答案（找到唯一的凶手）可能有多个，但每一个可能的答案（某一个是凶手）都满足上述口供。<br /> 　　请编程找出可能的凶手输出。<br /> 　　样例：（假设唯一的凶手是A或者D或者E，则输出结果为三行，按字母顺序依次输出）<br /> 　　A<br /> 　　D<br /> 　　E","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 260 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T260","tags":["蓝桥杯-算法提高"],"title":"算法提高 凶手"},{"description":"<p>每个物品有一定的体积（废话），不同的物品组合，装入背包会战用一定的总体积。假如每个物品有无限件可用，那么有些体积是永远也装不出来的。为了尽量装满背包，附中的OIER想要研究一下物品不能装出的最大体积。题目保证有解，如果是有限解，保证不超过2，000，000，000</p><p>如果是无限解，则输出0</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>第一行一个整数n（n&lt;=10），表示物品的件数</p><p>第2行到N+1行: 每件物品的体积(1&lt;= &lt;=500)</p><p>输入样例:</p><p>3</p><p>3</p><p>6</p><p>10</p>","output_description":"<p>输出描述:</p><p>一个整数ans，表示不能用这些物品得到的最大体积。</p><p>输出样例:</p><p>17</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 261 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T261","tags":["蓝桥杯-算法训练"],"title":"算法训练 最大体积"},{"description":"<br />　　张超来到了超市购物。<br /> 　　每个物品都有价格，正好赶上商店推出促销方案。就是把许多东西一起买更便宜（保证优惠方案一定比原价便宜）。物品要买正好的个数，而且不能为了便宜而买不需要的物品。<br /> 　　张超拿到了优惠方案，和需要购买的物品清单，当然想求出最小的花费。他是信息学选手，自然地想到写个程序解决问题。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　第一行促销物品的种类数（0 &lt;= s &lt;= 99）。<br /> 　　第二行..第s+1 行每一行都用几个整数来表示一种促销方式。<br /> 　　第一个整数 n （1 &lt;= n &lt;= 5），表示这种优惠方式由 n 种商品组成。<br /> 　　后面 n 对整数 c 和 k 表示 k （1 &lt;= k &lt;= 5）个编号为 c （1 &lt;= c &lt;= 999）的商品共同构成这种方案。<br /> 　　最后的整数 p 表示这种优惠的优惠价（1 &lt;= p &lt;= 9999）。也就是把当前的方案中的物品全买需要的价格。<br /> 　　第 s+2 行这行一个整数b （0 &lt;= b &lt;= 5），表示需要购买 b 种不同的商品。<br /> 　　第 s+3 行..第 s+b+2 行这 b 行中的每一行包括三个整数：c ，k ，和 p 。<br /> 　　C 表示唯一的商品编号（1 &lt;= c &lt;= 999），<br /> 　　k 表示需要购买的 c 商品的数量（1 &lt;= k &lt;= 5）。<br /> 　　p 表示 c 商品的原价（1 &lt;= p &lt;= 999）。<br /> 　　最多购买 5*5=25 个商品。 <br />输入样例: <br />2<br /> 1 7 3 5<br /> 2 7 1 8 2 10<br /> 2<br /> 7 3 2<br /> 8 2 5","output_description":"<br />输出描述: <br />　　一个整数ans，表示需要花的最小费用<br /> 输出样例: <br />14","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 262 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T262","tags":["蓝桥杯-算法提高"],"title":"算法提高 促销购物"},{"description":"<br />　　现在有a,b,c三种原料，如果他们按x:y:z混合，就能产生一种神奇的物品d。<br /> 　　当然不一定只产生一份d，但a,b,c的最简比一定是x:y:z<br /> 　　现在给你3种可供选择的物品:<br /> 　　每个物品都是由a,b,c以一定比例组合成的，求出最少的物品数，使得他们能凑出整数个d物品（这里的最少是指三者个数的总和最少）","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　第一行三个整数，表示d的配比（x,y,z）<br /> 　　接下来三行，表示三种物品的配比，每行三个整数（&lt;=10000）。 <br />输入样例: <br />3 4 5<br /> 1 2 3<br /> 3 7 1<br /> 2 1 2","output_description":"<br />输出描述: <br />　　四个整数，分别表示在最少物品总数的前提下a,b,c,d的个数（d是由a,b,c配得的）<br /> 　　目标答案&lt;=10000<br /> 　　如果不存在满足条件的方案，输出NONE<br /> 输出样例: <br />8 1 5 7","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 263 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T263","tags":["蓝桥杯-算法训练"],"title":"算法训练 貌似化学"},{"description":"<br />　　扫雷游戏你一定玩过吧！现在给你若干个n×m的地雷阵，请你计算出每个矩阵中每个单元格相邻单元格内地雷的个数，每个单元格最多有8个相邻的单元格。 0&lt;n,m&lt;=100","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　0&lt;n,m&lt;=100","input_description":"输入描述:<br />　　输入包含若干个矩阵，对于每个矩阵，第一行包含两个整数n和m，分别表示这个矩阵的行数和列数。接下来n行每行包含m个字符。安全区域用‘.’表示，有地雷区域用&#039;*&#039;表示。当n=m=0时输入结束。 <br />输入样例: <br />4 4<br /> *...<br /> ....<br /> .*..<br /> ....<br /> 3 5<br /> **...<br /> .....<br /> .*...<br /> 0 0","output_description":"<br />输出描述: <br />　　对于第i个矩阵，首先在单独的一行里打印序号：“Field #i:”,接下来的n行中，读入的&#039;.&#039;应被该位置周围的地雷数所代替。输出的每两个矩阵必须用一个空行隔开。<br /> 输出样例: <br />Field #1:<br /> *100<br /> 2210<br /> 1*10<br /> 1110<br /> <br /> Field #2:<br /> **100<br /> 33200<br /> 1*100<br /> （注意两个矩阵之间应该有一个空行，由于oj的格式化这里不能显示出来）","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 264 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T264","tags":["蓝桥杯-算法提高"],"title":"算法提高 扫雷"},{"description":"<br />　　在初赛普及组的“阅读程序写结果”的问题中，我们曾给出一个字符串展开的例子：如果在输入的字符串中，含有类似于“d-h”或者“4-8”的字串，我们就把它当作一种简写，输出时，用连续递增的字母获数字串替代其中的减号，即，将上面两个子串分别输出为“defgh”和“45678”。在本题中，我们通过增加一些参数的设置，使字符串的展开更为灵活。具体约定如下：<br /> 　　(1) 遇到下面的情况需要做字符串的展开：在输入的字符串中，出现了减号“-”，减号两侧同为小写字母或同为数字，且按照ASCII码的顺序，减号右边的字符严格大于左边的字符。<br /> 　　(2) 参数p1：展开方式。p1=1时，对于字母子串，填充小写字母；p1=2时，对于字母子串，填充大写字母。这两种情况下数字子串的填充方式相同。p1=3时，不论是字母子串还是数字字串，都用与要填充的字母个数相同的星号“*”来填充。<br /> 　　(3) 参数p2：填充字符的重复个数。p2=k表示同一个字符要连续填充k个。例如，当p2=3时，子串“d-h”应扩展为“deeefffgggh”。减号两边的字符不变。<br /> 　　(4) 参数p3：是否改为逆序：p3=1表示维持原来顺序，p3=2表示采用逆序输出，注意这时候仍然不包括减号两端的字符。例如当p1=1、p2=2、p3=2时，子串“d-h”应扩展为“dggffeeh”。<br /> 　　(5) 如果减号右边的字符恰好是左边字符的后继，只删除中间的减号，例如：“d-e”应输出为“de”，“3-4”应输出为“34”。如果减号右边的字符按照ASCII码的顺序小于或等于左边字符，输出时，要保留中间的减号，例如：“d-d”应输出为“d-d”，“3-1”应输出为“3-1”。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br /><table cellspacing=\"0\" cellpadding=\"2px\" style=\"border-collapse:collapse;\" class=\"table table-striped table-horver\"><tbody><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\"><b>输入</b><br /> </td><td style=\"border:solid 1.0pt\"><b>输出</b><br /> </td></tr><tr style=\"border:solid 1.0pt\"><td style=\"border:solid 1.0pt\">1 2 1<br /> abcs-w1234-9s-4zz<br /> </td><td style=\"border:solid 1.0pt\">abcsttuuvvw1234556677889s-4zz<br /> </td></tr></tbody></table>","input_description":"输入描述:<br />　　输入包括两行：<br /> 　　第1行为用空格隔开的3个正整数，一次表示参数p1，p2，p3。<br /> 　　第2行为一行字符串，仅由数字、小写字母和减号“-”组成。行首和行末均无空格。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出只有一行，为展开后的字符串。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 266 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T266","tags":["蓝桥杯-算法训练"],"title":"算法训练 字符串的展开"},{"description":"<br />　　给定区间[L, R]  ， 请计算区间中素数的个数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　2 &lt;=  L &lt;= R &lt;= 2147483647        R-L &lt;= 1000000","input_description":"输入描述:<br />　　两个数L和R。 <br />输入样例: <br />2 11","output_description":"<br />输出描述: <br />　　一行，区间中素数的个数。<br /> 输出样例: <br />5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 267 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T267","tags":["蓝桥杯-算法提高"],"title":"算法提高 找素数"},{"description":"<br />　　<br /> 　　插入排序","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　有n个元素，因此输出部分分为n个部分，每个部分开头行为：Insert element[i]，i为第几个元素。然后对于每一个部分，输出该部分该元素在插入排序过程中的每一步产生的新序列，初始时的序列以Init:打头，然后每一步后移数组元素后的元素序列以Move back:打头，最后得到的最终结果序列以Final:打头。序列元素间以一个空格隔开。示例请看样例输出。每一个部分的Insert element[i]之后的每一步的输出行之前要缩进两格，即输出两个空格。","input_description":"输入描述:<br />　　排序，顾名思义，是将若干个元素按其大小关系排出一个顺序。形式化描述如下：有n个元素a[1]，a[2]，…，a[n]，从小到大排序就是将它们排成一个新顺序a[i[1]]&lt;a[i[2]]&lt;…&lt;a[i[n]]<br /> 　　i[k]为这个新顺序。<br /> 　　插入排序，顾名思义，是通过插入操作完成排序。其直觉和方法来源于打牌时安排牌的方法。每次摸起一张牌，你都会将其插入到现在手牌中它按顺序应在的那个位置。插入排序每一步都类似这个摸牌过程。比如现在有整数数组：{3, 1, 5, 4, 2}<br /> 　　第一步：插入3 得到新序列{3}<br /> 　　第二步：插入1 得到新序列{1 3}<br /> 　　第三步：插入5 得到新序列{1 3 5}<br /> 　　第四步：插入4 得到新序列{1 3 4 5}<br /> 　　第五步：插入2 得到新序列{1 2 3 4 5}<br /> 　　为了看程序中如何完成插入过程，我们以第五步为例：<br /> 　　初始时：1 3 4 5 2<br /> 　　将2存入临时变量tmp<br /> 　　将下标j指向2之前的元素5，然后根据tmp和a[j]的大小关系决定该元素是否应该后移。如果a[j]&gt;tmp，则将a[j]后移到a[j+1]，序列变成1 3 4 5 5。<br /> 　　将下标j前移<br /> 　　判断a[j]&gt;tmp，后移a[j]到a[j+1]，得到1 3 4 4 5<br /> 　　将下标j前移<br /> 　　判断a[j]&gt;tmp，后移a[j]到a[j+1]，得到1 3 3 4 5<br /> 　　因为a[j]&lt;=tmp，所以将tmp放回a[j+1]，得到 1 2 3 4 5<br /> 　　现在，输入n个整数，根据以上算法，输出插入排序的全过程。 <br />输入样例: <br />5<br /> 3 1 5 4 2","output_description":"<br />输出描述: <br />　　第一行一个正整数n，表示元素个数<br /> 　　第二行为n个整数，以空格隔开<br /> 输出样例: <br />Insert element[1]:<br /> Init:3<br /> Final:3<br /> Insert element[2]:<br /> Init:3 1<br /> Move back:3 3<br /> Final:1 3<br /> Insert element[3]:<br /> Init:1 3 5<br /> Final:1 3 5<br /> Insert element[4]:<br /> Init:1 3 5 4<br /> Move back:1 3 5 5<br /> Final:1 3 4 5<br /> Insert element[5]:<br /> Init:1 3 4 5 2<br /> Move back:1 3 4 5 5<br /> Move back:1 3 4 4 5<br /> Move back:1 3 3 4 5<br /> Final:1 2 3 4 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 268 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T268","tags":["蓝桥杯-算法提高"],"title":"算法提高 插入排序"},{"description":"<br />　　<br /> 　　色盲的民主","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　若干行，获得投票最多的颜色，按字典序输出","input_description":"输入描述:<br />　　n个色盲聚在一起，讨论一块布的颜色。尽管都是色盲，却盲得各不相同。每个人都有自己的主张，争论不休。最终，他们决定采取民主投票的方式决定布的颜色，不管布同不同意。某种颜色用字符串表示(字符串为颜色单词或词组，也就是可能有被空格隔开的两个单词组成的颜色词组)，只要字符串不同，程序即判断颜色不同。现在给出这n个人所选择的颜色，输出最有可能的颜色（也就是获得投票最多的颜色），如果有多个颜色获得了最多的投票，则将它们按字典序分行全部输出。 <br />输入样例: <br />5<br /> red<br /> blue<br /> black<br /> black<br /> blue","output_description":"<br />输出描述: <br />　　第一行一个正整数n，表示色盲的人数<br /> 　　接下来n行，每行一句话<br /> 输出样例: <br />black<br /> blue","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 269 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T269","tags":["蓝桥杯-算法提高"],"title":"算法提高 色盲的民主"},{"description":"<br />　　<br /> 　　选择排序","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　共n行，每行输出第n步选择时交换哪两个位置的下标，以及交换得到的序列，格式:<br /> 　　swap(a[i],a[j]):a[0] … a[n-1]<br /> 　　i和j为所交换元素的下标，下标从0开始，最初元素顺序按输入顺序。另外请保证i&lt;=j<br /> 　　a[0]…a[n-1]为交换后的序列，元素间以一个空格隔开","input_description":"输入描述:<br />　　排序，顾名思义，是将若干个元素按其大小关系排出一个顺序。形式化描述如下：有n个元素a[1]，a[2]，…，a[n]，从小到大排序就是将它们排成一个新顺序a[i[1]]&lt;a[i[2]]&lt;…&lt;a[i[n]]<br /> 　　i[k]为这个新顺序。<br /> 　　选择排序的思想极其简单，每一步都把一个最小元素放到前面，如果有多个相等的最小元素，选择排位较考前的放到当前头部。还是那个例子：{3 1 5 4 2}：<br /> 　　第一步将1放到开头（第一个位置），也就是交换3和1，即swap(a[0],a[1])得到{1 3 5 4 2}<br /> 　　第二步将2放到第二个位置，也就是交换3和2，即swap(a[1],a[4])得到{1 2 5 4 3}<br /> 　　第三步将3放到第三个位置，也就是交换5和3，即swap(a[2],a[4])得到{1 2 3 4 5}<br /> 　　第四步将4放到第四个位置，也就是交换4和4，即swap(a[3],a[3])得到{1 2 3 4 5}<br /> 　　第五步将5放到第五个位置，也就是交换5和5，即swap(a[4],a[4])得到{1 2 3 4 5}<br /> 　　输入n个整数，输出选择排序的全过程。<br /> 　　要求使用递归实现。 <br />输入样例: <br />5<br /> 4 3 1 1 2","output_description":"<br />输出描述: <br />　　第一行一个正整数n，表示元素个数<br /> 　　第二行为n个整数，以空格隔开<br /> 输出样例: <br />swap(a[0], a[2]):1 3 4 1 2<br /> swap(a[1], a[3]):1 1 4 3 2<br /> swap(a[2], a[4]):1 1 2 3 4<br /> swap(a[3], a[3]):1 1 2 3 4<br /> swap(a[4], a[4]):1 1 2 3 4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 270 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T270","tags":["蓝桥杯-算法提高"],"title":"算法提高 选择排序"},{"description":"<p>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数（N≤100），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>计13李震摘编自NOIP06PJ01</p>","input_description":"<p>输入描述:</p><p>输入有2行，第1行为1个正整数，表示所生成的随机数的个数：</p><p>N</p><p>第2行有N个用空格隔开的正整数，为所产生的随机数。</p><p>输入样例:</p><p>10</p><p>20 40 32 67 40 20 89 300 400 15</p>","output_description":"<p>输出描述:</p><p>输出也是2行，第1行为1个正整数M，表示不相同的随机数的个数。第2行为M个用空格隔开的正整数，为从小到大排好序的不相同的随机数。</p><p>输出样例:</p><p>8</p><p>15 20 32 40 67 89 300 400</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 271 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T271","tags":["蓝桥杯-算法训练"],"title":"算法训练 明明的随机数"},{"description":"<br />　　笨小猴的词汇量很小，所以每次做英语选择题的时候都很头疼。但是他找到了一种方法，经试验证明，用这种方法去选择选项的时候选对的几率非常大！<br /> 　　这种方法的具体描述如下：假设maxn是单词中出现次数最多的字母的出现次数，minn是单词中出现次数最少的字母的出现次数，如果maxn-minn是一个质数，那么笨小猴就认为这是个Lucky Word，这样的单词很可能就是正确的答案。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　单词error中出现最多的字母r出现了3次，出现次数最少的字母出现了1次，3-1=2，2是质数。","input_description":"输入描述:<br />　　输入文件只有一行，是一个单词，其中只可能出现小写字母，并且长度小于100。 <br />输入样例: <br />error","output_description":"<br />输出描述: <br />　　输出文件共两行，第一行是一个字符串，假设输入的的单词是Lucky Word，那么输出“Lucky Word”，否则输出“No Answer”；第二行是一个整数，如果输入单词是Lucky Word，输出maxn-minn的值，否则输出0。<br /> 输出样例: <br />Lucky Word<br /> 2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 272 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T272","tags":["蓝桥杯-算法提高"],"title":"算法提高 笨小猴"},{"description":"<br />　　为丰富男生节活动，贵系女生设置彩票抽奖环节，规则如下：<br /> 　　1、每张彩票上印有7个各不相同的号码，且这些号码的取值范围为[1, 33]；<br /> 　　2、每次在兑奖前都会公布一个由七个互不相同的号码构成的中奖号码；<br /> 　　3、共设置7个奖项，特等奖和一等奖至六等奖。兑奖规则如下：<br /> 　　特等奖：要求彩票上的7个号码都出现在中奖号码中；<br /> 　　一等奖：要求彩票上的6个号码出现在中奖号码中；<br /> 　　二等奖：要求彩票上的5个号码出现在中奖号码中；<br /> 　　……<br /> 　　六等奖：要求彩票上的1个号码出现在中奖号码中；<br /> 　　注：不考虑号码出现的顺序，例如若中奖号码为23 31 1 14 19 17 18，则彩票12 8 9 23 1 16 7由于其中有两个号码（23和1）出现在中奖号码中，所以该彩票中了五等奖。<br /> 　　现已知中奖号码和李华买的若干彩票的号码，请你写一个程序判断他的彩票中奖情况。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　30%的数据n&lt;=100；<br /> 　　70%的数据n&lt;=1000；<br /> 　　100%的数据n&lt;=100000。<br /> <br /> 　　*****提示：数组定义为全局变量，可以分配更多内存。*****","input_description":"输入描述:<br />　　第一行一个正整数n，表示彩票数量，第二行7个整数，表示中奖号码，下面n行每行7个整数，描述n张彩票。 <br />输入样例: <br />3<br /> 1 2 3 4 5 6 7<br /> 11 12 13 14 15 16 17<br /> 12 13 14 15 16 17 18<br /> 8 7 10 9 31 30 29","output_description":"<br />输出描述: <br />　　7个空格隔开的数字，第1个数字表示特等奖的中奖张数，第2个数字表示一等奖的中奖张数，第3个数字表示二等奖的中奖张数……第7个数字表示六等奖的中奖张数。<br /> 输出样例: <br />0 0 0 0 0 0 1","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 273 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T273","tags":["蓝桥杯-算法提高"],"title":"算法提高 彩票"},{"description":"<br />　　某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数轴上的每个整数点，即0，1，2，……，L，都种有一棵树。<br /> 　　由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上还有多少棵树。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　对于20%的数据，区域之间没有重合的部分；<br /> 　　对于其它的数据，区域之间有重合的情况。","input_description":"输入描述:<br />　　输入的第一行有两个整数L（1 &lt;= L &lt;= 10000）和 M（1 &lt;= M &lt;= 100），L代表马路的长度，M代表区域的数目，L和M之间用一个空格隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。 <br />输入样例: <br />500 3<br /> 150 300<br /> 100 200<br /> 470 471","output_description":"<br />输出描述: <br />　　输出包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。<br /> 输出样例: <br />298","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 274 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T274","tags":["蓝桥杯-算法提高"],"title":"算法提高 校门外的树"},{"description":"<br />　　同在一个高中，他却不敢去找她，虽然在别人看来，那是再简单不过的事。暗恋，是他唯一能做的事。他只能在每天课间操的时候，望望她的位置，看看她倾心的动作，就够了。操场上的彩砖啊，你们的位置，就是他们能够站立的地方，他俩的关系就像砖与砖之间一样固定，无法动摇。还记得当初铺砖的工人，将整个操场按正方形铺砖（整个操场可视为R行C列的矩阵，矩阵的每个元素为一块正方形砖块），正方形砖块有两种，一种为蓝色，另一种为红色。我们定义他和她之间的“爱情指标”为最大纯色正方形的面积，请你写一个程序求出“爱情指标”。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　40%的数据R,C&lt;=10;<br /> 　　70%的数据R,C&lt;=50;<br /> 　　100%的数据R,C&lt;=200;","input_description":"输入描述:<br />　　第一行两个正整数R和C。<br /> 　　接下来R行C列描述整个操场，红色砖块用1来表示，蓝色砖块用0来表示。 <br />输入样例: <br />5 8<br /> 0 0 0 1 1 1 0 1<br /> 1 1 0 1 1 1 1 1<br /> 0 1 1 1 1 1 0 1<br /> 1 0 1 1 1 1 1 0<br /> 1 1 1 0 1 1 0 1","output_description":"<br />输出描述: <br />　　一个数，表示他和她之间的“爱情指标”。<br /> 输出样例: <br />9","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 276 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T276","tags":["蓝桥杯-算法训练"],"title":"算法训练 暗恋"},{"description":"<br />　　输入两个正整数a,b，输出a+b的值。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　两行，第一行a，第二行b。a和b的长度均小于1000位。 <br />输入样例: <br />4<br /> 2","output_description":"<br />输出描述: <br />　　一行，a+b的值。<br /> 输出样例: <br />6","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 277 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T277","tags":["蓝桥杯-算法提高"],"title":"算法提高 大数加法"},{"description":"<br />　　在一个有限的正整数序列中，有些数会多次重复出现在这个序列中。<br /> 　　如序列：3，1，2，1，5，1，2。其中1就出现3次，2出现2次，3出现1 次，5出现1次。<br /> 　　你的任务是对于给定的正整数序列，从小到大依次输出序列中出现的数及出现的次数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　数据：n&lt;=1000；0&lt;x&lt;=1000,000。","input_description":"输入描述:<br />　　第一行正整数n，表示给定序列中正整数的个数。<br /> 　　第二行是n 个用空格隔开的正整数x，代表给定的序列。 <br />输入样例: <br />12<br /> 8 2 8 2 2 11 1 1 8 1 13 13","output_description":"<br />输出描述: <br />　　若干行，每行两个用一个空格隔开的数，第一个是数列中出现的数，第二个是该数在序列中出现的次数。<br /> 输出样例: <br />1 3<br /> 2 3<br /> 8 3<br /> 11 1<br /> 13 2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 278 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T278","tags":["蓝桥杯-算法训练"],"title":"算法训练 数的统计"},{"description":"<br />　　3000米长跑时，围观党们兴高采烈地预测着最后的排名。因为他们来自不同的班，对所有运动员不一定都了解，于是他们分别对自己了解的一些运动员的实力作出了评估，即对部分运动员做了相对排名的预测，并且告诉了可怜留守的班长。因为无聊，于是他们就组团去打Dota去了。比赛结束后他们向班长询问最后的排名，但班长不记得了，只记得他们中哪些人的预测是正确的，哪些人的预测是错误的。他们想知道比赛的排名可能是什么。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　1&lt;=n&lt;=10, 2&lt;=c&lt;=n, 1&lt;=m&lt;=10，保证数据合法，且答案中排名可能数不超过20000。对于一个排名序列，一个预测是正确的，当且仅当预测的排名的相对顺序是排名序列的一个子序列。一个预测是错误的，当且仅当这个预测不正确。","input_description":"输入描述:<br />　　第一行两个整数n， m，n为运动员数量，m为围观党数量。运动员编号从0到n-1。<br /> 　　接下来m行，每行为一个围观党的相对排名预测。每行第一个数c表示他预测的人数，后面跟着c个0~n-1的不同的数，表示他预测的运动员相对排名，最后还有一个数，0表示这个预测是错误的，1表示是正确的。 <br />输入样例: <br />Input Sample 1:<br /> 3 2<br /> 2 0 1 1<br /> 2 1 2 0<br /> <br /> Input Sample 2:<br /> 3 2<br /> 2 0 1 1<br /> 2 2 1 0","output_description":"<br />输出描述: <br />　　第一行一个数k为有多少种排名的可能。<br /> 　　下面k行，每行一个0~n-1的排列，为某一个可能的排名，相邻的数间用空格隔开。所有排名按字典序依次输出。<br /> 输出样例: <br />Output Sample 1:<br /> 2<br /> 0 2 1<br /> 2 0 1<br /> <br /> Output Sample 2:<br /> 1<br /> 0 1 2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 279 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T279","tags":["蓝桥杯-算法提高"],"title":"算法提高 3000米排名预测"},{"description":"<br />　　达达在陶陶的影响下，也对学习慢慢的产生了兴趣。<br /> 　　他在每次考试之后，都会追着老师问，自己在班级的总名次是多少。考试一多，老师也不耐烦了，于是他给了达达所有人的成绩，让他自己去算出自己的排名。<br /> 　　可人太多了，达达也无法立即算出来，于是他想让你帮帮他。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　N &lt;= 100，名字长度不超过30，分数不超过100","input_description":"输入描述:<br />　　第一行为一个整数N，代表班级的学生总数。<br /> 　　接下来N行，每行一个字符串，代表一个学生的姓名，第一行总是DaDa。<br /> 　　接下来一行一个整数M，代表一共有M次考试。<br /> 　　每次考试有N行，每行有以一个空格分隔的一个正整数S和一个字符串P，代表名字为P的学生在这次考试中得了S分。 <br />输入样例: <br />3<pre class=\"pddata\"> <span style=\"font-family:\">DaDa</span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">A</span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">B</span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">2</span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">49 DaDa</span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">49 A</span><span style=\"font-family:\"></span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">48 B</span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">80 A</span><span style=\"font-family:\"></span> </pre> <pre class=\"pddata\"> <span style=\"font-family:\">85 B</span> </pre> <br /> 83 DaDa<pre class=\"pddata\"> <span class=\"Apple-style-span\" style=\"font-family: &#039;Courier New&#039;; \"> </span><span class=\"Apple-style-span\" style=\"font-family: &#039;Courier New&#039;; \"><br /></span>【样例输出】 1 2 </pre>","output_description":"<br />输出描述: <br />　　一共M行，每行一个整数，代表达达在班级里的排名，排名是这一次考试过后的所有考试总分排名，如果达达和别人并列，达达总是排在前面。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 280 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T280","tags":["蓝桥杯-算法提高"],"title":"算法提高 班级排名"},{"description":"<br />　　某寝室的同学们在学术完之后准备玩一个游戏：游戏是这样的，每个人头上都被贴了一张白色或者黑色的纸，现在每个人都会说一句话“我看到x张白色纸条和y张黑色的纸条”，又已知每个头上贴着白色纸的人说的是真话、每个头上贴着黑色纸的人说的是谎话，现在要求你判断哪些人头上贴着的是白色的纸条，如果无解输出“NoSolution.”；如果有多组解，则把每个答案中贴白条的人的编号按照大小排列后组成一个数（比如第一个人和第三个人头上贴着的是白纸条，那么这个数就是13；如果第6、7、8个人都贴的是白纸条，那么这个数就是678）输出最小的那个数（如果全部都是黑纸条也满足情况的话，那么输出0）","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　n&lt;=8","input_description":"输入描述:<br />　　第一行为一个整数n，接下来n行中的第i行有两个整数x和y，分别表示第i个人说“我看到x张白色纸条和y张黑色的纸条”。 <br />输入样例: <br />2<br /> 1 0<br /> 1 0","output_description":"<br />输出描述: <br />　　一行。如果无解输出“NoSolution.”。否则输出答案中数值（具体见问题描述）最小的那个，如果全部都是黑纸条也满足情况的话，那么输出0<br /> 输出样例: <br />0","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 281 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T281","tags":["蓝桥杯-算法训练"],"title":"算法训练 黑白无常"},{"description":"<br />　　种树","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　输出一个整数，表示最佳植树方案可以得到的美观度。如果无解输出“Error!”，不包含引号。","input_description":"输入描述:<br />　　A城市有一个巨大的圆形广场，为了绿化环境和净化空气，市政府决定沿圆形广场外圈种一圈树。园林部门 得到指令后，初步规划出n个种树的位置，顺时针编号1到n。并且每个位置都有一个美观度Ai，如果在这里种树就可以得到这Ai的美观度。但由于A城市土壤 肥力欠佳，两棵树决不能种在相邻的位置（i号位置和i+1号位置叫相邻位置。值得注意的是1号和n号也算相邻位置！）。<br /> 　　最终市政府给园林部门提供了m棵树苗并要求全部种上，请你帮忙设计种树方案使得美观度总和最大。如果无法将m棵树苗全部种上，给出无解信息。 <br />输入样例: <br />7 3<br /> 1 2 3 4 5 6 7","output_description":"<br />输出描述: <br />　　输入的第一行包含两个正整数n、m。<br /> 　　第二行n个整数Ai。<br /> 输出样例: <br />15","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 282 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T282","tags":["蓝桥杯-算法提高"],"title":"算法提高 种树"},{"description":"<br />　　有9盏灯与9个开关，编号都是1~9。<br /> <br /> 　　每个开关能控制若干盏灯，按下一次会改变其控制的灯的状态(亮的变成不亮，不亮变成亮的)。<br /> <br /> 　　具体如下：<br /> <br /> 　　第一个开关控制第二，第四盏灯；<br /> <br /> 　　第二个开关控制第一，第三，第五盏灯；<br /> <br /> 　　第三个开关控制第二，第六盏灯；<br /> <br /> 　　第四个开关控制第一，第五，第七盏灯；<br /> <br /> 　　第五个开关控制第二，第四，第六，第八盏灯；<br /> <br /> 　　第六个开关控制第三，第五，第九盏灯；<br /> <br /> 　　第七个开关控制第四，第八盏灯；<br /> <br /> 　　第八个开关控制第五，第七，第九盏灯；<br /> <br /> 　　第九个开关控制第六，第八盏灯。<br /> <br /> 　　开始时所有灯都是熄灭的，开关是关闭着的。要求按下若干开关后，使得只有4盏灯亮着。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输出所有可能的方案，每行一个方案，每一行有9个字符，从左往右第i个字符表示第i个开关的状态(&quot;0&quot;表示关闭，&quot;1&quot;表示打开)，按字典序输出。下面的样例输出只是部分方案。 <br />输入样例: <br />000001011<br /> 000001110<br /> 000001111","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 283 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T283","tags":["蓝桥杯-算法提高"],"title":"算法提高 开灯游戏"},{"description":"<br />　　<br /> 　　棋盘多项式","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　若干行，第i行表示放i个车的方案数","input_description":"输入描述:<br />　　八皇后问题是在棋盘上放皇后，互相不攻击，求方案。变换一下棋子，还可以有八车问题，八马问题，八兵问题，八王问题，注意别念反。在这道题里，棋子换成车，同时棋盘也得换，确切说，是进行一些改造。比如现在有一张n*n的棋盘，我们在一些格子上抠几个洞，这些洞自然不能放棋子了，会漏下去的。另外，一个车本来能攻击和它的同行同列。现在，你想想，在攻击的过程中如果踩到一个洞，便会自取灭亡。故，车的攻击范围止于洞。<br /> 　　此题，给你棋盘的规模n，以及挖洞情况，求放k个车的方案数(k从0到最多可放车数) <br />输入样例: <br />3<br /> 1 0 1<br /> 1 1 1<br /> 1 0 1","output_description":"<br />输出描述: <br />　　第一行一个整数n表示棋盘大小<br /> 　　接下来n行，每行n个用空格隔开的数字0或1，0的形状表示洞，1表示没有洞<br /> 输出样例: <br />7<br /> 12<br /> 4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 285 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T285","tags":["蓝桥杯-算法提高"],"title":"算法提高 棋盘多项式"},{"description":"<br />　　为了准备一个学生节，组织者在会场的一片矩形区域（可看做是平面直角坐标<br /> 　　系的第一象限）铺上一些矩形地毯。一共有n 张地毯，编号从1 到n。现在将这些地毯按照<br /> 　　编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。<br /> 　　地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形<br /> 　　地毯边界和四个顶点上的点也算被地毯覆盖。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　对于 30%的数据，有n≤2；<br /> 　　对于 50%的数据，0≤a, b, g, k≤100；<br /> 　　对于 100%的数据，有0≤n≤10,000，0≤a, b, g, k≤100,000。<br /> <br /> <br /> <br /> 　　1 0 2 3<br /> 　　0 2 3 3<br /> 　　2 1 3 3<br /> 　　4 5","input_description":"输入描述:<br />　　输入共 n+2 行。<br /> 　　第一行，一个整数 n，表示总共有n 张地毯。<br /> 　　接下来的 n 行中，第i+1 行表示编号i 的地毯的信息，包含四个正整数a，b，g，k，每<br /> 　　两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a，b）以及地毯在x<br /> 　　轴和y 轴方向的长度。<br /> 　　第 n+2 行包含两个正整数x 和y，表示所求的地面的点的坐标（x，y）。 <br />输入样例: <br />3<br /> 1 0 2 3<br /> 0 2 3 3<br /> 2 1 3 3<br /> 2 2","output_description":"<br />输出描述: <br />　　输出共 1 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1。<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 288 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T288","tags":["蓝桥杯-算法提高"],"title":"算法提高 铺地毯"},{"description":"<br /><b>【问题描述】</b><br /> 　　王小二的计算器上面的LED显示屏坏掉了，于是他找到了在计算器维修与应用系学习的你来为他修计算器。<br /> 　　屏幕上可以显示0~9的数字，其中每个数字由7个小二极管组成，各个数字对应的表示方式如图所示：<br /> <img width=\"426\" height=\"77\" src=\"/RequireFile.do?fid=aYT2ERHR\" /><br /> 　　。<br /> <br /> 　　为了排除电路故障，现在你需要计算，将数字A变为数字B需要经过多少次变换？<br /> 　　注意：现在将其中每段小二极管的开和关都定义为一次变换。例如数字1变为2是5次操作。<br /> <br /> <b>【输入格式】</b><br /> 　　第一行为一个正整数L，表示数码的长度。<br /> 　　接下来两行是两个长度为L的数字A和B，表示要把数字A变成数字B（数字可以以0开头）。<br /> <b>【输出格式】</b><br /> 　　一行一个整数，表示这些小二极管一共要变换多少次。<br /> <b>【样例输入1】</b><br /> <br /> 　　3<br /> 　　101<br /> 　　025<br /> <b>【样例输出1】</b><br /> 　　12<br /> <b> 【样例输入2】</b><b><br /> </b><br /> 　　8<br /> 　　19920513<br /> 　　20111211<br /> <b>【样例输出2</b><b>】</b><br /> 　　27<br /> <br /> <b>【数据范围】</b><br /> 　　L&lt;=100","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 289 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T289","tags":["蓝桥杯-算法提高"],"title":"算法提高 计算器"},{"description":"<br />　　从一个大小为n的整数集中选取一些元素，使得它们的和等于给定的值T。每个元素限选一次，不能一个都不选。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　1&lt;=n&lt;=22<br /> 　　T&lt;=maxlongint<br /> 　　集合中任意元素的和都不超过long的范围","input_description":"输入描述:<br />　　第一行一个正整数n，表示整数集内元素的个数。<br /> 　　第二行n个整数，用空格隔开。<br /> 　　第三行一个整数T，表示要达到的和。 <br />输入样例: <br />5<br /> -7 -3 -2 5 9<br /> 0","output_description":"<br />输出描述: <br />　　输出有若干行，每行输出一组解，即所选取的数字，按照输入中的顺序排列。<br /> 　　若有多组解，优先输出不包含第n个整数的；若都包含或都不包含，优先输出不包含第n-1个整数的，依次类推。<br /> 　　最后一行输出总方案数。<br /> 输出样例: <br />-3 -2 5<br /> -7 -2 9<br /> 2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 290 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T290","tags":["蓝桥杯-算法训练"],"title":"算法训练 和为T"},{"description":"<br />　　有n个人排队到r个水龙头去打水，他们装满水桶的时间t1、t2………..tn为整数且各不相等，应如何安排他们的打水顺序才能使他们总共花费的时间最少？","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　其中80%的数据保证n&lt;=10","input_description":"输入描述:<br />　　第一行n，r (n&lt;=500,r&lt;=75)<br /> 　　第二行为n个人打水所用的时间Ti (Ti&lt;=100)； <br />输入样例: <br />3 2<br /> 1 2 3","output_description":"<br />输出描述: <br />　　最少的花费时间<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 292 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T292","tags":["蓝桥杯-算法提高"],"title":"算法提高 排队打水问题"},{"description":"<br />　　农民约翰母牛总是产生最好的肋骨。你能通过农民约翰和美国农业部标记在每根肋骨上的数字认出它们。农民约翰确定他卖给买方的是真正的质数肋骨，是因为从右边开始切下肋骨，每次还剩下的肋骨上的数字都组成一个质数。<br /> <br /> 　　例如有四根肋骨的数字分别是：7 3 3 1，那么全部肋骨上的数字 7331是质数；三根肋骨 733是质数；二根肋骨 73 是质数；当然,最后一根肋骨 7 也是质数。7331 被叫做长度 4 的特殊质数。<br /> <br /> 　　写一个程序对给定的肋骨的数目 N (1&lt;=N&lt;=8),求出所有的特殊质数。数字1不被看作一个质数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　单独的一行包含N。 <br />输入样例: <br />4","output_description":"<br />输出描述: <br />　　按顺序输出长度为 N 的特殊质数,每行一个。<br /> 输出样例: <br />2333<br /> 2339<br /> 2393<br /> 2399<br /> 2939<br /> 3119<br /> 3137<br /> 3733<br /> 3739<br /> 3793<br /> 3797<br /> 5939<br /> 7193<br /> 7331<br /> 7333<br /> 7393","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 293 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T293","tags":["蓝桥杯-算法提高"],"title":"算法提高 特殊的质数肋骨"},{"description":"<br />　　有两个整数，如果每个整数的约数和（除了它本身以外）等于对方，我们就称这对数是友好的。例如：<br /> 　　9的约数和有：1+3=4<br /> 　　4的约数和有：1+2=3<br /> 　　所以9和4不是友好的。<br /> 　　220的约数和有：1 2 4 5 10 11 20 22 44 55 110=284<br /> 　　284的约数和有：1 2 4 71 142=220<br /> 　　所以220和284是友好的。<br /> 　　编写程序，判断两个数是否是友好数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　两个整数都小于10000","input_description":"输入描述:<br />　　一行，两个整数，由空格分隔 <br />输入样例: <br />220 284","output_description":"<br />输出描述: <br />　　如果是友好数，输出&quot;yes&quot;，否则输出&quot;no&quot;，注意不包含引号。<br /> 输出样例: <br />yes","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 295 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T295","tags":["蓝桥杯-算法训练"],"title":"算法训练 友好数"},{"description":"<br />　　78这个数可以表示为连续正整数的和，1+2+3，18+19+20+21，25+26+27。<br /> 　　输入一个正整数 n(&lt;=10000)<br /> 　　输出 m 行(n有m种表示法)，每行是两个正整数a，b，表示a+(a+1)+...+b=n。<br /> 　　对于多种表示法，a小的方案先输出。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />78","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />1 12<br /> 18 21<br /> 25 27","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 296 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T296","tags":["蓝桥杯-算法训练"],"title":"算法训练 连续正整数的和"},{"description":"<br />　　道德经曰：一生二，二生三，三生万物。<br /> 　　对于任意正整数n，我们定义d(n)的值为为n加上组成n的各个数字的和。例如，d(23)=23+2+3=28, d(1481)=1481+1+4+8+1=1495。<br /> 　　因此，给定了任意一个n作为起点，你可以构造如下一个递增序列：n,d(n),d(d(n)),d(d(d(n)))....例如，从33开始的递增序列为：<br /> 　　33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...<br /> 　　我们把n叫做d(n)的生成元，在上面的数列中，33是39的生成元，39是51的生成元，等等。有一些数字甚至可以有两个生成元，比如101，可以由91和100生成。但也有一些数字没有任何生成元，如42。我们把这样的数字称为寂寞的数字。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　n&lt;=10000","input_description":"输入描述:<br />　　一行，一个正整数n。 <br />输入样例: <br />40","output_description":"<br />输出描述: <br />　　按照升序输出小于n的所有寂寞的数字，每行一个。<br /> 输出样例: <br />1<br /> 3<br /> 5<br /> 7<br /> 9<br /> 20<br /> 31","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 298 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T298","tags":["蓝桥杯-算法训练"],"title":"算法训练 寂寞的数"},{"description":"<br />　　涛涛立志要做新好青年，他最近在学做菜。由于技术还很生疏，他只会用鸡蛋，西红柿，鸡丁，辣酱这四种原料来做菜，我们给这四种原料标上字母A,B,C,D。<br /> 　　涛涛现在会做的菜有五种：<br /> 　　1、\t西红柿炒鸡蛋 \t 原料：AABDD<br /> 　　2、\t酸辣鸡丁         原料：ABCD<br /> 　　3、\t宫保鸡丁         原料：CCD<br /> 　　4、\t水煮西红柿       原料：BBB<br /> 　　5、\t怪味蛋           原料：AD<br /> 　　这天早上，开开去早市给涛涛买了一些原料回来。由于事先没有什么计划，涛涛决定，对于现存的原料，每次尽量做菜单上靠前（即编号小）的菜。<br /> 　　现在请你写一个程序，判断一下开开和涛涛中午能吃到哪些菜。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　共4个整数a,b,c,d。分别表示开开买的A,B,C,D这4种原料的数量。每种原料不会超过30份。 <br />输入样例: <br />3<br /> 1<br /> 2<br /> 4","output_description":"<br />输出描述: <br />　　输出5行。其中第i行表示涛涛做的第i种菜的数目。<br /> 输出样例: <br />1<br /> 0<br /> 1<br /> 0<br /> 1","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 299 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T299","tags":["蓝桥杯-算法训练"],"title":"算法训练 学做菜"},{"description":"<br />　　<b>问题描述<br /> </b><br /> 　　给出一个整数 n（n&lt;10^30) 和 k 个变换规则（k&lt;=15）。<br /> <br /> 　　规则：<br /> <br /> 　　一位数可变换成另一个一位数：<br /> <br /> 　　规则的右部不能为零。<br /> <br /> 　　例如：n=234。有规则（k＝2）：<br /> <br /> 　　2－&gt; 5<br /> <br /> 　　3－&gt; 6<br /> <br /> 　　上面的整数 234 经过变换后可能产生出的整数为（包括原数）:<br /> <br /> 　　234<br /> <br /> 　　534<br /> <br /> 　　264<br /> <br /> 　　564<br /> <br /> 　　共 4 种不同的产生数<br /> <br /> 　　问题：<br /> <br /> 　　给出一个整数 n 和 k 个规则。<br /> <br /> 　　求出：<br /> <br /> 　　经过任意次的变换（0次或多次），能产生出多少个不同整数。<br /> <br /> 　　仅要求输出个数。<br /> 　　<b>输入格式</b>:<br /> 　　n k<br /> 　　x1 y1<br /> 　　x2 y2<br /> 　　... ...<br /> 　　xn yn<br /> 　　<b>输出格式</b>:<br /> 　　一个整数（满足条件的个数）：","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br /> <br />输入样例: <br />234 2<br /> 2 5<br /> 3 6","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 301 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T301","tags":["蓝桥杯-算法提高"],"title":"算法提高 产生数"},{"description":"<br />　　秋天到了，n只猴子采摘了一大堆苹果放到山洞里，约定第二天平分。这些猴子很崇拜猴王孙悟空，所以都想给他留一些苹果。第一只猴子悄悄来到山洞，把苹果平均分成n份，把剩下的m个苹果吃了,然后藏起来一份，最后把剩下的苹果重新合在一起。这些猴子依次悄悄来到山洞，都做同样的操作，恰好每次都剩下了m个苹果。第二天，这些猴子来到山洞，把剩下的苹果分成n分，巧了，还是剩下了m个。问，原来这些猴子至少采了多少个苹果。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　0&lt;m&lt;n&lt;9","input_description":"输入描述:<br />　　两个整数，n m <br />输入样例: <br />5 1","output_description":"<br />输出描述: <br />　　一个整数，表示原来苹果的数目<br /> 输出样例: <br />15621","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 302 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T302","tags":["蓝桥杯-算法训练"],"title":"算法训练 猴子分苹果"},{"description":"<br />　　一个正整数可以划分为多个正整数的和，比如n=3时：<br /> 　　3；1＋2；1＋1＋1；<br /> 　　共有三种划分方法。<br /> 　　给出一个正整数，问有多少种划分方法。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　n&lt;=100","input_description":"输入描述:<br />　　一个正整数n <br />输入样例: <br />3","output_description":"<br />输出描述: <br />　　一个正整数，表示划分方案数<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 304 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T304","tags":["蓝桥杯-算法提高"],"title":"算法提高 数的划分"},{"description":"<br />　　在上一季里，曾提到过质数的孤独，其实从另一个角度看，无情隔膜它们的合数全是质数的后代，因为合数可以由质数相乘结合而得。<br /> 　　如果一个合数由两个质数相乘而得，那么我们就叫它是质数们的直接后代。现在，给你一系列自然数，判断它们是否是质数的直接后代。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　1&lt;=T&lt;=20<br /> 　　2&lt;=要判断的自然数&lt;=10<sup>5</sup>","input_description":"输入描述:<br />　　第一行一个正整数T，表示需要判断的自然数数量<br /> 　　接下来T行，每行一个要判断的自然数 <br />输入样例: <br />4<br /> 3<br /> 4<br /> 6<br /> 12","output_description":"<br />输出描述: <br />　　共T行，依次对于输入中给出的自然数，判断是否为质数的直接后代，是则输出Yes，否则输出No<br /> 输出样例: <br />No<br /> Yes<br /> Yes<br /> No","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 305 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T305","tags":["蓝桥杯-算法提高"],"title":"算法提高 质数的后代"},{"description":"<br />　　以前有个孩子，他分分钟都在碎碎念。不过，他的念头之间是有因果关系的。他会在本子里记录每一个念头，并用箭头画出这个念头的来源于之前的哪一个念头。翻开这个本子，你一定会被互相穿梭的箭头给搅晕，现在他希望你用程序计算出这些念头中最长的一条因果链。<br /> 　　将念头从1到n编号，念头i来源于念头from[i]，保证from[i]&lt;i，from[i]=0表示该念头没有来源念头，只是脑袋一抽，灵光一现。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　最长的因果链有：<br /> 　　1-&gt;2-&gt;5 (from[5]=2,from[2]=1,from[1]=0)<br /> 　　1-&gt;2-&gt;7 (from[7]=2,from[2]=1,from[1]=0)<br /> 　　3-&gt;4-&gt;6 (from[6]=4,from[4]=3,from[3]=0)<br /> 　　3-&gt;4-&gt;8 (from[8]=4,from[4]=3,from[3]=0)","input_description":"输入描述:<br />　　第一行一个正整数n表示念头的数量<br /> 　　接下来n行依次给出from[1]，from[2]，…，from[n] <br />输入样例: <br />8<br /> 0<br /> 1<br /> 0<br /> 3<br /> 2<br /> 4<br /> 2<br /> 4","output_description":"<br />输出描述: <br />　　共一行，一个正整数L表示最长的念头因果链中的念头数量<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 307 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T307","tags":["蓝桥杯-算法提高"],"title":"算法提高 分分钟的碎碎念"},{"description":"<br />　　现代诗如蚯蚓<br /> 　　断成好几截都不会死<br /> 　　字符串断成好几截<br /> 　　有可能完全一样<br /> 　　请编写程序<br /> 　　输入字符串<br /> 　　输出该字符串最多能断成多少截完全一样的子串","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　最多能断成四个”abc”，也就是abc重复四遍便是原串<br /> 　　同时也能断成两个”abcabc”<br /> 　　最坏情况是断成一个原串”abcabcabcabc”","input_description":"输入描述:<br />　　一行，一个字符串 <br />输入样例: <br />abcabcabcabc","output_description":"<br />输出描述: <br />　　一行，一个正整数表示该字符串最多能断成的截数<br /> 输出样例: <br />4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 308 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T308","tags":["蓝桥杯-算法提高"],"title":"算法提高 现代诗如蚯蚓"},{"description":"<br />　　Given two integers A and B, your task is to output their sum, A+B.","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：1.0GB<br />","input_description":"输入描述:<br />　　The input contains of only one line, consisting of two integers A and B. (0 ≤ A,B ≤ 1 000) <br />输入样例: <br />1 1","output_description":"<br />输出描述: <br />　　The output should contain only one number that is A+B.<br /> 输出样例: <br />2","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 310 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T310","tags":["蓝桥杯-算法训练"],"title":"算法训练 A+B problem"},{"description":"<br />　　在C/C++语言中，整型所能表示的范围一般为-2<sup>31</sup>到2<sup>31</sup>（大约21亿）,即使long long型，一般也只能表示到-2<sup>63</sup>到2<sup>63</sup>。要想计算更加规模的数，就要用软件来扩展了，比如用数组或字符串来模拟更多规模的数及共运算。<br /> 　　现在输入两个整数，请输出它们的乘积。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　每个整数不超过10000位","input_description":"输入描述:<br />　　两行，每行一个正整数，每个整数不超过10000位 <br />输入样例: <br />99<br /> 101","output_description":"<br />输出描述: <br />　　一行，两个整数的乘积。<br /> 输出样例: <br />9999","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 311 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T311","tags":["蓝桥杯-算法提高"],"title":"算法提高 高精度乘法"},{"description":"<br />　　你获得了一个据说是古代玛雅人制作的箱子。你非常想打开箱子看看里面有什么东西,但是不幸的是,正如所有故事里一样,神秘的箱子出现的时候总是会挂着神秘的锁。<br /> 　　这个锁上面看起来有 N 个数字,它们排成一排,并且每个数字都在 0 到 2 之间。你发现你可以通过锁上的机关来交换<b>相邻</b>两个数字的顺序。比如,如果原来有 5 个数字 02120,在一次交换以后你就可以得到 20120,01220,02210 或者 02102。<br /> 　　根据你所搜集的情报,这个锁在上面存在某连续四个数字是“2012”的时候会自动打开。现在,你需要计算一下,你至少需要进行多少次交换操作才能打开这把锁?","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：1.0GB<br />　　把前两个数字交换以后,锁上的数字是 20120,其中存在连续四个数字2, 0, 1, 2,因此锁会打开。","input_description":"输入描述:<br />　　输入数据的第一行有一个正整数 N。(4 ≤ N ≤ 13) 输入数据的第二行有 N 个数字 a<sub>1</sub>,a<sub>2</sub>, ..., a<sub>N</sub> ,其中 a<sub>i</sub> 表示这个锁上面第 i 个数字的值,满足 0 ≤ a<sub>i</sub> ≤ 2。这些数字之间没有空格分隔。<br />   <br />输入样例: <br />5<br /> 02120","output_description":"<br />输出描述: <br />　　你只需要输出一个数字,即你至少需要的交换次数。如果无论如何都没有希望打开这把锁,输出 -1。<br /> 输出样例: <br />1","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 314 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T314","tags":["蓝桥杯-算法提高"],"title":"算法提高 题目 2 密码锁"},{"description":"<br />　　在Mars星球上，每个Mars人都随身佩带着一串能量项链。在项链上有N颗能量珠。能量珠是一颗有头标记与尾标记的珠子，这些标记对应着某个正整数。并且，对于相邻的两颗珠子，前一颗珠子的尾标记一定等于后一颗珠子的头标记。因为只有这样，通过吸盘（吸盘是Mars人吸收能量的一种器官）的作用，这两颗珠子才能聚合成一颗珠子，同时释放出可以被吸盘吸收的能量。如果前一颗能量珠的头标记为m，尾标记为r，后一颗能量珠的头标记为r，尾标记为n，则聚合后释放的能量为m*r*n（Mars单位），新产生的珠子的头标记为m，尾标记为n。<br /> 　　需要时，Mars人就用吸盘夹住相邻的两颗珠子，通过聚合得到能量，直到项链上只剩下一颗珠子为止。显然，不同的聚合顺序得到的总能量是不同的，请你设计一个聚合顺序，使一串项链释放出的总能量最大。<br /> 　　例如：设N=4，4颗珠子的头标记与尾标记依次为(2，3) (3，5) (5，10) (10，2)。我们用记号⊕表示两颗珠子的聚合操作，(j⊕k)表示第j，k两颗珠子聚合后所释放的能量。则第4、1两颗珠子聚合后释放的能量为：<br /> 　　(4⊕1)=10*2*3=60。<br /> 　　这一串项链可以得到最优值的一个聚合顺序所释放的总能量为<br /> 　　((4⊕1)⊕2)⊕3）=10*2*3+10*3*5+10*5*10=710。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入的第一行是一个正整数N（4≤N≤100），表示项链上珠子的个数。第二行是N个用空格隔开的正整数，所有的数均不超过1000。第i个数为第i颗珠子的头标记（1≤i≤N），当i&lt;N时，第i颗珠子的尾标记应该等于第i+1颗珠子的头标记。第N颗珠子的尾标记应该等于第1颗珠子的头标记。<br /> 　　至于珠子的顺序，你可以这样确定：将项链放到桌面上，不要出现交叉，随意指定第一颗珠子，然后按顺时针方向确定其他珠子的顺序。 <br />输入样例: <br />4<br /> 2 3 5 10","output_description":"<br />输出描述: <br />　　输出只有一行，是一个正整数E（E≤2.1*10<sup>9</sup>），为一个最优聚合顺序所释放的总能量。<br /> 输出样例: <br />710","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 316 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T316","tags":["蓝桥杯-算法提高"],"title":"算法提高 能量项链"},{"description":"<br />　　大家都知道&quot;超级玛丽&quot;是一个很善于跳跃的探险家，他的拿手好戏是跳跃，但它一次只能向前跳一步或两步。有一次，他要经过一条长为n的羊肠小道，小道中有m个陷阱，这些陷阱都位于整数位置，分别是a<sub>1</sub>,a<sub>2</sub>,....a<sub>m</sub>，陷入其中则必死无疑。显然，如果有两个挨着的陷阱，则玛丽是无论如何也跳过不去的。<br /> 　　现在给出小道的长度n，陷阱的个数及位置。求出玛丽从位置1开始，有多少种跳跃方法能到达胜利的彼岸（到达位置n）。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　40&gt;=n&gt;=3,m&gt;=1<br /> 　　n&gt;m;<br /> 　　陷阱不会位于1及n上","input_description":"输入描述:<br />　　第一行为两个整数n,m<br /> 　　第二行为m个整数，表示陷阱的位置 <br />输入样例: <br />4 1<br /> 2","output_description":"<br />输出描述: <br />　　一个整数。表示玛丽跳到n的方案数<br /> 输出样例: <br />1","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 318 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T318","tags":["蓝桥杯-算法提高"],"title":"算法提高 超级玛丽"},{"description":"<br />　　地球人都知道，在国际象棋中，后如同太阳，光芒四射，威风八面，它能控制横、坚、斜线位置。<br /> 　　看过清宫戏的中国人都知道，后宫乃步步惊心的险恶之地。各皇后都有自己的势力范围，但也总能找到相安无事的办法。<br /> 　　所有中国人都知道，皇权神圣，伴君如伴虎，触龙颜者死......<br /> 　　现在有一个n*n的皇宫，国王占据他所在位置及周围的共9个格子，这些格子皇后不能使用（如果国王在王宫的边上，占用的格子可能不到9个）。当然，皇后也不会攻击国王。<br /> 　　现在知道了国王的位置（x,y）（国王位于第x行第y列，x,y的起始行和列为1），请问，有多少种方案放置n个皇后，使她们不能互相攻击。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　n&lt;=12","input_description":"输入描述:<br />　　一行，三个整数，皇宫的规模及表示国王的位置 <br />输入样例: <br />8 2 2","output_description":"<br />输出描述: <br />　　一个整数，表示放置n个皇后的方案数<br /> 输出样例: <br />10","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 319 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T319","tags":["蓝桥杯-算法训练"],"title":"算法训练 王、后传说"},{"description":"<br />　　如果有人认为吃东西只需要嘴巴，那就错了。<br /> 　　都知道舌头有这么一个特性，“由简入奢易，由奢如简难”（据好事者考究，此规律也适合许多其他情况）。具体而言，如果是甜食，当你吃的食物不如前面刚吃过的东西甜，就很不爽了。<br /> 　　大宝是一个聪明的美食家，当然深谙此道。一次他来到某小吃一条街，准备从街的一头吃到另一头。为了吃得爽，他大费周章，得到了各种食物的“美味度”。他拒绝不爽的经历，不走回头路而且还要爽歪歪（爽的次数尽量多）。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　美味度为0到100的整数<br /> 　　n&lt;1000","input_description":"输入描述:<br />　　两行数据。<br /> 　　第一行为一个整数n，表示小吃街上小吃的数量<br /> 　　第二行为n个整数，分别表示n种食物的“美味度” <br />输入样例: <br />10<br /> 3 18 7 14 10 12 23 41 16 24","output_description":"<br />输出描述: <br />　　一个整数，表示吃得爽的次数<br /> 输出样例: <br />6","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 320 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T320","tags":["蓝桥杯-算法提高"],"title":"算法提高 聪明的美食家"},{"description":"<br />　　有一只特别贪吃的大嘴,她很喜欢吃一种小蛋糕,而每一个小蛋糕有一个美味度,而大嘴是很傲娇的,一定要吃美味度和刚好为m的小蛋糕,而且大嘴还特别懒,她希望通过吃数量最少的小蛋糕达到这个目的.所以她希望你能设计一个程序帮她决定要吃哪些小蛋糕.","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　m ≤ 20000,小蛋糕总数量≤50.","input_description":"输入描述:<br />　　先输入一行包含2个整数m、n,表示大嘴需要吃美味度和为m的小蛋糕,而小蛋糕一共有n种,下面输入n行,每行2个整数,第一个表示该种小蛋糕的美味度,第二个表示蛋糕店中该种小蛋糕的总数 <br />输入样例: <br />10 2<br /> 4 1<br /> 2 10","output_description":"<br />输出描述: <br />　　输出一行包含一个整数表示大嘴最少需要吃的小蛋糕数量,若大嘴无法通过吃小蛋糕达到m的美味度和,则输出&quot;&gt;&lt;“.<br /> 输出样例: <br />4","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 322 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T322","tags":["蓝桥杯-算法提高"],"title":"算法提高 贪吃的大嘴"},{"description":"<br />　　有Ｎ个士兵(1≤Ｎ≤26)，编号依次为Ａ,Ｂ,Ｃ,…，队列训练时，指挥官要把一些士兵从高到矮一次排成一行，但现在指挥官不能直接获得每个人的身高信息，只能获得“P1比P2高”这样的比较结果(P1、P2∈Ａ,Ｂ,Ｃ,…,Ｚ,记为 P1&gt;P2)，如”Ａ&gt;Ｂ”表示Ａ比Ｂ高。<br /> 　　请编一程序，根据所得到的比较结果求出一种符合条件的排队方案。<br /> 　　（注：比较结果中没有涉及的士兵不参加排队）","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　比较结果从文本文件中读入（文件由键盘输入），每个比较结果在文本文件中占一行。 <br />输入样例: <br />A&gt;B<br /> B&gt;D<br /> F&gt;D","output_description":"<br />输出描述: <br />　　若输入数据无解，打印“No Answer!”信息，否则从高到矮一次输出每一个士兵的编号，中间无分割符，并把结果写入文本文件中，文件由键盘输入：<br /> 输出样例: <br />AFBD","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 323 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T323","tags":["蓝桥杯-算法提高"],"title":"算法提高 士兵排队问题"},{"description":"<br />　　任意一个四位数，只要它们各个位上的数字是不全相同的，就有这样的规律：<br /> 　　1)将组成该四位数的四个数字由大到小排列，形成由这四个数字构成的最大的四位数；<br /> 　　2)将组成该四位数的四个数字由小到大排列，形成由这四个数字构成的最小的四位数(如果四个数中含有0，则得到的数不足四位)；<br /> 　　3)求两个数的差，得到一个新的四位数(高位零保留)。<br /> 　　重复以上过程，最后一定会得到的结果是6174。<br /> 　　比如：4312 3087 8352 6174，经过三次变换，得到6174","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　一个四位整数，输入保证四位数字不全相同 <br />输入样例: <br />4312","output_description":"<br />输出描述: <br />　　一个整数，表示这个数字经过多少次变换能得到6174<br /> 输出样例: <br />3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 324 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T324","tags":["蓝桥杯-算法提高"],"title":"算法提高 数字黑洞"},{"description":"<br />　　安全局搜索到了一批(n个)身份证号码，希望按出生日期对它们进行从大到小排序，如果有相同日期，则按身份证号码大小进行排序。身份证号码为18位的数字组成，出生日期为第7到第14位","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　n&lt;=100000","input_description":"输入描述:<br />　　第一行一个整数n，表示有n个身份证号码<br /> 　　余下的n行，每行一个身份证号码。 <br />输入样例: <br />5<br /> 466272307503271156<br /> 215856472207097978<br /> 234804580401078365<br /> 404475727700034980<br /> 710351408803093165","output_description":"<br />输出描述: <br />　　按出生日期从大到小排序后的身份证号，每行一条<br /> 输出样例: <br />404475727700034980<br /> 234804580401078365<br /> 215856472207097978<br /> 710351408803093165<br /> 466272307503271156","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 326 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T326","tags":["蓝桥杯-算法提高"],"title":"算法提高 身份证排序"},{"description":"<br />　　by ZBY... :) 淘淘拿到了一份名单，他想对上面的名字进行处理，挑出一些特殊的名字，他请你来帮忙。<br /> 　　淘淘关注以下名字：<br /> 　　如果这个名字是“WYS”，他希望你的程序输出“KXZSMR”。<br /> 　　如果这个名字是“CQ”，他希望你的程序输出“CHAIQIANG”。<br /> 　　如果这个名字是“LC“，他希望你的程序输出“DRAGONNET”。<br /> 　　如果这个名字是“SYT”或“SSD”或“LSS”或“LYF”，他希望你的程序输出“STUDYFATHER”。<br /> 　　如果这个名字与上述任意名字都不相同，他希望你的程序输出“DENOMINATOR”。","difficulty":"Mid","hint":"HINT:时间限制：100ms  内存限制：8.0MB<br />　　对于 50% 数据，N &lt;= 1000，且名单中的名字仅可能为“WYS”,“CQ”,“LC”三者之一，没有其他的名字。<br /> 　　对于 100% 数据，N &lt;= 10000，人名仅由大写字母组成，长度不超过5。","input_description":"输入描述:<br />　　第一行有一个整数N，表示淘淘手中名单里的人数。<br /> 　　接下来N行，每行有一个字符串，即名单里的人名。 <br />输入样例: <br />9<br /> WYS<br /> CQ<br /> WYS<br /> LC<br /> SYT<br /> SSD<br /> LSS<br /> LYF<br /> ZBY","output_description":"<br />输出描述: <br />　　输出N行，每行输出每个人名的判断结果。<br /> 输出样例: <br />KXZSMR<br /> CHAIQIANG<br /> KXZSMR<br /> DRAGONNET<br /> STUDYFATHER<br /> STUDYFATHER<br /> STUDYFATHER<br /> STUDYFATHER<br /> DENOMINATOR","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 327 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T327","tags":["蓝桥杯-算法提高"],"title":"算法提高 淘淘的名单"},{"description":"<br />　　按格式格式读入一个3位的整数、一个实数、一个字符 。<br /> 　　并按格式输出 一个整数占8位左对齐、一个实数占8位右对齐、一个字符 ，并用|隔开。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　见题面 <br />输入样例: <br />123456.789|a","output_description":"<br />输出描述: <br />　　见题面<br /> 输出样例: <br />123     |   456.8|a","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 328 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T328","tags":["蓝桥杯-算法提高"],"title":"算法提高 输入输出格式练习"},{"description":"<br />　　陶陶家的院子里有一棵苹果树，每到秋天树上就会结出n个苹果。苹果成熟的时候，陶陶就会跑去摘苹果。陶陶有个30厘米高的板凳，当她不能直接用手摘到苹果的时候，就会踩到板凳上再试试。<br /> 　　现在已知n个苹果到地面的高度，以及陶陶把手伸直的时候能够达到的最大高度，请帮陶陶算一下她能够摘到的苹果的数目。假设她碰到苹果，苹果就会掉下来。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入包括两行数据。第一行只包括两个正整数n(5&lt;=n&lt;=200)和m(100&lt;=m&lt;=150),表示苹果数目和桃桃伸手可达到的高度（以厘米为单位）。第二行包含n个100到200之间（包括100和200）的整数（以厘米为单位）分别表示苹果到地面的高度，两个相邻的整数之间用一个空格隔开。 <br />输入样例: <br />10 110<br /> <br /> <br /> 100 200 150 140 129 134 167 198 200 111","output_description":"<br />输出描述: <br />　　输出包括一行，这一行只包含一个整数，表示陶陶能够摘到的苹果的数目。<br /> 输出样例: <br />5<br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 330 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T330","tags":["蓝桥杯-算法提高"],"title":"算法提高 陶陶摘苹果"},{"description":"<br />　　银行近期推出了一款新的理财计划“重复计息储蓄”。储户只需在每个月月初存入固定金额的现金，银行就会在每个月月底根据储户账户内的金额算出该月的利息并将利息存入用户账号。现在如果某人每月存入k元，请你帮他计算一下，n月后，他可以获得多少收益。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入数据仅一行，包括两个整数k(100&lt;=k&lt;=10000)、n(1&lt;=n&lt;=48)和一个小数p(0.001&lt;=p&lt;=0.01)，分别表示每月存入的金额、存款时长、存款利息。 <br />输入样例: <br />1000 6 0.01","output_description":"<br />输出描述: <br />　　输出数据仅一个数，表示可以得到的收益。<br /> 输出样例: <br />213.53","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 331 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T331","tags":["蓝桥杯-算法提高"],"title":"算法提高 理财计划"},{"description":"<br />　　给定一个二元一次方程组，形如：<br /> 　　a * x + b * y = c;<br /> 　　d * x + e * y = f;<br /> 　　x,y代表未知数，a, b, c, d, e, f为参数。<br /> 　　求解x,y","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　0 &lt;= a, b, c, d, e, f &lt;= 2147483647","input_description":"输入描述:<br />　　输入包含六个整数: a, b, c, d, e, f; <br />输入样例: <br />例：<br /> 3 7 41 2 1 9","output_description":"<br />输出描述: <br />　　输出为方程组的解，两个整数x, y。<br /> 输出样例: <br />例：<br /> 2 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 333 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T333","tags":["蓝桥杯-算法提高"],"title":"算法提高 解二元一次方程组"},{"description":"<br />　　水仙花数","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　是水仙花数,输出&quot;YES&quot;,否则输出&quot;NO&quot;(不包括引号)","input_description":"输入描述:<br />　　判断给定的<b>三位数</b>是否 水仙花 数。所谓 水仙花 数是指其值等于它本身 每位数字立方和的数。例 153 就是一个 水仙花  \t数。 153=1<sup>3</sup>+5<sup>3</sup>+3<sup>3</sup> <br />输入样例: <br />123","output_description":"<br />输出描述: <br />　　一个整数。<br /> 输出样例: <br />NO","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 334 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T334","tags":["蓝桥杯-算法训练"],"title":"算法训练 水仙花"},{"description":"<br />　　陶陶家的院子里有一棵苹果树，每到秋天树上就会结出n个苹果。苹果成熟的时候，陶陶就会跑去摘苹果。陶陶有个30厘米高的板凳，当她不能直接用手摘到苹果的时候，就会踩到板凳上再试试。<br /> 　　现在已知n个苹果到地面的高度，以及陶陶把手伸直的时候能够达到的最大高度。假设她碰到苹果，苹果就会掉下来。请帮陶陶算一下,经过她的洗劫后，苹果树上还有几个苹果。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输入包括两行数据。第一行只包括两个正整数n(5&lt;=n&lt;=200)和m(60&lt;=m&lt;=200),表示苹果数目和桃桃伸手可达到的高度（以厘米为单位）。第二行包含n个100到200之间（包括100和200）的整数（以厘米为单位）分别表示苹果到地面的高度，两个相邻的整数之间用一个空格隔开。 <br />输入样例: <br />10 110<br /> 100 200 150 140 129 134 167 198 200 111","output_description":"<br />输出描述: <br />　　输出包括一行，这一行只包含一个整数，表示陶陶不能够摘到的苹果的数目。<br /> 输出样例: <br />5<br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 337 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T337","tags":["蓝桥杯-算法提高"],"title":"算法提高 陶陶摘苹果2"},{"description":"<br />　　特殊的数字四十","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　1234是一个非常特殊的四位数，因为它的各位数之和为10，编程求所有这样的四位十进制数。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　按从小到大的顺序输出满足条件的四位十进制数。每个数字占用一行。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 338 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T338","tags":["蓝桥杯-算法训练"],"title":"算法训练 特殊的数字四十"},{"description":"<br />　　在此游戏中地图被分为了许多叫作Geo格的正方形方格，其中一些被涂上色，假设没有涂色的为透明色。<br /> 　　地图中还有些Geo符号，它们样子像不同颜色的金字塔（包括透明Geo符号）。每个Geo符号都坐落在Geo格上，每个Geo格上最多一个Geo符号。<br /> 　　Geo符号可以被消除。为了更好地理解Geo符号在消除时发生了什么，这里引入把刚消除的Geo符号放入的队列。<br /> 　　从队列中取出Geo符号，观察包含Geo符号的Geo格的颜色，如果它不是透明的且颜色不同于Geo符号，则把所有这个颜色的Geo格重新涂为Geo符号的颜色（透明的Geo符号则为透明色）。重涂色是在一个无限大的区域从那个有符号的Geo格子开始螺旋状进行的。<br /> 　　<img src=\"/RequireFile.do?fid=452n239E\" width=\"240\" height=\"240\" />.<br /> 　　换句话说，我们选择所有需要重涂色的方格找到它们在以有符号格为中心的无限螺旋表格中所对应的数字。此后按数字的增加顺序我们对其重染色。<br /> 　　如果在重染色时遇到一个格子包含另一个Geo符号的情况则将Geo符号移出并放置在队列尾部。<br /> 　　当重染色结束后Geo符号彻底消失，并且队列中下一个Geo符号（如果有）将取出，重复此操作直至队列为空。<br /> 　　为了更好地理解请看一个例子。<br /> 　　你知道所有格子的颜色、所有符号的位置。计算出队列里符号彻底消失时所造成的重染色次数。<br /> 　　推荐使用I64d输出。","difficulty":"Mid","hint":"HINT:时间限制：2.0s  内存限制：256.0MB<br /><img src=\"/RequireFile.do?fid=nMytgBA9\" width=\"170\" height=\"220\" />","input_description":"输入描述:<br />　　第一行包含两个数n，m(1&lt;=n，m&lt;=300)—地图的高和宽。<br /> 　　接下来n行每行m个数—格子的颜色。<br /> 　　接下来n行每行m个数—对符号的描述，-1表示没有符号，否则数字代表符号的颜色。<br /> 　　所有颜色都是属于0到10^9的整数，0表示透明。<br /> 　　最后一行两个数x，y(1&lt;=x&lt;=n，1&lt;=y&lt;=m)—需要消除的Geo符号的行和列位置。行从上到下标记，列从左往右标记，从1开始。保证位置(x，y)包含一个符号。 <br />输入样例: <br />5 5<br /> 9 0 1 1 0<br /> 0 0 3 2 0<br /> 1 1 1 3 0<br /> 1 1 1 3 0<br /> 0 1 2 0 3<br /> -1 1 -1 3 -1<br /> -1 -1 -1 0 -1<br /> -1 -1 -1 -1 -1<br /> -1 2 3 -1 -1<br /> -1 -1 -1 -1 2<br /> 4 2","output_description":"<br />输出描述: <br />　　一行一个数—符号消除时重染色次数。<br /> 输出样例: <br />35","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 339 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T339","tags":["蓝桥杯-算法训练"],"title":"算法训练 Entertaining Geodetics"},{"description":"<br />　　将一个正整数N(1&lt;N&lt;32768)分解质因数，把质因数按从小到大的顺序输出。最后输出质因数的个数。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　一行，一个正整数 <br />输入样例: <br />66","output_description":"<br />输出描述: <br />　　两行，第一行为用空格分开的质因数<br /> 　　第二行为质因数的个数<br /> 输出样例: <br />2 3 113","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 341 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T341","tags":["蓝桥杯-算法提高"],"title":"算法提高 质因数2"},{"description":"<br />　　数据很多，但我们经常只取前几名，比如奥运只取前3名。现在我们有n个数据，请按从大到小的顺序，输出前10个名数据。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　10&lt;=n&lt;=200,各个整数不超出整型范围","input_description":"输入描述:<br />　　两行。<br /> 　　第一行一个整数n，表示要对多少个数据<br /> 　　第二行有n个整数，中间用空格分隔。表示n个数据。 <br />输入样例: <br />26<br /> 54 27 87 16 63 40 40 22 61 6 57 70 0 42 11 50 13 5 56 7 8 86 56 91 68 59","output_description":"<br />输出描述: <br />　　一行，按从大到小排列的前10个数据，每个数据之间用一个空格隔开。<br /> 输出样例: <br />91 87 86 70 68 63 61 59 57 56","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 342 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T342","tags":["蓝桥杯-算法提高"],"title":"算法提高 前10名"},{"description":"<br />　　一个含有n个点的迷宫是一棵树（一个任意两点之间都恰好有一条路径的无向图）。每个点都有一定的概率成为这个迷宫的入口和出口。<br /> 　　从这个迷宫走出去的方法是从入口开始进行深度优先搜索。如果当前有多个移动方案，那么等概率的选择移动方案中的一个。DFS的过程为以下的伪代码：<br /> 　　DFS(x)<br /> 　　if x == exit vertex then<br /> 　　finish search<br /> 　　flag[x] &lt;- TRUE<br /> 　　random shuffle the vertices&#039; order in V(x) // here all permutations have equal probability to be chosen<br /> 　　for i &lt;- 1 to length[V] do<br /> 　　if flag[V[i]] = FALSE then<br /> 　　count++;<br /> 　　DFS(y);<br /> 　　count++;<br /> 　　V(x)是与x点相邻的点的序列。Flag数组初始时是全部为FALSE的。DFS 初始时从入口开始。当搜索结束时，变量count将会统计移动的次数。<br /> 　　你的任务是统计一个人从这个迷宫的入口走到出口步数的数学期望值。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　2<br /> 　　1 2<br /> 　　0 1<br /> 　　1 0","input_description":"输入描述:<br />　　第一行一个数n，表示这个图的节点数。。<br /> 　　下面n-1行，每行包括两个数ai,bi，表示一条连接ai和bi的边。<br /> 　　保证给出的图是一棵树。<br /> 　　下面n行，每行包括两个非负整数xi,yi，表示选择i为入口的可能性和出口的可能性。<br /> <br /> 　　选择i为入口的概率和选择i为出口的概率分别为xi/sumx和yi/sumy，sumx表示x的总和，sumy表示y的总和。sumx以及sumy均为正数且不超过10^6。 <br />输入样例: <br />","output_description":"<br />输出描述: <br />　　输出期望的步数，要求误差不超过10^-9。<br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 343 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T343","tags":["蓝桥杯-算法训练"],"title":"算法训练 Maze"},{"description":"<br />　　小朋友排成一排，老师给他们分苹果。<br /> 　　小朋友从左到右标号1..N。有M个老师，每次第i个老师会给第Li个到第Ri个，一共Ri-Li+1个小朋友每人发Ci个苹果。<br /> 　　最后老师想知道每个小朋友有多少苹果。","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　40%的数据，N、M≤1 000。<br /> 　　100%的数据，N、M≤100 000，1≤Li≤Ri≤N，0≤Ci≤100。","input_description":"输入描述:<br />　　第一行两个整数N、M，表示小朋友个数和老师个数。<br /> 　　接下来M行，每行三个整数Li、Ri、Ci，意义如题目表述。 <br />输入样例: <br />5 3<br /> 1 2 1<br /> 2 3 2<br /> 2 5 3","output_description":"<br />输出描述: <br />　　一行N个数，第i个数表示第i个小朋友手上的水果。<br /> 输出样例: <br />1 6 5 3 3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 345 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T345","tags":["蓝桥杯-算法提高"],"title":"算法提高 分苹果"},{"description":"<br />　　这一天，有一列车子排起了一排长队，必经之路是一个被魔王笼罩的山洞。每辆车的司机害怕魔王程度不同，所以每个司机有一些要求。<br /> 　　车子有n台，排成一条长队，每辆车有4个属性:<br /> 　　V  ——这辆车的总价值，价值就是比如它其中的乘客和货物的价值<br /> 　　c  ——这辆车里面的人数量（司机表示自己也算一个乘客，司机和乘客不用区分开来）<br /> 　　l  ——在这辆车的前面需要总量正好为多少乘客的车（不多也不少），这车才敢开<br /> 　　r  ——在这辆车的后面需要总量正好为多少乘客的车（不多也不少），这车才敢开<br /> 　　“前面需要总量正好为多少乘客的车”指的是驶在这辆车前面所有的车的乘客总数。<br /> 　　“后面需要总量正好为多少乘客的车”指的是驶在这辆车后面所有的车的乘客总数。<br /> 　　你不能改变每辆车在车队的相对顺序，但你可以安排某些车退出车队，保证依然在车队的每辆车都敢开了，即满足上述条件，并且剩下车的v的总量最大。<br /> 　　-----------------------------<br /> 　　简单来说，给您按输入顺序排列的n辆车，您需要删去里面的一些车（剩下的车仍然按原相对顺序排列）。<br /> 　　使得对于每辆车，若它没被删去，设其为输入的第i辆车，<br /> 　　要满足<br /> 　　l[i]= sigma{c[j] | j&lt;i 且第j辆车没被删去}<br /> 　　r[i]= sigma{c[j] | j&gt;i 且第j辆车没被删去}<br /> 　　在满足这些条件前提下，要求sigma{V[i] | i没被删去} 最大，<br /> 　　请输出这个最大值，并且递增输出没有被删去的车的标号。","difficulty":"Mid","hint":"HINT:时间限制：2.0s  内存限制：256.0MB<br />　　对于20%的数据，n&lt;=100<br /> 　　对于50%的数据，n&lt;=1000<br /> 　　对于100%的数据，n&lt;=100000<br /> 　　对于100%的数据，1&lt;=vi&lt;=10^4 , 1&lt;=ci&lt;=10^5,0&lt;=li,ri&lt;=10^5","input_description":"输入描述:<br />　　输入的第一行为一个正整数n（1&lt;=n&lt;=10^5）——车的个数。<br /> 　　接下来n行，每行四个整数，第i行的数字: vi, ci,li ,r<sub>i</sub> ,（1&lt;=vi&lt;=10^4 , 1&lt;=ci&lt;=10^5,0&lt;=li,ri&lt;=10^5），车子们从1开始编号，从车队的最前头开始算起。 <br />输入样例: <br />5<br /> 1 1 0 3<br /> 1 1 1 2<br /> 1 1 2 1<br /> 1 1 3 0<br /> 2 1 3 0","output_description":"<br />输出描述: <br />　　第一行输出一个数k：会继续在这车队里的车的总数（注意我们的目标是让价值最大）。<br /> 　　第二行k个数，递增输出继续在车队里的车的编号。<br /> 　　请留心你不允许改变车的次序。如果答案不唯一，输出任意一个。<br /> 输出样例: <br />4<br /> 1 2 3 5","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 346 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T346","tags":["蓝桥杯-算法训练"],"title":"算法训练 Don't fear, DravDe is kind"},{"description":"<br />　　给定n个集合, 要求选出其中某些集合, 使得这些集合的并集的势, 等于选出的集合的数目.<br /> 　　对于任意的k(1&lt;=k&lt;=n), 满从中选出任意k个集合, 这k个集合的并集的势一定大于等于k.<br /> 　　每个集合有一个权值, 每个选择方案的代价是所选的集合的权值的和.<br /> 　　请输出代价最小的选择方案的代价.<br /> 　　当然, 不选择任何一个集合是一个可行的方案(权值和为0), 但不一定最优(权值和可以为负).","difficulty":"Mid","hint":"HINT:时间限制：2.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　第一行一个正整数n(1&lt;=n&lt;=300), 为集合个数.<br /> 　　在接下来n行中, 第i行描述第i个集合:<br /> 　　首先给出一个正整数m[i]为该集合的势, 显然1&lt;=m[i]&lt;=n.<br /> 　　接下来m[i]个在1到n之间的整数, 表示该集合中的元素.<br /> 　　最后一行n个整数, 为每个集合的权值, 绝对值不超过1e6. <br />输入样例: <br />3<br /> 1 1<br /> 2 2 3<br /> 1 3<br /> 10 20 -3","output_description":"<br />输出描述: <br />　　仅一个整数, 为代价最小的选择方案的代价.<br /> 输出样例: <br />-3","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 355 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T355","tags":["蓝桥杯-算法训练"],"title":"算法训练 Buying Sets"},{"description":"<br /><b>【题目描述】</b><br /> 　　来自ABBYY的小明有一个与“细胞与遗传学研究所”的合作。最近，研究所用一个新的题目考验小明。题目如下。<br /> 　　有由n个细胞组成的一个集合（不一定不同）每个细胞是一个由小写拉丁字母组成的字符串。科学家给小明提出的问题是从给定集合中选出一个大小为k的子集，使得所选子集的代表值最大。<br /> 　　小明做了些研究并得出了一个结论，即一个蛋白质集合的代表制可以用一个方便计算的整数来表示。我们假设当前的集合为{a<sub>1</sub>, ..., a<sub>k</sub>}，包含了k个用以表示蛋白质的字符串。那么蛋白质集合的代表值可以用如下的式子来表示：<br /> <br /> 　　其中f(x, y)表示字符串x和y的最长公共前缀的长度，例如：<br /> 　　f(&quot;abc&quot;, &quot;abd&quot;) = 2  ， f(&quot;ab&quot;, &quot;bcd&quot;) = 0.<br /> 　　因此，蛋白质集合{&quot;abc&quot;, &quot;abd&quot;, &quot;abe&quot;}的代表值等于6，集合{&quot;aaa&quot;, &quot;ba&quot;, &quot;ba&quot;}的代表值等于2。<br /> 　　在发现了这个之后，小明要求赛事参与者写一个程序选出，给定蛋白质的集合中的大小为k的子集中，能获得最大可能代表性值得一个子集。帮助他解决这个问题吧！<br /> <b>【输入格式】</b><br /> 　　输入数据第一行包含2个正整数n和k（1≤k≤n），由一个空格隔开。接下来的n行每一行都包含对蛋白质的描述。每个蛋白质都是一个仅有不超过500个小写拉丁字母组成的非空字符串。有些字符串可能是相等的。","difficulty":"Mid","hint":"HINT:时间限制：2.0s  内存限制：256.0MB<br />","input_description":"输入描述:<br />　　输出一个整数，表示给定蛋白质集合的大小为k的子集的代表值最大可能是多少。<br /> <br /> <b>【数据规模】</b><br /> 　　20%的数据保证：1 ≤ n ≤ 20<br /> 　　50%的数据保证：1 ≤ n ≤ 100<br /> 　　100%的数据保证：1 ≤ n ≤ 2000<br /> <br /> <b>【样例输入1】</b><br /> 　　3 2<br /> 　　aba<br /> 　　bzd<br /> 　　abq<br /> <b>【样例输出1】</b><br /> 　　2<br /> <br /> <b>【样例输入2】</b><br /> 　　4 3<br /> 　　eee<br /> 　　rrr<br /> 　　ttt<br /> 　　qqq<br /> <b>【样例输出2】</b><br /> 　　0<br /> <b>【样例输入3】</b><br /> 　　4 3<br /> 　　aaa<br /> 　　abba<br /> 　　abbc<br /> 　　abbd<br /> <b>【样例输出3】</b><br /> 　　9 <br />输入样例: <br />","output_description":"<br />输出描述: <br /><br /> 输出样例: <br />","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 357 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T357","tags":["蓝桥杯-算法训练"],"title":"算法训练 Representative Sampling (30_points)"},{"description":"<p>小明的花店新开张，为了吸引顾客，他想在花店的门口摆上一排花，共m盆。通过调查顾客的喜好，小明列出了顾客最喜欢的n种花，从1到n标号。为了在门口展出更多种花，规定第i种花不能超过ai盆，摆花时同一种花放在一起，且不同种类的花需按标号的从小到大的顺序依次摆列。</p><p>试编程计算，一共有多少种不同的摆花方案。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：128.0MB</p><p>有2种摆花的方案，分别是(1，1，1，2)， (1，1，2，2)。括号里的1和2表示两种花，比如第一个方案是前三个位置摆第一种花，第四个位置摆第二种花。</p>","input_description":"<p>输入描述:</p><p>第一行包含两个正整数n和m，中间用一个空格隔开。</p><p>第二行有n个整数，每两个整数之间用一个空格隔开，依次表示a1、a2、……an。</p><p>输入样例:</p><p>2 4</p><p>3 2</p>","output_description":"<p>输出描述:</p><p>输出只有一行，一个整数，表示有多少种方案。<b>注意：因为方案数可能很多，请输出方案数对</b><b>1000007</b><b>取模的结果。</b></p><p>输出样例:</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 363 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T363","tags":["蓝桥杯-算法提高"],"title":"算法提高 摆花"},{"description":"<p>作为一名网络警察，你的任务是监视电子邮件，看其中是否有一些敏感的关键词。不过，有些狡猾的犯罪嫌疑人会改变某些单词的字母顺序，以逃避检查。请编写一个程序，发现这种调整过顺序的关键词。程序的输入有两行，第一行是关键词列表，第二行是待检查的句子。程序的输出为在该句子中所找到的经过顺序调整的关键词。（单词全部为小写，单词之间以一个空格分隔，每一行的单词个数不限）</p><p><b>输入：</b></p><p>guns mines missiles</p><p>aameric ssell snug dan iimsssle ot sit neeemis</p><p><b></b></p><p><b>输出：</b></p><p>guns missiles</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 365 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T365","tags":["蓝桥杯-算法提高"],"title":"算法提高 P1003"},{"description":"<br />　　s01串初始为&quot;0&quot;<br /> 　　按以下方式变换<br /> 　　0变1，1变01","difficulty":"Mid","hint":"HINT:时间限制：1.0s  内存限制：256.0MB<br />　　0~19","input_description":"输入描述:<br />　　1个整数(0~19) <br />输入样例: <br />3","output_description":"<br />输出描述: <br />　　n次变换后s01串<br /> 输出样例: <br />101","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 366 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T366","tags":["蓝桥杯-算法训练"],"title":"算法训练 s01串"},{"description":"<p>有n个点和m个区间，点和区间的端点全部是整数，对于点a和区间[b,c]，若a&gt;=b且a&lt;=c，称点a满足区间[b,c]。</p><p>求最小的点的子集，使得所有区间都被满足。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p><p>1&lt;=n,m&lt;=10000</p><p>0&lt;=点和区间的坐标&lt;=50000</p>","input_description":"<p>输入描述:</p><p>第一行两个整数n m</p><p>以下n行 每行一个整数，代表点的坐标</p><p>以下m行 每行两个整数，代表区间的范围</p><p>输入样例:</p><p>5 5</p><p>2</p><p>6</p><p>3</p><p>8</p><p>7</p><p>2 5</p><p>3 4</p><p>3 3</p><p>2 7</p><p>6 9</p>","output_description":"<p>输出描述:</p><p>输出一行，最少的满足所有区间的点数，如无解输出-1。</p><p>输出样例:</p><p>2</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 367 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T367","tags":["蓝桥杯-算法提高"],"title":"算法提高 线段和点"},{"description":"<p>最新的火星探测机器人curiosity被困在了一个二维迷宫里，迷宫由一个个方格组成。</p><p>共有四种方格：</p><p>‘.’  代表空地，curiosity可以穿过它</p><p>‘#’ 代表障碍物，不可穿越，不可停留</p><p>‘S’ 代表curiosity的起始位置</p><p>‘T’  代表curiosity的目的地</p><p>NASA将会发送一系列的命令给curiosity，格式如下：“LRUD”分别代表向左，向右，向上，向下走一步。由于地球和火星之间最近时也有55000000km！所以我们必须提前判断这一系列的指令会让curiosity最终处在什么样的状态，请编程完成它。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p>输入描述:</p><p>第一行是一个整数T，代表有几个测试样例</p><p>每个测试样例第一行是一个整数N（1&lt;=N&lt;=50））代表迷宫的大小（N*N）。随后的N行每行由N个字符串组成，代表迷宫。接下来的一行是一个整数Q，代表有多少次询问，接下来的Q行每行是一个仅由“LRUD”四个字母的组成的字符串，字符转长度小于1000.</p><p>输入样例:</p>","output_description":"<p>输出描述:</p><p>对于每个询问输出单独的一行：</p><p>“I get there!”：执行给出的命令后curiosity最终到达了终点。</p><p>“<b>I have no idea!</b>”：执行给出的命令后curiosity未能到达终点。</p><p>“I am dizzy!”：curiosity在执行命令的过程中撞到了障碍物。</p><p>“<b>I am out!</b>”：代表curiosity在执行命令的过程中走出了迷宫的边界。</p><p><b>Sample Input</b></p><p>2</p><p>2</p><p>S.</p><p>#T</p><p>2</p><p>RD</p><p>DR</p><p>3</p><p>S.#</p><p>.#.</p><p>.T#</p><p>3</p><p>RL</p><p>DDD</p><p>DDRR</p><p><b>Sample Output</b></p><p>I get there!</p><p>I am dizzy!</p><p>I have no idea!</p><p>I am out!</p><p>I get there!</p><p>输出样例:</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 369 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T369","tags":["蓝桥杯-算法提高"],"title":"算法提高 我们的征途是星辰大海"},{"description":"<p>有一份提货单，其数据项目有：商品名（MC）、单价（DJ）、数量（SL）。定义一个结构体prut，其成员是上面的三项数据。在主函数中定义一个prut类型的结构体数组，输入每个元素的值，计算并输出提货单的总金额。</p><p><b>输入：</b></p><p>4</p><p>book 12.5 3</p><p>pen 2.5 10</p><p>computer 3200 1</p><p>flower 47 5</p><p><b>输出：</b></p><p>3497.500000</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p><span style=\"color: rgb(51, 51, 51);\">输入格式：第一行是数据项个数N(N&lt;100)，接下来每一行是一个数据项。商品名是长度不超过100的字符串，单价为double类型，数量为整型。</span><br /></p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">输出格式：double类型的总金额。</span><br /></p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 370 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T370","tags":["蓝桥杯-算法训练"],"title":"算法训练 P1101"},{"description":"<p>定义一个学生结构体类型student，包括4个字段，姓名、性别、年龄和成绩。然后在主函数中定义一个结构体数组（长度不超过1000），并输入每个元素的值，程序使用冒泡排序法将学生按照成绩从小到大的顺序排序，然后输出排序的结果。</p><p><br /></p><p><b></b></p>","difficulty":"Mid","hint":"<p>HINT:时间限制：1.0s  内存限制：256.0MB</p>","input_description":"<p><span style=\"color: rgb(51, 51, 51);\">第一行是一个整数N（N&lt;1000），表示元素个数；接下来N行每行描述一个元素，姓名、性别都是长度不超过20的字符串，年龄和成绩都是整型。</span><br /></p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">输出格式：按成绩从小到大输出所有元素，若多个学生成绩相同则成绩相同的同学之间保留原来的输入顺序。</span><br /></p>","samples_input":["3\nAlice female 18 98\nBob male 19 90\nMiller male 17 92"],"samples_output":["Bob male 19 90\nMiller male 17 92\nAlice female 18 98"],"source":"蓝桥杯练习系统 ID: 371 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T371","tags":["蓝桥杯-算法训练"],"title":"算法训练 P1102"},{"description":"<p>有n个矩阵，大小分别为a0*a1, a1*a2, a2*a3, ..., a[n-1]*a[n]，现要将它们依次相乘，只能使用结合率，求最少需要多少次运算。</p><p>两个大小分别为p*q和q*r的矩阵相乘时的运算次数计为p*q*r。</p>","difficulty":"Mid","hint":"<p>HINT:时间限制：3.0s  内存限制：256.0MB</p><p>1&lt;=n&lt;=1000, 1&lt;=ai&lt;=10000。</p>","input_description":"<p>输入描述:</p><p>输入的第一行包含一个整数n，表示矩阵的个数。</p><p>第二行包含n+1个数，表示给定的矩阵。</p><p>输入样例:</p><p>3</p><p>1 10 5 20</p>","output_description":"<p>输出描述:</p><p>输出一个整数，表示最少的运算次数。</p><p>输出样例:</p><p>150</p>","samples_input":["参考上文 "],"samples_output":["参考上文"],"source":"蓝桥杯练习系统 ID: 417 原题链接: http://lx.lanqiao.cn/problem.page?gpid=T417","tags":["蓝桥杯-算法提高"],"title":"算法提高 矩阵乘法"},{"description":"<p>唐可可是《爱与演唱会》的忠实粉丝，因此她也酷爱一款名为《爱与演唱会！学园偶像祭！全明星！》的音乐游戏。然而，由于学习算法的时候过于投入，她直到游戏活动截止的前夕才突然回忆起来活动还没肝！</p><p>这款游戏游戏总共有n首乐曲，在活动期间，游玩第i首乐曲将会消耗w_i的体力并在游玩后获得v_i的活动代币(1 ≤ i ≤ n)。由于每首乐曲的游玩时间都是差不多的，因此经过唐可可的计算，在活动结束前她还可以游玩k首乐曲。</p><p>此外，唐可可不喜欢反复游玩同一首歌，因为她觉得这样坐牢会失去玩游戏带来的轻松和愉悦，这样是不会给大家带来笑容的！因此她要求这k首歌互不相同。换句话来说，每首歌她只会游玩一次。</p><p>你能帮唐可可计算出，在拿到的活动代币尽可能多的前提下消耗体力最少的方案吗？</p>","difficulty":"Low","hint":"<p>edit by</p><p>Minalinsky</p>","input_description":"<p>输入有n +1行。</p><p>第一行有两个整数n，k，(1 ≤ k ≤ n ≤ 10^5)分别代表游戏的乐曲总数和唐可可能游玩的乐曲数量。</p><p>接下来有n行，第i +1行有两个整数w_i​，v_i​，(0 ≤ w_i​, v_i ≤ 10^9)分别代表游玩第i首乐曲将会消耗的体力和游玩后获得的活动代币数量。</p>","output_description":"<p>输出有一行。</p><p>第一行有两个数，分别代表获得的活动代币数量和消耗的体力数量。</p>","samples_input":["5 3\n1 1\n2 2\n3 3\n4 4\n5 5\n"],"samples_output":["15 15\n"],"source":"","tags":["结构体"],"title":"爱与演唱会！全明星！"},{"description":"<p><span style=\"color: rgb(51, 51, 51);\">计算机科学与技术是当代发展最快，应用最广的科技领域之一。经过十几年的努力，武汉科技大学计算机科学与技术学院已发展成为一个集教学、科研、科技开发于一体的高科技实体。学院负责全校的计算机课程教学，具有工学硕士授予权，享有较高声誉。在学生教育上，每个学期都会进行闻风丧胆的期末考试，每门功课所占权重不一样，假设成绩排序规则为：<span style=\"color: rgb(51, 51, 51);\">∑</span>每门课程成绩*权值/课程总数</span></p><p><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(77, 77, 77);\">现在就请你写一个程序按照每个同学成绩最终生成总排名表（若最终成绩相同，则按照学号非降序排序）</span></span></p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(77, 77, 77);\">输入的第一行给出两个个正整数N（N≤1000）M(M<span style=\"color: rgb(77, 77, 77);\">≤20)</span>，依次代表学生总数、课程总数。</span></p><p><font>第二行给出M个数，代表各个课程的权值</font></p><p><span style=\"color: rgb(77, 77, 77);\">随后N行</span><span style=\"color: rgb(77, 77, 77);\">给出N个学生的各个课程成绩</span></p><p><span style=\"color: rgb(77, 77, 77);\">格式为：考号（由13位整数字组成）和M个课程得分（为[0,100]区间内的整数），中间用空格分隔。</span></p>","output_description":"<p><span style=\"color: rgb(77, 77, 77);\">输出汇总的排名表，每个考生的信息占一行，顺序为：考号、最终成绩。</span><br /></p>","samples_input":["4 2\n0.1 0.9\n1234567890001 95 100\n1234567890005 100 98\n1234567890003 95 96\n1234567890002 77 88"],"samples_output":["1234567890001 99.5\n1234567890005 98.2\n1234567890003 95.9\n1234567890002 86.9"],"source":"","tags":["结构体"],"title":"期末考试？"},{"description":"<p>每到中午的时候，食堂里就会排很长很长的队。这时，你想模拟一下队列的情况，你能完成吗？（开始时所有队列均为空）</p><p>（此题只允许提交 C 代码）</p>","difficulty":"Mid","hint":"","input_description":"<p>第一行两个整数 n，q。表示有 n 个队，q 次变化。</p><p>接下来 q 行，每行 3 个整数，x, y, z。</p><p>x=1 时，表示第 y 个队伍来了一位年龄为 z 的同学（当然是排在队尾）。x=2 时，表示第 y 个队伍的前 z 位同学离开了队伍，（不足 z 人时，相当于队列变为空）。</p><p>1 ≤ n、q ≤ 100000，x=1或2，1 ≤ y ≤ n，1 ≤ z ≤ 10。</p>","output_description":"<p>输出 q 次变化后的 n 个队伍的最终状态，输出格式如下：</p><p>输出 n 行，第 i 行第一个数 x 表示第 i 个队有 x 位同学，之后有 x 个数，按从队首到队尾的顺序输出第 i 个队的所有同学的年龄，同一行的两个数之间用一个空格分开。</p>","samples_input":["6 7\n2 5 7\n1 5 8\n1 5 7\n2 3 1\n1 1 1\n2 4 8\n1 4 9\n"],"samples_output":["1 1\n0\n0\n1 9\n2 8 7\n0\n"],"source":"","tags":["指针","链表","结构体","第10章 结构体","数据结构"],"title":"排队"},{"description":"<p><span style=\"color: rgb(51, 51, 51);\">LX</span><span style=\"color: rgb(51, 51, 51);\">除了是一位</span><span style=\"color: rgb(51, 51, 51);\">ACMER</span><span style=\"color: rgb(51, 51, 51);\">外，还是一位小画家。今天，他走在路上，看到了一面墙，他觉得这面墙非常不好看，于是就想在这面墙上画成他想要的样子。他把整面墙分成</span><span style=\"color: rgb(51, 51, 51);\">n</span><span style=\"color: rgb(51, 51, 51);\">等块，每一块都有一种颜色。他手里有一把刷子，每一次都能把一段区间的墙刷上相同的颜色（后刷上的颜色会覆盖之前的颜色）。因为体力有限，他想使刷的次数尽量少。你能告诉他最少刷多少次吗？</span><br /></p>","difficulty":"High","hint":"","input_description":"<p style=\"text-align: justify;\">第一行一个整数 T，表示有 T 组测试，每组有两行输入，第一行一个正整数 n，表示有 n 块，第二行 n 个数 a[1], a[2], ... , a[n]，第 i 个数表示第 i 块的颜色，墙初始的颜色为0，同一个数表示相同的颜色，不同的数表示不同的颜色（由于他觉得同一种颜色出现太多会不好看，所以保证相同的数不会出现超过10次） 。</p><ul><li><span style=\"color: rgb(51, 51, 51);\">1</span><span style=\"color: rgb(51, 51, 51);\">≤ T ≤ 50</span><br /></li><li><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">1</span><span style=\"color: rgb(51, 51, 51);\">≤ Σn ≤ 6000</span><br /></span></li><li><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\"><span style=\"color: rgb(51, 51, 51);\">1</span><span style=\"color: rgb(51, 51, 51);\">≤ a[i] ≤ n</span></span></span></li></ul>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">输出</span><span style=\"color: rgb(51, 51, 51);\">T</span><span style=\"color: rgb(51, 51, 51);\">行，每行</span><span style=\"color: rgb(51, 51, 51);\">1</span><span style=\"color: rgb(51, 51, 51);\">个数，表示</span><span style=\"color: rgb(51, 51, 51);\">LX</span><span style=\"color: rgb(51, 51, 51);\">需要刷的最少次数。</span></p>","samples_input":["4\n3\n1 1 1\n2\n1 2\n5\n1 2 3 2 1\n8\n4 3 1 2 1 1 3 3\n"],"samples_output":["1\n2\n3\n4\n"],"source":"WUST2021校赛","tags":["DP","校赛"],"title":"LX画家"},{"description":"<p>有一个叫可莉的女孩子，非常喜欢炸鱼🐟，她带了许多不同的炸弹用来炸鱼（bomb）。每个炸弹有三个属性，投掷该炸弹所需要的时间（time)，该炸弹的名称(name)，该炸弹是否过期(没有过期用&quot;No&quot;表示，过期了用&quot;Yes&quot;表示。每一个炸弹可以炸死一条鱼，只有在保质期内的炸弹才可以把鱼炸死。</p><p>可莉一共有n（0&lt;=n&lt;=100)个炸弹，她必须只能0~t(0&lt;=t&lt;=50000)秒内投掷那些炸弹，她一次只能投掷一个炸弹，她想知道她最多可以炸死多少条鱼。<br /></p>","difficulty":"Low","hint":"<p>可莉只能使用第一个炸弹和第三个炸弹，可以炸两条鱼，95+5&lt;=100。所以输出2。</p><p><img alt=\"25290745D4FEE466E6B05BF62BF5C6AC8757F6.jpg\" src=\"/public/upload/ddea974159.jpg\" width=\"600\" height=\"600\" /><br /></p>","input_description":"<p>第一行输入一个n和一个t，分别表示可莉有n个炸弹，她只能在0~t秒内投掷炸弹。</p><p>第二行到第n+1行,输入每个炸弹的投掷时间，炸弹名称，表示是否过期的字符串。<br /></p>","output_description":"<p>输出一个整数，表示可莉最多可以炸死多少鱼。<br /></p>","samples_input":["3 100\n5 蹦蹦炸弹 No\n10 氢弹 Yes\n95 核弹 No"],"samples_output":["2"],"source":"","tags":["第10章 结构体","结构体"],"title":"可莉害了"},{"description":"<p>一个集训队里，老师要将N个集训队的同学排成一列，便于拍照同学被编号为1∼N，他采取如下的方法：</p><ol><li><p>先将1同学安排进队列，这时队列中只有他一个人；</p></li><li><p>2−N号同学依次入列，编号为i的同学入列方式为：老师指定编号为i的同学站在编号为1∼(i−1)中某位同学（即之前已经入列的同学）的左边或右边</p></li><li><p>老师排好序后，有M个同学不想拍照，于是老师从队列中去掉M(M&lt;N)个同学，其他同学位置顺序不变。</p></li></ol><p>在所有同学按照上述方法排列完毕后，老师想知道从左到右所有同学的编号。<br /><br /></p>","difficulty":"Mid","hint":"<p>无<br /></p>","input_description":"<p>第1行为一个正整数N，表示了有N个同学。</p><p>第2−N行，第i行包含两个整数k,p，其中k为小于i的正整数，p为0或者1。若p为0，则表示将i号同学插入到k号同学的左边，p为1则表示插入到右边。</p><p>第N+1行为一个正整数M，表示去掉的同学数目。</p><p>接下来M行，每行一个正整数x，表示将x号同学从队列中移去，如果x号同学已经不在队列中则忽略这一条指令。</p>","output_description":"<p>1行，包含最多N个空格隔开的正整数，表示了队列从左到右所有同学的编号，行末换行且无空格。<br /></p>","samples_input":["4\n1 0\n2 1\n1 0\n2\n3\n3"],"samples_output":["2 4 1"],"source":"","tags":["数据结构","链表"],"title":"ACM集训队拍全家福"},{"description":"<p>有两个数字，一个叫ZMW,一个叫DYT。ZMW一开始站在DYT左边，他们手拉手开始转圈圈，转了半圈后 他们的位置交换了。</p><p>输入两个数字，第一个数字代表ZMW,第二个数字代表DYT,输出交换后的两个数字。</p><p>补全swapp函数，提交全部代码。</p><p>void swapp(int *x,int *y)</p><p>{</p><p>.......<br /></p><p>}</p><p>int main()</p><p>{</p><p>int ZMW,DYT;</p><p>scanf(&quot;%d %d&quot;,&ZMW,&DYT);</p><p>swapp(&ZMW,&DYT);</p><p>printf(&quot;%d %d\\n&quot;,ZMW,DYT);</p><p>}</p>","difficulty":"Low","hint":"<p>无<br /></p>","input_description":"<p>输入两个数字代表ZMW和DYT<br /><br /></p>","output_description":"<p>输出交换后的两个数字<br /></p>","samples_input":["1 3"],"samples_output":["3 1"],"source":"","tags":["指针"],"title":"DYT和ZMW转圈圈"},{"description":"<p>今天是YY的生日，YY和PK在一起快乐的吃蛋糕🎂，突然想到远在南一的D还没吃上蛋糕，于是毅然决定去给他送蛋糕，然而12月的武科带，冷风那个吹啊🍃~，</p><p>北苑到南苑的路上有若干个区间，每个区间都有不同大小的风力，PK同学出发时只有0点护甲和1000块蛋糕，只有区间的风力值正好等于PK的护甲值时，PK才能安全穿过区间而不受伤害，否则PK受到一次伤害，大于等于10级的风力不需要护甲，但是会直接让PK破防，然后使他护甲值归零。PK希望受到的伤害尽可能少，所以他需要想办法获得护甲，获得护甲的办法是吃一块怀里的蛋糕（不争气的泪水从PK的嘴角流了下来），每吃一块蛋糕PK的护甲值都会加一，现在请问在PK尽可能少的受到伤害的情况下，D同学最多能吃到多少块蛋糕？</p>","difficulty":"Low","hint":"","input_description":"<p>第一行包含一个整数 n ，代表风力区间的数量。</p><p>第二行包含 n 个整数，分别为 a[1] , a[2] , a[3] .... a[n] ,代表第 i 个区间的风力值。</p><p>1 &lt;= n &lt;= 1000</p><p>0 &lt;= a[i] &lt;= 10</p>","output_description":"<p>一个整数，代表D同学最多能吃到的蛋糕数量</p>","samples_input":["6\n1 2 3 4 3 3 ","8\n1 2 3 4 3 3 10 9","6\n9 10 9 10 9 10","1\n10"],"samples_output":["997","988","973","1000"],"source":"","tags":["基础"],"title":"YY的蛋糕"},{"description":"<p>众所周知，金姐是一个大吃货，所以她的hxd们一样也都是吃货</p><p>这天，金姐打算和hxd们一起去干饭，所以金姐拿出小本本，记下了她的n个hxd最喜欢吃的食物s,但是金姐的数学实在太逊了，所以她不知道某种食物X有那些人喜欢</p><p>金姐急着去干饭，聪明的你可以帮帮她吗</p><p>ps:金姐最喜欢的食物是wuhuarou</p>","difficulty":"Low","hint":"","input_description":"<p>第一行两个数n、q，代表金姐的好友数和询问数​<span style=\"color: rgb(132, 33, 162);\">(0&lt;=n&lt;=10,1&lt;=q&lt;=10)</span></p><p>接下来n行每行有两个字符串（仅由小写字母构成），用空格隔开，分别代表好友的名字name和最喜欢的食物s​<span style=\"color: rgb(132, 33, 162);\">(0&lt;|name|,|s|&lt;=20)</span></p><p>第n+2行到第n+q-1行，每行一个字符串X<span style=\"color: rgb(132, 33, 162);\">(0&lt;|X|&lt;=20)</span>​,代表金姐想知道有哪些人喜欢吃X</p>","output_description":"<p><span style=\"color: rgb(51, 51, 51);\">共q行，每行</span><span style=\"color: rgb(51, 51, 51);\"><strong>按字典序</strong></span><span style=\"color: rgb(51, 51, 51);\">输出喜欢吃X的人的名字，用空格隔开，若没有则输出“NULL”</span><br /></p>","samples_input":["3 4\nalice hanbao\nbob hetao\njack wuhuarou\nhanbao\nhetao\nwuhuarou\nshitang"],"samples_output":["alice\nbob\njack jinjie\nNULL"],"source":"","tags":["结构体"],"title":"金姐和她的hxd"},{"description":"<p>白银武最近在学习结构体，老师香月夕呼让他帮忙整理班上学生的成绩信息。每个学生有高数，线代两门课的成绩，以及各自的学号，老师想让</p><p>你按照两门课的总分为第一关键字从大到小，数学为第二关键字从大到小，线代为第三关键字从大到小，学号为第四关键字从小到大，</p><p>将学生成绩排序好。即先按照总分高低排序，总分相等则按照数学成绩高低排序，如果数学成绩相等，则按照线代成绩高低排序，</p><p>如果线代成绩相等，则按照学号从小到大排序。之后老师要求你将整理好所有学生信息按刚刚优先级的要求打印出来。</p><p>但是白银武完全不想做这种简单的事情，你能帮他完成任务吗。</p>","difficulty":"Low","hint":"","input_description":"<p>第一行输入学生的个数n; (1&lt;=n&lt;=100)</p><p>接下来的n行每行输入3个数字x,y,id分别为第i个学生的高数成绩，线代成绩，学号</p><p>(0&lt;=x,y&lt;=100;0&lt;=id&lt;=1e9)</p>","output_description":"<p>输出n行，按照题目要求输出n个学生的高数成绩，线代成绩，学号；<br /></p>","samples_input":["6\n32 52 19470\n59 25 20979\n92 40 15540\n40 22 31933\n55 85 17496\n55 85 1234\n"],"samples_output":["55 85 1234\n55 85 17496\n92 40 15540\n59 25 20979\n32 52 19470\n40 22 31933\n"],"source":"无","tags":["结构体"],"title":"多权值排序"},{"description":"<p>cyh有强迫症，他觉得等差数列才是最优美的，目前有一个长度为n的数列a，cyh想将它修改为等差数列，为了最大化节省时间，他想知道最少需要修改几个数才能使该数列成为等差数列。</p><p>为了给cyh增加难度，wz会对该数列进行m次操作，每次操作i x表示将表示将ai变为x，每次操作后wz将会询问cyh最少需要修改几个数才能将当前数列成为等差数列。（要求修改后的等差数列中的每个数必须是整数）</p>","difficulty":"Mid","hint":"","input_description":"<p>单组输入;</p><p>第一行1个整数n;</p><p>第二行n个整数，表示数列a;</p><p>第三行1个整数m;</p><p>接下来m行，每行2个整数i x。</p><p>数据范围：$1 \\leq n,m,ai,x \\leq 1000$; $1 \\leq i \\leq n$;</p>","output_description":"<p>每次操作后输出一个整数，使数列a成为等差数列，最少需改变的数的个数。<br /></p>","samples_input":["5\n1 5 2 1 3\n3\n4 100\n2 34\n3 67\n"],"samples_output":["3\n2\n1\n"],"source":"WUST2019校赛","tags":["校赛"],"title":"等差数列"},{"description":"<p>最近Alice和Bob玩起了一种新的卡牌游戏，规则是这样的。</p><p>牌堆中一共有$n+m+1$张牌，大小分别为1~n+m+1。每次Alice从牌库中抽取n张牌，Bob从牌库中抽取m张牌，剩下一张牌盖在桌子中央。每个人只能看到自己的手牌，谁先猜中桌子中间的牌的大小谁就获胜。</p><p>之后从Alice开始两个人可轮流进行如下两种操作之一。</p><ul><li><p>猜桌子中央牌的大小，如果猜对则获胜，否则失败，同时游戏结束。</p></li><li><p>声明一个数，如果你的对手持有该数所对应的牌，则必须向你展示并放在一旁，即游戏中将不能再使用或者声明此牌。如果你的对手没有持有该牌，他将告诉你他并没有该牌。</p></li></ul><p>Alice和Bob两个人玩这个游戏玩的不亦乐乎，但是他们也很想知道这样的游戏是否有所谓的必胜策略嘛？如果没有，那两个人都按照最优方式操作的情况下获胜的概率分别是多少？</p>","difficulty":"Mid","hint":"","input_description":"<p style=\"text-align: justify;\">第一行输入一个整数T代表有T组数据(T&lt;=100)。<br /></p><p>之后每一行输入两个整数n和m.(0&lt;=m,n&lt;=1000)</p>","output_description":"<p>输出两个小数，分别为Alice和Bob获胜的概率，绝对误差小于$10^{-9}$。</p>","samples_input":["3\n0 3\n1 0\n1 1\n"],"samples_output":["0.25 0.75\n1 0\n0.5 0.5"],"source":"WUST2019校赛","tags":["2019校赛","校赛"],"title":"必胜博弈？"},{"description":"<p>cyh和lyh最近正在学习二叉树，在计算机科学中，二叉树是每个结点最多有两个子树的树结构。通常子树被称作“左子树”（left subtree）和“右子树”（right subtree）。</p><p>cyh突然想要把二叉树存储在数组里，为此他想到一种二叉树和数组的映射关系，对于任意含有n个叶子节点的二叉树，可以对每个叶子节点按照相对位置顺序对应一个长度为n的数组的每一个数，例如下图就是一个有3个叶子节点二叉树和长度为3的a数组对应的例子。</p><p><img src=\"https://oj.dianhsu.top/public/upload/ff83b04d4c.png\" alt=\"test1.png\" /></p><p>lyh觉得cyh这样存储数组太没意思了，如是他偷偷的把cyh的二叉树进行很多次了的翻转，得到一个新的二叉树，这个新的二叉树就能对应一个新的数组。这里的翻转定义为：交换任意一个节点的左右子树，例如上图二叉树通过任意次翻转可以得到：</p><p><img alt=\"test2.png\" src=\"/public/upload/d215e9a515.png\" width=\"410\" height=\"379\" /><img alt=\"test3.png\" src=\"/public/upload/4a5dc92495.png\" width=\"444\" height=\"397\" /><img alt=\"test4.png\" src=\"/public/upload/7e9c0f6f75.png\" width=\"424\" height=\"399\" /><br /></p><p>cyh在得知lyh翻转了他的二叉树后，他非常非常生气。但是他想到一个难题，如果lyh能解决这个问题，cyh就决定放过lyh，这个问题是cyh给出两个数组，如果lyh能把a数组映射到任意一棵二叉树上，然后通过翻转最后得到b数组。lyh手速比较快，翻转对lyh轻而易举，但是他想到a数组不一定能通过上述转换得到b数组，现在聪明的你能帮lyh解决这个问题吗？<br /></p>","difficulty":"Mid","hint":"","input_description":"<p>输入包含多组数据，每组数据包含三行，第一行包含一个整数n（n&lt;=120）代表数组长度，第二行和第三行包三个整数，分别代表数组a和数组b,a数组和b数组均为32位整数。<br /></p>","output_description":"<p>如果数组a可以通过变换得到数组b请输出<code>YES</code>，否则输出<code>NO</code>。</p>","samples_input":["4\n1 2 3 4\n1 3 4 2\n4\n1 2 3 4\n3 1 4 2\n"],"samples_output":["YES\nNO\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"二叉树和数组"},{"description":"<p>荏苒冬春谢，寒暑忽流易。</p><p>又到了一年一度的校赛，ZD努力地训练、打CF，想在校赛中获奖，得到自己想要的奖品。这天早上做题时，他遇到了一个与矩阵有关的题目，觉得蛮有趣，可以一直想不出来做法....直到中午去食堂吃饭碰到了LM，于是ZD将这道题讲给了LM听，LM没过多久就想出了解法，你知道LM的思路是什么吗？</p><p>有一个n*m的矩阵，有些格子里面只有一个普通的宝石，而有些格子里面只有一个特殊的宝石，而有些格子里面则只有一瓶药水。</p><p>普通的宝石，有一个恒定不变的价值。</p><p>特殊的宝石，这种宝石的价值在某些特定的时间会发生变化。每种特殊的宝石都有一个属性s，两种不同的价值A和B。当且仅当某时刻时间t为s的倍数时，这个宝石的价值才会变为B，其它时间其价值都为A。</p><p>药水，可以让时间倒流，例如当前时间为t，有一瓶药水其属性为x，则可以使t变至[t-x,t]中的任一整数时刻。</p><p>假设时间t=1秒时，你正在矩阵的左上角(1,1)处，你只能往下或者往右走，每走一步花费1秒，且你一旦走到含有宝石的格子，你就会获得与宝石价值相同数量的金币；一旦走到含有药水的格子里，你也会立刻使用掉它，现在问你到达右下角(n,m)时能获得的最大金币数目是多少？</p>","difficulty":"Mid","hint":"<p>样例一解释:</p><p>当走到$(1,3)$时，使时间$t=-6$，身上宝石价值为$0$；下一步走到$(2,3)$，$t=-5$，身上宝石价值为$100$，下一步走到$(3,3)$，$t=-4$，身上宝石价值为$104$。</p>","input_description":"<p>第一行一个整数$T(1 \\leq T \\leq 50)$，代表数据组数。</p><p>接下来$T$组数据，对于每组数据来说:</p><p>第一行$3$个整数$n,m,k(1 \\leq n,m \\leq 100，0 \\leq k \\leq n*m)$,其中$n,m$代表矩阵的大小；$k$代表特殊宝石的个数。</p><p>接下来n行，每行m个整数，设第i行的第j个数为$A_{ij}(-10^9 \\leq A_{ij} \\leq 10^9)$。若$A_{ij} \\leq 0$，则其代表这是一个普通宝石或者特殊宝石，且$t=1$秒时的价值为$A_{ij}$;若$A_{ij}&lt;0$，则其代表这是一瓶药水，能使时间t变为[t+Aij,t]中任一整数时刻。</p><p>接下来$k$行，每行$4$个整数$x,y,s,B(1 \\leq x \\leq n,1 \\leq y \\leq m,2 \\leq s \\leq 10,-10^9 \\leq B \\leq 10^9)$。代表矩阵$x$行$y$列的这个是一个特殊宝石，其属性为$s$，当时间$t$为$s$的整数倍时，其价值会变为$B$（保证$A_{xy} \\geq 0$）。</p>","output_description":"<p>对于每组数据输出<code>Case #x: y</code>,<code>x</code>代表当前数据编号(从$1$开始),<code>y</code>代表你到达右下角$(n,m)$时能获得的最大金币数目。</p>","samples_input":["2\n3 3 1\n0 0 -9\n1 0 0\n2 3 4\n2 3 5 100\n5 3 3\n-8 -49 -87\n13 -82 -19\n11 -14 37\n37 30 -90\n-51 100 -35\n3 1 2 -6\n3 3 3 30\n4 1 3 82\n"],"samples_output":["Case #1: 104\nCase #2: 236\n"],"source":"WUST2019校赛","tags":["2019校赛","校赛"],"title":"玻璃墙"},{"description":"<p>cyh在回家的路上进入了一个奇怪的迷宫，迷宫内没有任何障碍物，只有边界处存在非常坚固的墙,他可以朝任何方向走，但无法走出迷宫的边界。但是同时他看到了出口的方向，所以他为了尽快走出迷宫只会朝着迷宫的出口方向走。我们用一个n*m的图来表示这个迷宫，cyh位于迷宫的入口，也就是图的左上角坐标(0,0)的位置，迷宫的出口位于图的右下角也就是坐标(n-1,m-1)的位置。我们规定cyh不能走出迷宫的边界并且在每个位置只能选择向下或者向右走。cyh在迷宫中的任何位置对于所有可以走的方向会等概率选择其中一个方向。同时迷宫某些的位置存在陷阱，但遇到陷阱并不会影响cyh的规则。现在我希望可以得到cyh从入口走到出口所遇到陷阱个数的期望值。<br /></p>","difficulty":"Mid","hint":"","input_description":"<p>先输入一个数字T,代表测试数据组数。(T&lt;=10)</p><p>然后n,m代表迷宫的大小(n,m&lt;=20)</p><p>一个n*m大小的01矩阵代表迷宫，其中1代表该位置存在陷阱，0表示不存在。(数据保证入口处没有陷阱)</p>","output_description":"<p>cyh走到出口处遇到陷阱个数的期望值，保留三位小数。<br /></p>","samples_input":["2\n2 3\n0 0 1\n0 1 0\n2 3\n0 0 0\n0 0 0\n"],"samples_output":["1.000\n0.000\n"],"source":"WUST2019校赛","tags":["2019校赛","校赛"],"title":"cyh回家"},{"description":"<p>众所周知，充钱使人变强。棕熊Grizzly又双叒叕充钱了，首冲六元当爸爸。</p><p>Grizzly充钱之后获得了终结者冈布奥，天生自带技能杀戮程式( 终结者冈布奥攻击敌人时，会自动进行程式优化（每次获得4~20个优化点）。优化度100%时，下次攻击可造成3倍伤害。出战时，初始携带【时间机器】)。Grizzly带着它的冈布奥来到了冒险者之森，果不其然，充钱之后Grizzly很快就通过了前49层，当到达50层的时候，Grizzly想要在最小的损失下通过这层，所以它发动了一张魔法卷轴，这个卷轴可以使得当前这层的所有石板被翻开，因此它能够清楚的看见所有的怪物的位置，和通往下一层的传送门的位置，它惊奇的发现传送门和终结者冈布奥的初始位置在同一个位置，这意味着它可以直接前往下一层，但刚刚充钱了的Grizzly非常膨胀，所以它想杀光此层所有的怪物才前往下一层。由于灵魂链接的效果，终结者冈布奥只需要击杀一定数量的怪物使得由这些怪物和传送门构成的多边形，那么在多边形内部和边界上的所有怪物都会死亡。</p><p>Grizzly想要尽快的前往下一层，所以它想知道终结者冈布奥最少需要走多长的距离使得它能够杀死所有的怪物并成功达到传送们的位置，由于某种不知名的力量，终结者冈布奥在离开传送门之后再次到达传送门它将会被传送到下一层，但这不是 Grizzly 想要得到的结果。</p><p>你可以认为终结者冈布奥非常强（毕竟充钱了），不需要任何损耗就能杀死每个怪物。</p>","difficulty":"Mid","hint":"","input_description":"<p>多组测试数据。</p><p>每组第一行输入一个整数n(n&lt;=1000)表示怪物的个数,之后n行，每行输入两个实数x, y表示一个怪物的坐标(|x|, |y| &lt;= 1000)。</p><p>终结者冈布奥的坐标为(0, 0)。</p>","output_description":"<p>每组数据输出一个数，表示终结者冈布奥所需要走的最小的距离，结果四舍五入保留两位小数。<br /></p>","samples_input":["1\n1 1\n3\n-2 2\n2 2\n0 1\n"],"samples_output":["2.83\n9.66\n"],"source":"WUST2019校赛","tags":["2019校赛","校赛"],"title":"充钱使人变强"},{"description":"<p>小明觉得现在的电话簿太不安全了，于是打算对电话号码进行加密。现在他有很多11位的电话号码，他想要知道对于每个电话号码，最短的独一无二的子串，使得在其他电话号码里找不到这个子串。请你帮帮他。<br /></p>","difficulty":"Mid","hint":"","input_description":"<p>多组输入</p><p>每组数据第一行为n，表示存了多少个电话，接下来n行表示n个电话号码</p><p>n&lt;=1000 多组数据 题目保证有解</p>","output_description":"<p>输出对于每个电话所需要的最短子串，要求输出最小字典序的子串<br /></p>","samples_input":["3\n15980412545\n13951024671\n13260510871\n"],"samples_output":["04\n02\n05\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"电话号码"},{"description":"<p>斐波那契数列是一个大家都非常熟悉的数列，它的递推式非常的简单$f_n =f_{n-1}+f_{n-2} (n \\geq 3)$</p><p>其中$f_1=1$，$f_2=1$。现在我改变$f_1=1$，$f_2=3$，递推式不变，然后就会发现后面的数字全部发生了变化，形成了一个新的数列。现在我需要求新数列的前$n$项的若干次方之和。</p>","difficulty":"Mid","hint":"","input_description":"<p>先输入一个数字T，代表测试数据组数$(T \\leq 100)$</p><p>后面每行两个数字$n$和$k$。$(n \\leq 10^{18}, k \\leq 10^5)$</p>","output_description":"<p>每行一个整数，代表$f_1^k+f_2^k+\\cdots+f_n^k$的值，答案对$1000000009$取模。</p>","samples_input":["5\n1 1\n2 1\n3 1\n2 2\n3 2\n"],"samples_output":["1\n4\n8\n10\n26\n"],"source":"WUST2019校赛","tags":["2019校赛","校赛"],"title":"Fibonacci"},{"description":"<p>在一个晴天,坐在树下的ZD想出了一道简单的计算几何题目，并决定拿这道题考考LM。但是ZD却不知道解法，他想你肯定能帮他。</p><p>给定二维平面里的三个点，要求只能移动一个点使得这个三个点构成一个等腰三角形，求出移动的最短距离。</p>","difficulty":"Mid","hint":"","input_description":"<p>第一行一个整数$T(1 \\leq T \\leq 10000)$，代表数据组数。</p><p>接下来T行，每行$6$个整数，$x_1,y_1,x_2,y_2,x_3,y_3 (-10000 \\leq x_1,y_1,x_2,y_2,x_3,y_3 \\leq 10000)$代表给定的三个点。</p>","output_description":"<p>对于每组数据输出一个数$y$，代表使这三个点构成一个等腰三角形所需要移动的最短距离(与正确答案误差小于$10^{-6}$即视为正确)。</p>","samples_input":["2\n0 0 1 0 10 0\n0 0 1 0 0 1\n"],"samples_output":["1.0000000000\n0\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"晴天"},{"description":"<p>有$n$个旅店、$n-1$条路，保证任意两个旅店相互可达，每个旅店都有一个住宿价格$w$，一个旅行商人从旅店$u$走到旅店$v$，商人只要距离旅店$u$在$[L,R]$之间就会感觉累，感到累后只要经过合适的旅店就会进去住宿休息，价格低于$low$的旅店商人不喜欢，价格高于$high$的旅店商人又觉得太贵，也就是商人认为价格在$[low,high]$之间的旅店是合适的，此外商人还有一个奇怪的要求：“该旅店的价格奇偶性”必须和“距离旅店u的路程奇偶性”相同，否则也认为该旅店是不合适的。</p><p>给出旅店的分布图和各个旅店价格，旅行商人不知道他将在“从旅店$u$到旅店$v$的旅途&quot;中花费多少用于住宿，相信聪明的你一定能帮助他解决这个问题。</p>","difficulty":"Mid","hint":"<p>数据范围:</p><p>$1 \\leq n,m \\leq 100000$;</p><p>$1 \\leq a &lt; i$;</p><p>$1 \\leq b \\leq 100000$;</p><p>$1 \\leq w \\leq 1000000000$;</p><p>操作1：</p><p>$1 \\leq u \\leq n$;</p><p>$1 \\leq x \\leq 1000000000$;</p><p>操作2：</p><p>$1 \\leq u,v \\leq n$;</p><p>$1 \\leq L \\leq R \\leq 1000000000$;</p><p>$1 \\leq low \\leq high \\leq 1000000000$;</p>","input_description":"<p>单组输入;</p><p>一共$n+m+1$行。</p><p>第一行，一个整数$n$;</p><p>接下来第$i = 2 \\to n$行，每行$3$个整数，第$i$行，$a, b, w$分别表示旅店$i$与旅店$a$之间有一条长为$b$的路，旅店i的价格为$w$;</p><p>第$n+1$行，一个整数$m$;</p><p>第$n+2$到$n+1+m$行，每行格式有两种可能性：</p><ul><li><code>1 u x</code>：表示将旅店$u$的价格修改为$x$。</li><li><code>2 u v L R low high</code>：表示查询该旅行商人的住宿花费。</li></ul><p>（旅店$1$的价格初始化为$1$）</p>","output_description":"<p>对于每个操作$2$输出一个整数，表示该旅行商人的住宿花费。<br /></p>","samples_input":["3\n1 2 2\n1 3 3\n6\n2 2 2 2 2 2 2\n2 3 1 3 3 1 1\n2 3 2 1 100 1 100\n1 2 3\n2 3 2 1 100 1 100\n2 3 2 1 100 2 10\n"],"samples_output":["0\n1\n1\n4\n3\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"旅行商人"},{"description":"<p>ZD觉得自己近期进步了许多，他下定决心这个夏天要更加努力。LM想测试一下ZD，于是出了下面这一道题。</p><p>给定一个长度为$n$的数组，假设其最长严格上升子序列的长度为$m$（即存在$1 \\leq p_1 &lt; p_2 &lt; \\cdots &lt; p_m \\leq n$，使得$a_{p_1}&lt;a_{p_2}&lt; \\cdots &lt;a_{p_m}$），可能存在很多种严格上升子序列的长度为$m$，题目保证其最长严格上升子序列的数量不会超过$2^63$。</p><p>求总共有多少种方法，如果你能从这个数组中删除一个数，使得剩下的数相对顺序不变组成一个新数组，且这个数组的最长严格上升子序列的长度为$m-1$。</p>","difficulty":"Mid","hint":"","input_description":"<p>第一行一个整数$T(1 \\leq T \\leq 50)$，代表数据组数。</p><p>接下来$T$组数据，每组数据第一行是一个整数$n(1&lt;=n&lt;=100000)$，代表原数组长度。第二行为$n$个整数$a_i(1 \\leq a_i \\leq 1000000)$。</p>","output_description":"<p>对于每组数据输出一个整数$y$，代表从原数组中删除一个数使其最长严格上升子序列的长度减$1$的方案数。</p>","samples_input":["3\n1 2 3\n7\n1 5 6 2 1 4 1\n"],"samples_output":["3\n1\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"夏天"},{"description":"<p>武科大有沁湖，与黄家湖相连，是武科大的校内湖，湖中一座长桥连通南北两苑，<a href=\"http://www.wust.edu.cn\" target=\"_blank\">武科大</a>以沁湖为载体，每年举办沁湖龙舟赛、沁湖诗会、沁湖时光、沁湖讲堂、沁湖鱼宴等校园文化活动。沁湖边上也栽有很多花，小明知道后就一直想去赏花。现在小明得知在沁湖边上有$n$个点，这$n$个点从$1$到$n$顺时针为围成一圈，每个点栽有一颗花树。有四种花树：梅花（花期1-3月）、樱花（花期3-4月）、石楠花（花期4-5月）、桂花（花期9-10月），每种花只在自己的花期开花。小明给每个点标记一个值$p_i$，$p_i$的值表示改点是哪种花，$1$代表梅花，$2$代表樱花，$3$代表石楠花，$4$代表桂花。小明现在制定了m种观赏方案，每次选定一个月份$x$，在$x$月去赏花，在由于沁湖太大，小明就选了湖边两个点$u$、$v$，想着就欣赏从$u$到$v$沿途的花就好了，因为湖中有桥，现在他发现从$u$走到$v$有了几种不同的方式，他想知道沿途最多能看到多少棵树正在开花（走到一个点才能看见这个点的花是否开了，不能重复经过同一个点）。</p>","difficulty":"Low","hint":"","input_description":"<p>多组测试数据。</p><p>对于每组数据：</p><p>输入$n$，下一行输入$n$个数$p_1,p_2,\\cdots,p_n$。$(2 \\leq n \\leq 10^5，1 \\leq p_i \\leq 4)$。</p><p>接下来输入两个数$p$，$q$表示这两点之间有一座桥（$1 \\leq p,q \\leq n,p != q$）。输入$m$，接下来输入$m$行，每行包括$x,u,v$。（$1 \\leq m \\leq 10^5，1 \\leq x \\leq 12，1 \\leq u,v \\leq n，u != v$）</p>","output_description":"<p>对于$m$种观赏方案，每次输出能看到的最多的正在开花的树的数量，若数量为零输出<code>So Sad.</code>。每次输出占一行。</p>","samples_input":["10\n1 1 2 4 3 2 4 4 3 3\n3 9\n5\n1 1 5\n1 3 9 \n3 5 10\n7 1 10\n10 2 9\n"],"samples_output":["2\n2\n4\nSo Sad.\n3\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"一起去沁湖边赏花吧"},{"description":"<p>博士，您还有许多事情要处理，现在还不能休息哦。请您先统计下图中有多少<code>0</code>字符，相信您这种Master，Doctor连读的人一定能一眼看出来吧。</p>","difficulty":"Mid","hint":"","input_description":"<p>只有样例一组数据<br /></p>","output_description":"<p>输出一共有多少个<code>0</code>字符。</p>","samples_input":["                0\n               00 \n              0000 \n              0000 \n             00000 \n            0000000 \n           000000000                                                      0 \n           0000000000                                                   000 \n           00000000000                                                0000\n           00000000000                                              00000 \n           00000000000                                           000000 \n           00000000000                                         0000000 \n           00000000000                                     000000000 \n            0000000000                                 000000000000  \n             000000000                               0000000000000 \n               0000000                             0000000000000 \n                0000000                          0000000000000\n                 000000                         000000000000\n                  000000                      00000000000\n                   00000                     000000000\n                    00000                   00000000\n                     0000                  000000\n                      00000000000000000000000000\n                     0000000000000000000000000000\n"],"samples_output":["\n"],"source":"WUST2019校赛","tags":["校赛","2019校赛"],"title":"博士的任务"},{"description":"<p><span style=\"color: rgb(77, 77, 77);\">在WUST，C语言考试排名规则如下：首先按照考生AC题目数排序，如果AC题目数一样再按罚时排序。</span><br /></p><p>具体规定：</p><p>1、AC题数多的排在前面；</p><p>2、罚时少的排在前面</p>","difficulty":"Low","hint":"","input_description":"<p><span style=\"color: rgb(96, 98, 102);\">输入包括两部分：第一部分是一个数N(1≤</span><span style=\"color: rgb(96, 98, 102);\">N≤</span><span style=\"color: rgb(96, 98, 102);\">500)，表示参加比赛选手数接下来是N行，每行包括：考生的名字(不含空格，由大写字母组成，长度不超过50）、AC题数（正整数）、罚时（正整数）</span><br /></p>","output_description":"<p><span style=\"color: rgb(77, 77, 77);\">按输入的格式排序后输出,每个选手一行。</span><br /></p>","samples_input":["2\nJACK 3 200\nROSE 4 500"],"samples_output":["ROSE 4 500\nJACK 3 200"],"source":"","tags":["排序"],"title":"一起来AC"}]